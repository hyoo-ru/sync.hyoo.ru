{"version":3,"sources":["../../../../mam.jam.js","../../../../mam.ts","../../../hyoo.ts","../../../../mol/ambient/mol/ambient/ambient.ts","../../../../mol/delegate/mol/delegate/delegate.ts","../../../../mol/owning/mol/owning/owning.ts","../../../../mol/fail/mol/fail/fail.ts","../../../../mol/fail/hidden/mol/fail/hidden/hidden.ts","../../../../mol/type/writable/writable.ts","../../../../mol/object2/mol/object2/object2.ts","../../../../mol/wire/cursor/mol/wire/cursor/cursor.ts","../../../../mol/wire/pub/mol/wire/pub/pub.ts","../../../../mol/wire/sub/sub.ts","../../../../mol/wire/mol/wire/wire.ts","../../../../mol/dev/format/mol/dev/format/format.ts","../../../../mol/wire/pub/sub/mol/wire/pub/sub/sub.ts","../../../../mol/after/timeout/mol/after/timeout/timeout.ts","../../../../mol/after/frame/mol/after/frame/frame.node.ts","../../../../mol/wire/fiber/mol/wire/fiber/fiber.ts","../../../../mol/guid/mol/guid/guid.ts","../../../../mol/key/mol/key/key.ts","../../../../mol/compare/deep/mol/compare/deep/deep.ts","../../../../mol/wire/task/mol/wire/task/task.ts","../../../../mol/wire/method/mol/wire/method/method.ts","../../../../mol/wire/atom/mol/wire/atom/atom.ts","../../../../mol/type/tail/tail.ts","../../../../mol/wire/solo/mol/wire/solo/solo.ts","../../../../mol/wire/plex/mol/wire/plex/plex.ts","../../../../mol/mem/mol/mem/mem.ts","../../../../node/node.ts","../../../../node/node/node.node.ts","../../../../mol/charset/encode/mol/charset/encode/encode.ts","../../../../mol/int62/mol/int62/int62.ts","../../../../mol/dict/mol/dict/dict.ts","../../../../mol/data/value/value.ts","../../../../mol/data/setup/mol/data/setup/setup.ts","../../../../mol/diff/path/mol/diff/path/path.ts","../../../../mol/error/mix/mol/error/mix/mix.ts","../../../../mol/data/error/mol/data/error/error.ts","../../../../mol/data/enum/mol/data/enum/enum.ts","../../../../mol/crypto/native/mol/crypto/native/native.node.ts","../../../../mol/crypto/auditor/mol/crypto/auditor/auditor.ts","../../../crowd/peer/hyoo/crowd/peer/peer.ts","../../../../mol/charset/decode/mol/charset/decode/decode.ts","../../../crowd/unit/hyoo/crowd/unit/unit.ts","../../../crowd/time/hyoo/crowd/time/time.ts","../../../crowd/clock/hyoo/crowd/clock/clock.ts","../../../../mol/log3/mol/log3/log3.ts","../../../../mol/tree/mol/tree/tree.ts","../../../../mol/term/color/mol/term/color/color.ts","../../../../mol/log3/mol/log3/log3.node.ts","../../../../mol/object/mol/object/object.ts","../../../../mol/wrapper/mol/wrapper/wrapper.ts","../../../../mol/memo/mol/memo/memo.ts","../../../../mol/dom/context/mol/dom/context/context.ts","../../../../mol/dom/context/mol/dom/context/context.node.ts","../../../../mol/func/name/mol/func/name/name.ts","../../../../mol/dom/render/children/mol/dom/render/children/children.ts","../../../../mol/type/partial/deep/deep.ts","../../../../mol/jsx/mol/jsx/jsx.ts","../../../crowd/node/hyoo/crowd/node/node.tsx","../../../crowd/struct/hyoo/crowd/struct/struct.ts","../../../crowd/land/hyoo/crowd/land/land.ts","../../../../mol/const/mol/const/const.ts","../../../crowd/world/hyoo/crowd/world/world.ts","../../../../mol/state/arg/mol/state/arg/arg.node.ts","../../../../mol/env/mol/env/env.ts","../../../../mol/env/mol/env/env.node.ts","../../../../mol/exec/mol/exec/exec.node.ts","../hyoo/sync/server/server.ts","../../../../mol/test/mol/test/test.node.test.ts","../../../../mol/test/mol/test/test.test.ts","../../../../mol/log3/mol/log3/log3.test.ts","../../../../mol/type/error/error.ts","../../../../mol/type/assert/assert.test.ts","../../../../mol/type/assert/assert.ts","../../../../mol/type/equals/equals.test.ts","../../../../mol/type/equals/equals.ts","../../../../mol/type/partial/deep/deep.test.ts","../../../../mol/jsx/mol/jsx/jsx.test.tsx","../../../../mol/compare/deep/mol/compare/deep/deep.test.tsx","../../../../mol/dom/serialize/mol/dom/serialize/serialize.ts","../../../../mol/assert/mol/assert/assert.test.ts","../../../../mol/assert/mol/assert/assert.ts","../../../../mol/func/name/mol/func/name/name.test.ts","../../../../mol/delegate/mol/delegate/delegate.test.ts","../../../../mol/type/writable/writable.test.ts","../../../../mol/wire/pub/sub/mol/wire/pub/sub/sub.test.ts","../../../../mol/after/mock/mol/after/mock/mock.test.ts","../../../../mol/after/timeout/mol/after/timeout/timeout.test.ts","../../../../mol/after/frame/mol/after/frame/frame.test.ts","../../../../mol/wire/fiber/mol/wire/fiber/fiber.test.ts","../../../../mol/wire/sync/mol/wire/sync/sync.ts","../../../../mol/promise/mol/promise/promise.ts","../../../../mol/wait/timeout/mol/wait/timeout/timeout.ts","../../../../mol/wire/async/mol/wire/async/async.test.ts","../../../../mol/wire/async/mol/wire/async/async.ts","../../../../mol/type/tail/tail.test.ts","../../../../mol/wire/solo/mol/wire/solo/solo.test.ts","../../../../mol/wire/plex/mol/wire/plex/plex.test.ts","../../../../mol/wire/probe/mol/wire/probe/probe.test.ts","../../../../mol/wire/probe/mol/wire/probe/probe.ts","../../../../mol/charset/encode/mol/charset/encode/encode.test.ts","../../../../mol/data/setup/mol/data/setup/setup.test.ts","../../../../mol/diff/path/mol/diff/path/path.test.ts","../../../../mol/data/enum/mol/data/enum/enum.test.ts","../../../../mol/charset/decode/mol/charset/decode/decode.test.ts","../../../crowd/unit/hyoo/crowd/unit/unit.test.ts","../../../../mol/key/mol/key/key.test.tsx","../../../../mol/dict/mol/dict/dict.test.tsx","../../../crowd/clock/hyoo/crowd/clock/clock.test.ts","../../../../mol/reconcile/mol/reconcile/reconcile.test.tsx","../../../../mol/reconcile/mol/reconcile/reconcile.ts","../../../crowd/reg/hyoo/crowd/reg/reg.ts","../../../crowd/list/hyoo/crowd/list/list.ts","../../../../mol/const/mol/const/const.test.ts","../../../crowd/world/hyoo/crowd/world/world.test.ts","../../../../mol/object/mol/object/object.test.ts","../../../../mol/tree/mol/tree/tree.test.ts","../../../../mol/wire/log/mol/wire/log/log.ts","../../../../mol/wire/atom/mol/wire/atom/atom.test.ts","../../../../mol/type/merge/merge.test.ts","../../../../mol/type/merge/merge.ts","../../../../mol/type/intersect/intersect.test.ts","../../../../mol/type/intersect/intersect.ts","../../../../mol/type/override/override.ts","../../../../mol/unicode/unicode.ts","../../../../mol/regexp/mol/regexp/regexp.test.ts","../../../../mol/regexp/mol/regexp/regexp.ts","../../../crowd/tokenizer/hyoo/crowd/tokenizer/tokenizer.test.ts","../../../crowd/tokenizer/hyoo/crowd/tokenizer/tokenizer.ts","../../../crowd/text/hyoo/crowd/text/text.ts","../../../../mol/wrapper/mol/wrapper/wrapper.test.ts","../../../../mol/memo/mol/memo/memo.test.ts","../../../crowd/land/hyoo/crowd/land/land.test.ts"],"names":[],"mappings":"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","file":"node.test.js","sourcesContent":[null,"Error.stackTraceLimit = 50;\n\ndeclare let _$_: { new(): {} } & typeof globalThis\ndeclare class $ extends _$_ {}\n\nnamespace $ {\n\texport type $ = typeof $$\n\texport declare class $$ extends $ {}\n\tnamespace $$ {\n\t\texport type $$ = $\n\t}\n}\n\nmodule.exports = $\n",null,"namespace $ {\n\n\texport const $mol_ambient_ref : unique symbol = Symbol( '$mol_ambient_ref' )\n\n\t/** @deprecated use $ instead */\n\texport type $mol_ambient_context = $\n\n\texport function $mol_ambient( this : $ | void , overrides : Partial< $ > ) : $ {\n\t\treturn Object.setPrototypeOf( overrides , this || $ )\n\t}\n\n}\n","namespace $ {\n\n\tconst instances = new WeakSet< any >()\n\n\t/**\n\t * Proxy that delegates all to lazy returned target.\n\t * \n\t * \t$mol_delegate( Array.prototype , ()=> fetch_array() )\n\t */\n    export function $mol_delegate< Value extends object >(\n\t\tproto : Value ,\n\t\ttarget : ()=> Value ,\n\t) {\n\n\t\tconst proxy = new Proxy( proto , {\n\n\t\t\tget: ( _ , field )=> {\n\t\t\t\tconst obj = target()\n\t\t\t\tlet val = Reflect.get( obj , field )\n\t\t\t\tif( typeof val === 'function' ) {\n\t\t\t\t\tval = val.bind( obj )\n\t\t\t\t} \n\t\t\t\treturn val\n\t\t\t},\n\t\t\thas: ( _ , field )=> Reflect.has( target(), field ),\n\t\t\tset: ( _ , field , value )=> Reflect.set( target() , field , value ),\n\t\t\t\n\t\t\tgetOwnPropertyDescriptor: ( _ , field )=> Reflect.getOwnPropertyDescriptor( target() , field ),\n\t\t\townKeys: ()=> Reflect.ownKeys( target() ),\n\t\t\t\n\t\t\tgetPrototypeOf: ()=> Reflect.getPrototypeOf( target() ),\n\t\t\tsetPrototypeOf: ( _ , donor )=> Reflect.setPrototypeOf( target() , donor ),\n\t\t\t\n\t\t\tisExtensible: ()=> Reflect.isExtensible( target() ),\n\t\t\tpreventExtensions: ()=> Reflect.preventExtensions( target() ),\n\t\t\t\n\t\t\tapply: ( _ , self , args )=> Reflect.apply( target() as Function , self , args ),\n\t\t\tconstruct: ( _ , args , retarget )=> Reflect.construct( target() as Function , args , retarget ),\n\t\t\t\n\t\t\tdefineProperty: ( _ , field , descr )=> Reflect.defineProperty( target() , field , descr ),\n\t\t\tdeleteProperty: ( _ , field )=> Reflect.deleteProperty( target() , field ),\n\n\t\t} )\n\n\t\tinstances.add( proxy )\n\n\t\treturn proxy\n\n\t}\n\n\tReflect.defineProperty(\n\t\t$mol_delegate ,\n\t\tSymbol.hasInstance ,\n\t\t{\n\t\t\tvalue : ( obj : object )=> instances.has( obj ),\n\t\t},\n\t)\n\n}\n","namespace $ {\n\n\texport const $mol_owning_map = new WeakMap< any , any >()\n\n\texport function $mol_owning_allow< Having >(\n\t\thaving : Having ,\n\t) : having is Having & {\n\t\tdestructor() : void\n\t} {\n\t\ttry {\n\t\t\tif( !having ) return false\n\t\t\tif( typeof having !== 'object' ) return false\n\t\t\tif( having instanceof $mol_delegate ) return false\n\t\t\tif( typeof having['destructor'] !== 'function' ) return false\n\t\t\treturn true\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\texport function $mol_owning_get< Having , Owner extends object >( having : Having , Owner? : { new() : Owner } ) : Owner | null {\n\t\n\t\tif( !$mol_owning_allow( having ) ) return null\n\n\t\twhile( true ) {\n\n\t\t\tconst owner = $mol_owning_map.get( having )\n\t\t\tif( !owner ) return owner\n\t\t\tif( !Owner ) return owner\n\t\t\t\n\t\t\tif( owner instanceof Owner ) return owner\n\n\t\t\thaving = owner\n\t\t}\n\n\t}\n\t\n\texport function $mol_owning_check< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) : having is Having & { destructor() : void } {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) !== owner ) return false\n\t\treturn true\n\t}\n\t\n\texport function $mol_owning_catch< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) ) return false\n\n\t\t$mol_owning_map.set( having , owner )\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail( error : any ) : never {\n\t\tthrow error\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail_hidden( error : any ) : never {\n\t\tthrow error /// Use 'Never Pause Here' breakpoint in DevTools or simply blackbox this script\n\t}\n\n}\n",null,"namespace $ {\n\n\texport class $mol_object2 {\n\t\t\n\t\tstatic $ = $ as $\n\t\t\n\t\t[ $mol_ambient_ref ] = null as any as $\n\t\tget $() {\n\t\t\tif( this[ $mol_ambient_ref ] ) return this[ $mol_ambient_ref ]\n\t\t\tconst owner = $mol_owning_get( this ) as any\n\t\t\treturn this[ $mol_ambient_ref ] = owner?.$ || $mol_object2.$ as $\n\t\t}\n\t\tset $( next : $ ) {\n\t\t\tif( this[ $mol_ambient_ref ] ) $mol_fail_hidden( new Error( 'Context already defined' ) )\n\t\t\tthis[ $mol_ambient_ref ] = next\n\t\t}\n\n\t\tpublic static create< Instance >(\n\t\t\tthis : new( init? : ( instance : any )=> void )=> Instance ,\n\t\t\tinit? : ( instance : $mol_type_writable<Instance> )=> void\n\t\t) : Instance {\n\t\t\tconst obj = new this\n\t\t\tif( init ) init( obj )\n\t\t\treturn obj\n\t\t}\n\t\t\n\t\tstatic [ Symbol.toPrimitive ]() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\tstatic toString() {\n\t\t\tif( Symbol.toStringTag in this ) return this[ Symbol.toStringTag ]\n\t\t\treturn this.name\n\t\t}\n\t\t\n\t\tdestructor() { }\n\t\t\n\t\t//[ Symbol.toPrimitive ]( hint: string ) {\n\t\t//\treturn hint === 'number' ? this.valueOf() : this.toString()\n\t\t//}\n\t\t\n\t\ttoString() {\n\t\t\treturn this[ Symbol.toStringTag ] || this.constructor.name + '()'\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.toString()\n\t\t}\n\n\t}\n}\n","namespace $ {\n\t\n\t/** Special status statuses. */\n\texport enum $mol_wire_cursor {\n\t\t\n\t\t/** Update required. */\n\t\tstale = -1,\n\t\t\n\t\t/** Some of (transitive) pub update required. */\n\t\tdoubt = -2,\n\t\t\n\t\t/** Actual state but may be dropped. */\n\t\tfresh = -3,\n\t\t\n\t\t/** State will never be changed. */\n\t\tfinal = -4,\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/**\n\t * Collects subscribers in compact array. 28B\n\t */\n\texport class $mol_wire_pub extends Object {\n\t\t\n\t\tdata = [] as unknown[]\n\t\t\n\t\t// Derived objects should be Arrays.\n\t\tstatic get [ Symbol.species ]() {\n\t\t\treturn Array\n\t\t}\n\t\t\n\t\t/**\n\t\t * Index of first subscriber.\n\t\t */\n\t\tprotected sub_from = 0 // 4B\n\t\t\n\t\t/**\n\t\t * All current subscribers.\n\t\t */\n\t\tget sub_list() {\n\t\t\tconst res = [] as $mol_wire_sub[]\n\t\t\tfor( let i = this.sub_from; i < this.data.length; i += 2 ) {\n\t\t\t\tres.push( this.data[i] as $mol_wire_sub )\n\t\t\t}\n\t\t\treturn res as readonly $mol_wire_sub[]\n\t\t}\n\t\t\n\t\t/**\n\t\t * Has any subscribers or not.\n\t\t */\n\t\tget sub_empty() {\n\t\t\treturn this.sub_from === this.data.length\n\t\t}\n\t\t\n\t\t/**\n\t\t * Subscribe subscriber to this publisher events and return position of subscriber that required to unsubscribe.\n\t\t */\n\t\tsub_on( sub: $mol_wire_pub, pub_pos: number ) {\n\t\t\tconst pos = this.data.length\n\t\t\tthis.data.push( sub, pub_pos )\n\t\t\treturn pos\n\t\t}\n\t\t\n\t\t/**\n\t\t * Unsubscribe subscriber from this publisher events by subscriber position provided by `on(pub)`.\n\t\t */\n\t\tsub_off( sub_pos: number ) {\n\t\t\t\n\t\t\tif(!( sub_pos < this.data.length )) {\n\t\t\t\t$mol_fail( new Error( `Wrong pos ${ sub_pos }` ) )\n\t\t\t}\n\t\t\t\n\t\t\tconst end = this.data.length - 2\n\t\t\tif( sub_pos !== end ) {\n\t\t\t\tthis.peer_move( end, sub_pos )\n\t\t\t}\n\t\t\t\n\t\t\tthis.data.pop()\n\t\t\tthis.data.pop()\n\t\t\t\n\t\t\tif( this.data.length === this.sub_from ) this.reap()\n\t\t\t\n\t\t}\n\t\t\n\t\t/**\n\t\t * Called when last sub was unsubscribed.\n\t\t **/\n\t\treap() { }\n\t\t\n\t\t/**\n\t\t * Autowire this publisher with current subscriber.\n\t\t **/\n\t\tpromote() {\n\t\t\t$mol_wire_auto()?.track_next( this )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Enforce actualization. Should not throw errors.\n\t\t */\n\t\tfresh() {}\n\t\t\n\t\t/**\n\t\t * Allow to put data to caches in the subtree.\n\t\t */\n\t\tcomplete() {}\n\t\t\n\t\t/**\n\t\t * Notify subscribers about self changes.\n\t\t */\n\t\temit( quant = $mol_wire_cursor.stale ) {\n\t\t\tfor( let i = this.sub_from; i < this.data.length; i += 2 ) {\n\t\t\t\t;( this.data[i] as $mol_wire_sub ).absorb( quant )\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Moves peer from one position to another. Doesn't clear data at old position!\n\t\t */\n\t\tpeer_move( from_pos: number, to_pos: number ) {\n\t\t\t\n\t\t\tconst peer = this.data[ from_pos ] as $mol_wire_pub\n\t\t\tconst self_pos = this.data[ from_pos + 1 ] as number\n\t\t\t\n\t\t\tthis.data[ to_pos ] = peer\n\t\t\tthis.data[ to_pos + 1 ] = self_pos\n\t\t\t\n\t\t\tpeer.peer_repos( self_pos, to_pos )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Updates self position in the peer.\n\t\t */\n\t\tpeer_repos( peer_pos: number, self_pos: number ) {\n\t\t\tthis.data[ peer_pos + 1 ] = self_pos\n\t\t}\n\t\t\n\t}\n\t\n}\n",null,"namespace $ {\n\t\n\tlet auto: $mol_wire_sub | null = null\n\t\n\t/**\n\t * When fulfilled, all publishers are promoted to this subscriber on access to its.\n\t */\n\texport function $mol_wire_auto( next = auto ) {\n\t\treturn auto = next\n\t}\n\t\n\t/**\n\t * Affection queue. Used to prevent accidental stack overflow on emit.\n\t */\n\texport const $mol_wire_affected = [] as ( $mol_wire_sub | number )[]\n\t\n}\n","namespace $ {\n\n\t// https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview#\n\t$['devtoolsFormatters'] = $['devtoolsFormatters'] || []\n\n\texport function $mol_dev_format_register( config : {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> false\n\t} | {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> boolean\n\t\tbody : ( val : any , config : any )=> any\n\t} ) {\n\t\t$['devtoolsFormatters'].push( config )\n\t}\n\n\texport let $mol_dev_format_head = Symbol( '$mol_dev_format_head' )\n\texport let $mol_dev_format_body = Symbol( '$mol_dev_format_body' )\n\n\t$mol_dev_format_register({\n\n\t\theader : ( val : any , config = false ) => {\n\t\t\t\n\t\t\tif( config ) return null\n\n\t\t\tif( !val ) return null\n\t\t\t\n\t\t\tif( $mol_dev_format_head in val ) {\n\t\t\t\treturn val[ $mol_dev_format_head ]()\n\t\t\t}\n\t\t\t\n\t\t\tif( typeof val === 'function' ) {\n\t\t\t\treturn $mol_dev_format_native( val )\n\t\t\t}\n\n\t\t\treturn null\n\t\t\t\n\t\t} ,\n\t\t\n\t\thasBody : val => val[ $mol_dev_format_body ] ,\n\n\t\tbody : val => val[ $mol_dev_format_body ]() ,\n\n\t})\n\n\texport function $mol_dev_format_native( obj : any ) {\n\t\t\n\t\tif( typeof obj === 'undefined' ) return $mol_dev_format_shade( 'undefined' )\n\t\tif( typeof obj !== 'object' && typeof obj !== 'function' ) return obj\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : true ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_auto( obj : any ) {\n\t\t\n\t\tif( obj == null ) return $mol_dev_format_shade( String( obj ) )\n\n\t\tif( typeof obj === 'object' && $mol_dev_format_head in obj ) {\n\t\t\treturn obj[ $mol_dev_format_head ]()\n\t\t}\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : false ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_element( element : string , style : object , ...content : any[] ) {\n\t\t\t\n\t\tconst styles = [] as string[]\n\t\t\n\t\tfor( let key in style ) styles.push( `${ key } : ${ style[key] }` )\n\t\t\n\t\treturn [\n\t\t\telement ,\n\t\t\t{\n\t\t\t\tstyle : styles.join( ' ; ' ) ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_span( style : object , ...content : any[] ) {\n\t\treturn $mol_dev_format_element(\n\t\t\t'span' ,\n\t\t\t{\n\t\t\t\t'vertical-align' : '8%',\n\t\t\t\t... style ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t)\n\t}\n\n\texport let $mol_dev_format_div = $mol_dev_format_element.bind( null , 'div' )\n\texport let $mol_dev_format_ol = $mol_dev_format_element.bind( null , 'ol' )\n\texport let $mol_dev_format_li = $mol_dev_format_element.bind( null , 'li' )\n\texport let $mol_dev_format_table = $mol_dev_format_element.bind( null , 'table' )\n\texport let $mol_dev_format_tr = $mol_dev_format_element.bind( null , 'tr' )\n\texport let $mol_dev_format_td = $mol_dev_format_element.bind( null , 'td' )\n\n\texport let $mol_dev_format_accent = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'magenta' ,\n\t} )\n\n\texport let $mol_dev_format_strong = $mol_dev_format_span.bind( null , {\n\t\t'font-weight' : 'bold' ,\n\t} )\n\n\texport let $mol_dev_format_string = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'green',\n\t} )\n\n\texport let $mol_dev_format_shade = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'gray',\n\t} )\n\n\texport let $mol_dev_format_indent = $mol_dev_format_div.bind( null , {\n\t\t'margin-left': '13px'\n\t} )\n\n}\n","namespace $ {\n\t\n\t/**\n\t * Publisher that can auto collect other publishers. 32B\n\t * \n\t * \tP1 P2 P3 P4 S1 S2 S3\n\t * \t^           ^\n\t * \tpubs_from   subs_from\n\t */\n\texport class $mol_wire_pub_sub extends $mol_wire_pub implements $mol_wire_sub {\n\t\t\n\t\tprotected pub_from = 0 // 4B\n\t\tprotected cursor = $mol_wire_cursor.stale // 4B\n\t\t\n\t\tget pub_list() {\n\t\t\tconst res = [] as $mol_wire_pub[]\n\t\t\tconst max = this.cursor >=0 ? this.cursor : this.sub_from\n\t\t\tfor( let i = this.pub_from; i < max; i += 2 ) {\n\t\t\t\tres.push( this.data[i] as $mol_wire_pub )\n\t\t\t}\n\t\t\treturn res\n\t\t}\n\t\t\n\t\ttrack_on() {\n\t\t\tthis.cursor = this.pub_from\n\t\t\tconst sub = $mol_wire_auto()\n\t\t\t$mol_wire_auto( this )\n\t\t\treturn sub\n\t\t}\n\t\t\n\t\tpromote() {\n\t\t\t\n\t\t\tif( this.cursor >= this.pub_from ) {\n\t\t\t\t$mol_fail( new Error( 'Circular subscription' ) )\n\t\t\t}\n\t\t\t\n\t\t\tsuper.promote()\n\t\t}\n\t\t\n\t\ttrack_next( pub?: $mol_wire_pub ): $mol_wire_pub | null {\n\t\t\t\n\t\t\tif( this.cursor < 0 ) $mol_fail( new Error( 'Promo to non begun sub' ) )\n\t\t\t\n\t\t\tif( this.cursor < this.sub_from ) {\n\t\t\t\n \t\t\t\tconst next = this.data[ this.cursor ] as $mol_wire_pub | undefined\n\t\t\t\tif( pub === undefined ) return next ?? null\n\t\t\t\t\n\t\t\t\tif( next === pub ) {\n\t\t\t\t\tthis.cursor += 2\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( next ) {\n\t\t\t\t\t\n\t\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\t\tthis.peer_move( this.sub_from, this.data.length )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.peer_move( this.cursor, this.sub_from )\n\t\t\t\t\tthis.sub_from += 2\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif( pub === undefined ) return null\n\t\t\t\t\n\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\tthis.peer_move( this.sub_from, this.data.length )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.sub_from += 2\n\t\t\t\t\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tthis.data[ this.cursor ] = pub\n\t\t\tthis.data[ this.cursor + 1 ] = pub.sub_on( this, this.cursor )\n\t\t\t\n\t\t\tthis.cursor += 2\n\t\t\t\n\t\t\treturn pub\n\t\t}\n\t\t\n\t\ttrack_off( sub: $mol_wire_sub | null ) {\n\t\t\t\n\t\t\t$mol_wire_auto( sub )\n\t\t\t\n\t\t\tif( this.cursor < 0 ) {\n\t\t\t\t$mol_fail( new Error( 'End of non begun sub' ) )\n\t\t\t}\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.pub_from;\n\t\t\t\tcursor < this.cursor;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub\n\t\t\t\tpub.fresh()\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\n\t\t}\n\t\t\n\t\tpub_off( sub_pos: number ) {\n\t\t\tthis.data[ sub_pos ] = undefined as any\n\t\t\tthis.data[ sub_pos + 1 ] = undefined as any \n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.data.length - 2;\n\t\t\t\tcursor >= this.sub_from;\n\t\t\t\tcursor -= 2\n\t\t\t) {\n\t\t\t\tconst sub = this.data[ cursor ] as $mol_wire_sub\n\t\t\t\tconst pos = this.data[ cursor + 1 ] as number\n\t\t\t\tsub.pub_off( pos )\n\t\t\t\tthis.data.pop()\n\t\t\t\tthis.data.pop()\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = this.pub_from\n\t\t\tthis.track_cut()\n\t\t\tthis.cursor = $mol_wire_cursor.final\n\t\t\t\n\t\t}\n\t\t\n\t\ttrack_cut() {\n\t\t\t\n\t\t\tif( this.cursor < this.pub_from ) {\n\t\t\t\t$mol_fail( new Error( 'Cut of non begun sub' ) )\n\t\t\t}\n\t\t\t\n\t\t\tlet tail = 0\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.cursor;\n\t\t\t\tcursor < this.sub_from;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\t\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub | undefined\n\t\t\t\tpub?.sub_off( this.data[ cursor + 1 ] as number )\n\t\t\t\t\n\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\tthis.peer_move( this.data.length - 2, cursor )\n\t\t\t\t\tthis.data.pop()\n\t\t\t\t\tthis.data.pop()\n\t\t\t\t} else {\n\t\t\t\t\t++ tail\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor(; tail; -- tail ) {\n\t\t\t\tthis.data.pop()\n\t\t\t\tthis.data.pop()\n\t\t\t}\n\t\t\t\n\t\t\tthis.sub_from = this.cursor\n\t\t\t\n\t\t}\n\t\t\n\t\tcomplete() { }\n\t\t\n\t\tcomplete_pubs() {\n\t\t\t\n\t\t\tconst limit = this.cursor < 0 ? this.sub_from : this.cursor \n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.pub_from;\n\t\t\t\tcursor < limit;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub\n\t\t\t\tpub?.complete()\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tabsorb( quant = $mol_wire_cursor.stale ) {\n\t\t\t\n\t\t\tif( this.cursor === $mol_wire_cursor.final ) return\n\t\t\tif( this.cursor >= quant ) return\n\t\t\t\n\t\t\tthis.cursor = quant\n\t\t\tthis.emit( $mol_wire_cursor.doubt )\n\t\t\t\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_native( this )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Is subscribed to any publisher or not.\n\t\t */\n\t\tget pub_empty() {\n\t\t\treturn this.sub_from === this.pub_from\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_after_timeout extends $mol_object2 {\n\n\t\tid : any\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.id = setTimeout( task , delay )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tclearTimeout( this.id )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_after_frame extends $mol_after_timeout {\n\n\t\tconstructor(\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper( 16 , task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t\n\tconst handled = new WeakSet< Promise< unknown > >()\n\t\n\t/**\n\t * Suspendable task with support both sync/async api.\n\t * \n\t * \tA1 A2 A3 A4 P1 P2 P3 P4 S1 S2 S3\n\t * \t^           ^           ^\n\t * \targs_from   pubs_from   subs_from\n\t **/\n\texport abstract class $mol_wire_fiber<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_pub_sub {\n\t\t\n\t\tstatic warm = true\n\t\t\n\t\tstatic planning = new Set< $mol_wire_fiber< any, any, any > >()\n\t\tstatic reaping = new Set< $mol_wire_fiber< any, any, any > >()\n\t\t\n\t\tstatic plan_task: $mol_after_frame | null = null\n\t\tstatic plan() {\n\t\t\t\n\t\t\tif( this.plan_task ) return\n\t\t\t\n\t\t\tthis.plan_task = new $mol_after_frame( ()=> {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tthis.sync()\n\t\t\t\t} finally {\n\t\t\t\t\t$mol_wire_fiber.plan_task = null\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t\n\t\t}\n\t\t\n\t\tstatic sync() {\n\t\t\t\n\t\t\t// Sync whole fiber graph\n\t\t\twhile( this.planning.size ) {\n\t\t\t\tfor( const fiber of this.planning ) {\n\t\t\t\t\tthis.planning.delete( fiber )\n\t\t\t\t\tif( fiber.cursor >= 0 ) continue\n\t\t\t\t\tif( fiber.cursor === $mol_wire_cursor.final ) continue\n\t\t\t\t\tfiber.fresh()\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Collect garbage\n\t\t\twhile( this.reaping.size ) {\n\t\t\t\t\n\t\t\t\tconst fibers = this.reaping\n\t\t\t\tthis.reaping = new Set\n\t\t\t\t\n\t\t\t\tfor( const fiber of fibers ) {\n\t\t\t\t\tif( !fiber.sub_empty ) continue\n\t\t\t\t\tfiber.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic cache: Result | Error | Promise< Result | Error > = undefined as any\n\t\t\n\t\tget args() {\n\t\t\treturn this.data.slice( 0 , this.pub_from ) as any as Args\n\t\t}\n\t\t\n\t\tresult() {\n\t\t\tif( this.cache instanceof Promise ) return\n\t\t\tif( this.cache instanceof Error ) return\n\t\t\treturn this.cache\n\t\t}\n\t\t\n\t\tfield() {\n\t\t\treturn this.task.name + '()'\n\t\t}\n\t\t\n\t\tconstructor(\n\t\t\tid: string,\n\t\t\treadonly task: ( this : Host , ... args : Args )=> Result,\n\t\t\treadonly host?: Host,\n\t\t\targs?: Args\n\t\t) {\n\t\t\t\n\t\t\tsuper()\n\t\t\tif( args ) this.data.push( ... args )\n\t\t\tthis.pub_from = this.sub_from = args?.length ?? 0\n\t\t\tthis[ Symbol.toStringTag ] = id\n\t\t\t\n\t\t}\n\t\t\n\t\tplan() {\n\t\t\t$mol_wire_fiber.planning.add( this )\n\t\t\t$mol_wire_fiber.plan()\n\t\t}\n\t\t\n\t\treap() {\n\t\t\t$mol_wire_fiber.reaping.add( this )\n\t\t\t$mol_wire_fiber.plan()\n\t\t}\n\t\t\n\t\ttoString() {\n\t\t\treturn this[ Symbol.toStringTag ]\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this[ Symbol.toStringTag ]\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\t\n\t\t\tconst cursor = {\n\t\t\t\t[ $mol_wire_cursor.stale ]: '🔴',\n\t\t\t\t[ $mol_wire_cursor.doubt ]: '🟡',\n\t\t\t\t[ $mol_wire_cursor.fresh ]: '🟢',\n\t\t\t\t[ $mol_wire_cursor.final ]: '🔵',\n\t\t\t}[ this.cursor ] ?? this.cursor.toString()\n\t\t\t\n\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t$mol_dev_format_shade( cursor + ' ' ),\n\t\t\t\t$mol_dev_format_auto( this.cache ),\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\tget $() {\n\t\t\treturn ( this.host ?? this.task )['$']\n\t\t}\n\t\t\n\t\temit( quant = $mol_wire_cursor.stale ) {\n\t\t\tif( this.sub_empty ) this.plan()\n\t\t\telse super.emit( quant )\n\t\t}\n\t\t\n\t\tfresh() {\n\n\t\t\ttype Result = typeof this.cache\n\t\t\t\n\t\t\tif( this.cursor === $mol_wire_cursor.fresh ) return\n\t\t\tif( this.cursor === $mol_wire_cursor.final ) return\n\t\t\t\n\t\t\tcheck: if( this.cursor === $mol_wire_cursor.doubt ) {\n\t\t\t\t\n\t\t\t\tfor( let i = this.pub_from ; i < this.sub_from; i += 2 ) {\n\t\t\t\t\t;( this.data[i] as $mol_wire_pub )?.fresh()\n\t\t\t\t\tif( this.cursor !== $mol_wire_cursor.doubt ) break check\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\treturn\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst bu = this.track_on()\n\t\t\tlet result: typeof this.cache\n\n\t\t\ttry {\n\n\t\t\t\tswitch( this.pub_from ) {\n\t\t\t\t\tcase 0: result = (this.task as any).call( this.host! ); break\n\t\t\t\t\tcase 1: result = (this.task as any).call( this.host!, this.data[0] ); break\n\t\t\t\t\tdefault: result = (this.task as any).call( this.host!, ... this.args ); break\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( result instanceof Promise ) {\n\t\t\t\t\t\n\t\t\t\t\tconst put = ( res: Result )=> {\n\t\t\t\t\t\tif( this.cache === result ) this.put( res )\n\t\t\t\t\t\treturn res\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult = Object.assign( result.then( put, put ), {\n\t\t\t\t\t\tdestructor: result['destructor']\n\t\t\t\t\t} )\n\t\t\t\t\t\n\t\t\t\t\thandled.add( result )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch( error: any ) {\n\t\t\t\t\n\t\t\t\tif( error instanceof Error || error instanceof Promise ) {\n\t\t\t\t\tresult = error\n\t\t\t\t} else {\n\t\t\t\t\tresult = new Error( String( error ), { cause: error } )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( result instanceof Promise && !handled.has( result ) ) {\n\t\t\t\t\t\n\t\t\t\t\tresult = Object.assign( result.finally( ()=> {\n\t\t\t\t\t\tif( this.cache === result ) this.absorb()\n\t\t\t\t\t} ), {\n\t\t\t\t\t\tdestructor: result['destructor']\n\t\t\t\t\t} )\n\t\t\t\t\t\n\t\t\t\t\thandled.add( result )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif(!( result instanceof Promise )) {\n\t\t\t\tthis.track_cut()\n\t\t\t}\n\t\t\t\n\t\t\tthis.track_off( bu )\n\t\t\tthis.put( result )\n\n\t\t}\n\t\t\n\t\trefresh() {\n\t\t\tthis.cursor = $mol_wire_cursor.stale\n\t\t\tthis.fresh()\n\t\t}\n\t\t\n\t\tabstract put( next: Result | Error | Promise< Result | Error > ): Result | Error | Promise< Result | Error >\n\t\t\n\t\t/**\n\t\t * Synchronous execution. Throws Promise when waits async task (SuspenseAPI provider).\n\t\t * Should be called inside SuspenseAPI consumer (ie fiber).\n\t\t */\n\t\tsync() {\n\t\t\t\n\t\t\tif( !$mol_wire_fiber.warm ) {\n\t\t\t\treturn this.result() as Awaited< Result >\n\t\t\t}\n\t\t\t\n\t\t\tthis.promote()\n\t\t\tthis.fresh()\n\t\t\t\n\t\t\tif( this.cache instanceof Error ) {\n\t\t\t\treturn $mol_fail_hidden( this.cache )\n\t\t\t}\n\t\t\t\n\t\t\tif( this.cache instanceof Promise ) {\n\t\t\t\treturn $mol_fail_hidden( this.cache )\n\t\t\t}\n\t\t\t\n\t\t\treturn this.cache as Awaited< Result >\n\t\t}\n\n\t\t/**\n\t\t * Asynchronous execution.\n\t\t * It's SuspenseAPI consumer. So SuspenseAPI providers can be called inside.\n\t\t */\n\t\tasync async() {\n\t\t\t\n\t\t\twhile( true ) {\n\t\t\t\t\n\t\t\t\tthis.fresh()\n\t\t\t\t\n\t\t\t\tif( this.cache instanceof Error ) {\n\t\t\t\t\t$mol_fail_hidden( this.cache )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!( this.cache instanceof Promise )) return this.cache\n\t\t\t\t\t\n\t\t\t\tawait this.cache\n\t\t\t\t\t\n\t\t\t\tif( this.cursor === $mol_wire_cursor.final ) {\n\t\t\t\t\t// never ends on destructed fiber\n\t\t\t\t\tawait new Promise( ()=> {} )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Generates unique identifier. */\n\texport function $mol_guid(\n\t\tlength = 8,\n\t\texists: ( id: string )=> boolean = ()=> false,\n\t) {\n\n\t\tfor(;;) {\n\n\t\t\tlet id = Math.random().toString( 36 ).substring( 2, length + 2 ).toUpperCase()\n\t\t\tif( exists( id ) ) continue\n\t\t\t\n\t\t\treturn id\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport const $mol_key_store = new WeakMap< object, string >()\n\n\texport function $mol_key< Value >( value : Value ) : string {\n\t\t\n\t\tif( !value ) return JSON.stringify( value )\n\t\tif( typeof value !== 'object' && typeof value !== 'function' ) return JSON.stringify( value )\n\t\t\n\t\treturn JSON.stringify( value, ( field, value )=> {\n\t\t\t\n\t\t\tif( !value ) return value\n\t\t\tif( typeof value !== 'object' && typeof value !== 'function' ) return value\n\t\t\tif( Array.isArray( value ) ) return value\n\t\t\t\n\t\t\tconst proto = Reflect.getPrototypeOf( value )\n\t\t\tif( !proto ) return value\n\t\t\tif( Reflect.getPrototypeOf( proto ) === null ) return value\n\t\t\t\n\t\t\tif( 'toJSON' in value ) return value\n\t\t\tif( value instanceof RegExp ) return value.toString()\n\t\t\t\n\t\t\tlet key = $mol_key_store.get( value )\n\t\t\tif( key ) return key\n\t\t\t\n\t\t\tkey = $mol_guid()\n\t\t\t$mol_key_store.set( value, key )\n\t\t\t\n\t\t\treturn key\n\t\t} )\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport let $mol_compare_deep_cache = new WeakMap< any , WeakMap< any , boolean > >()\n\t\n\t/**\n\t * Deeply compares two values. Returns true if equal.\n\t * Define `Symbol.toPrimitive` to customize.\n\t */\n\texport function $mol_compare_deep< Value >( left: Value, right: Value ): boolean {\n\n\t\tif( Object.is( left , right ) ) return true\n\n\t\tif( left === null ) return false\n\t\tif( right === null ) return false\n\n\t\tif( typeof left !== 'object' ) return false\n\t\tif( typeof right !== 'object' ) return false\n\n\t\tconst left_proto = Reflect.getPrototypeOf( left as any )\n\t\tconst right_proto = Reflect.getPrototypeOf( right as any )\n\t\t\n\t\tif( left_proto !== right_proto ) return false\n\n\t\tif( left instanceof Boolean ) return Object.is( left.valueOf(), right['valueOf']() )\n\t\tif( left instanceof Number ) return Object.is( left.valueOf(), right['valueOf']() )\n\t\tif( left instanceof String ) return Object.is( left.valueOf(), right['valueOf']() )\n\t\tif( left instanceof Date ) return Object.is( left.valueOf(), right['valueOf']() )\n\t\tif( left instanceof RegExp ) return left.source === right['source'] && left.flags === right['flags']\n\t\tif( left instanceof Error ) return left.stack === right['stack']\n\n\t\tlet left_cache = $mol_compare_deep_cache.get( left )\n\t\tif( left_cache ) {\n\n\t\t\tconst right_cache = left_cache.get( right )\n\t\t\tif( typeof right_cache === 'boolean' ) return right_cache\n\n\t\t} else {\n\t\t\t\n\t\t\tleft_cache = new WeakMap< any , boolean >([[ right, true ]])\n\t\t\t$mol_compare_deep_cache.set( left , left_cache )\n\n\t\t}\n\n\t\tlet result!: boolean\n\n\t\ttry {\n\t\t\t\n\t\t\tif( left_proto && !Reflect.getPrototypeOf( left_proto ) ) result = compare_pojo( left, right as any )\n\t\t\telse if( Array.isArray( left ) ) result = compare_array( left, right as any )\n\t\t\telse if( left instanceof Set ) result = compare_set( left, right as any )\n\t\t\telse if( left instanceof Map ) result = compare_map( left, right as any )\n\t\t\telse if( ArrayBuffer.isView( left ) ) result = compare_buffer( left, right as any )\n\t\t\telse if( Symbol.toPrimitive in left ) result = compare_primitive( left, right )\n\t\t\telse result = false\n\n\t\t} finally {\n\t\t\tleft_cache.set( right , result )\n\t\t}\n\t\t\n\t\treturn result\n\t}\n\n\tfunction compare_array< Value extends any[] >( left: Value, right: Value ): boolean {\n\t\t\n\t\tconst len = left.length\n\t\tif( len !== right.length ) return false\n\t\t\n\t\tfor( let i = 0; i < len; ++i ) {\n\t\t\tif( !$mol_compare_deep( left[i] , right[i] ) ) return false\n\t\t}\n\t\t\n\t\treturn true\n\t}\n\t\n\tfunction compare_buffer( left: ArrayBufferView, right: ArrayBufferView ): boolean {\n\t\t\n\t\tconst len = left.byteLength\n\t\tif( len !== right.byteLength ) return false\n\t\t\n\t\tfor( let i = 0; i < len; ++i ) {\n\t\t\tif( left[i] !== right[i] ) return false\n\t\t}\n\t\t\n\t\treturn true\n\t}\n\t\n\tfunction compare_iterator< Value extends IterableIterator<any> >(\n\t\tleft: Value,\n\t\tright: Value,\n\t): boolean {\n\t\t\n\t\twhile( true ) {\n\n\t\t\tconst left_next = left.next()\n\t\t\tconst right_next = right.next()\n\n\t\t\tif( left_next.done !== right_next.done ) return false\n\t\t\tif( left_next.done ) break\n\n\t\t\tif( !$mol_compare_deep( left_next.value , right_next.value ) ) return false\n\n\t\t}\n\n\t\treturn true\n\n\t}\n\t\n\tfunction compare_set< Value extends Set<any> >( left: Value, right: Value ): boolean {\n\t\tif( left.size !== right.size ) return false\n\t\treturn compare_iterator( left.values(), right.values() )\n\t}\n\t\n\tfunction compare_map< Key, Value >( left: Map< Key, Value > , right: Map< Key, Value > ): boolean {\n\t\tif( left.size !== right.size ) return false\n\t\treturn compare_iterator( left.keys(), right.keys() )\n\t\t\t&& compare_iterator( left.values(), right.values() )\n\t}\n\t\n\tfunction compare_pojo( left: {}, right: {} ): boolean {\n\t\t\n\t\tconst left_keys = Object.getOwnPropertyNames( left )\n\t\tconst right_keys = Object.getOwnPropertyNames( right )\n\t\t\n\t\tif( left_keys.length !== right_keys.length ) return false\n\n\t\tfor( let key of left_keys ) {\n\t\t\tif( !$mol_compare_deep( left[ key ], Reflect.get( right, key ) ) ) return false\n\t\t}\n\n\t\treturn true\n\t}\n\t\n\tfunction compare_primitive( left: {}, right: {} ): boolean {\n\t\treturn Object.is(\n\t\t\tleft[ Symbol.toPrimitive ]( 'default' ),\n\t\t\tright[ Symbol.toPrimitive ]( 'default' ),\n\t\t)\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_wire_task<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_fiber< Host, Args, Result > {\n\t\t\n\t\tstatic getter<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\ttask: ( this : Host , ... args : Args )=> Result,\n\t\t): ( host: Host, args: Args )=> $mol_wire_task< Host, [ ... Args ], Result > {\n\t\t\t\n\t\t\treturn function $mol_wire_task_get( host: Host, args: Args ) {\n\t\t\t\t\n\t\t\t\tconst sub = $mol_wire_auto()\n\t\t\t\tconst existen = sub?.track_next()\n\t\t\t\n\t\t\t\treuse: if( existen ) {\n\t\t\t\t\t\n\t\t\t\t\tif(!( existen instanceof $mol_wire_task )) break reuse\n\t\t\t\t\n\t\t\t\t\tif( existen.host !== host ) break reuse\n\t\t\t\t\tif( existen.task !== task ) break reuse\n\t\t\t\t\tif( !$mol_compare_deep( existen.args, args ) ) break reuse\n\t\t\t\t\t\n\t\t\t\t\treturn existen\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Disabled because non-idempotency is required for try-catch\n\t\t\t\t// if( existen && sub instanceof $mol_wire_task ) {\n\t\t\t\t// \t$mol_fail( new Error( `$mol_wire_task detects nonidempotency\\n${existen}` ) )\n\t\t\t\t// }\n\t\t\t\t\n\t\t\t\treturn new $mol_wire_task( `${ host?.[ Symbol.toStringTag ] ?? host }.${ task.name }(#)`, task, host, args )\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tcomplete() {\n\t\t\tthis.destructor()\n\t\t}\n\t\t\n\t\tput( next: Result | Error | Promise< Result | Error > ) {\n\t\t\t\n\t\t\tconst prev = this.cache\n\t\t\tthis.cache = next\n\t\t\t\n\t\t\tif( next instanceof Promise ) {\n\t\t\t\t\n\t\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\tif( next !== prev ) this.emit()\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_wire_cursor.final\n\t\t\t\n\t\t\tif( this.sub_empty ) this.destructor()\n\t\t\telse if( next !== prev ) this.emit()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_wire_method<\n\t\tHost extends object,\n\t\tArgs extends readonly any[],\n\t\tResult,\n\t>(\n\t\thost : Host,\n\t\tfield : PropertyKey,\n\t\tdescr? : TypedPropertyDescriptor< ( ... args: Args )=> Result >,\n\t) {\n\t\t\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field )\n\t\tconst orig = descr?.value! ?? host[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\t\n\t\tif( typeof sup[ field as any ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : sup[ field as any ].name } )\n\t\t}\n\t\t\n\t\tconst temp = $mol_wire_task.getter( orig )\n\t\tconst value = function( this: Host, ... args: Args ) {\n\t\t\tconst fiber = temp( this ?? null as any, args )\n\t\t\treturn fiber.sync() as Result\n\t\t}\n\t\t\n\t\tObject.defineProperty( value , 'name' , { value : orig.name + ' ' } )\n\t\t\n\t\tObject.assign( value, { orig } )\n\t\tconst descr2 = { ... descr, value }\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_wire_atom<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_fiber< Host, Args, Result > {\n\n\t\tstatic solo<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\thost: Host,\n\t\t\ttask: ( this: Host, ... args: Args )=> Result,\n\t\t): $mol_wire_atom< Host, Args, Result > {\n\t\t\t\n\t\t\tconst field = task.name + '()'\n\t\t\t\n\t\t\tconst existen = Object.getOwnPropertyDescriptor( host ?? task, field )?.value\n\t\t\tif( existen ) return existen\n\t\t\t\n\t\t\tconst key = `${ host?.[ Symbol.toStringTag ] ?? host }.${ field }`\n\t\t\t\n\t\t\tconst fiber = new $mol_wire_atom( key, task, host, [] as any as Args )\n\t\t\t;( host ?? task )[ field ] = fiber\n\t\t\t\n\t\t\treturn fiber\n\t\t}\n\t\t\n\t\tstatic plex<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\thost: Host,\n\t\t\ttask: ( this: Host , ... args: Args )=> Result,\n\t\t\tkey: Args[0],\n\t\t): $mol_wire_atom< Host, Args, Result > {\n\t\t\t\n\t\t\tconst field = task.name + '()'\n\t\t\tlet dict = Object.getOwnPropertyDescriptor( host ?? task, field )?.value\n\t\t\tconst id = `${ host?.[ Symbol.toStringTag ] ?? host }.${ task.name }(${ $mol_key( key ) })`\n\t\t\t\n\t\t\tif( dict ) {\n\t\t\t\tconst existen = dict.get( id )\n\t\t\t\tif( existen ) return existen\n\t\t\t} else {\n\t\t\t\tdict = ( host ?? task )[ field ] = new Map<any,any>()\n\t\t\t}\n\t\t\t\n\t\t\tconst fiber = new $mol_wire_atom( id, task, host, [ key ] as any as Args )\n\t\t\tdict.set( id, fiber )\n\t\t\t\n\t\t\treturn fiber\n\t\t}\n\t\t\n\t\tstatic watching = new Set< $mol_wire_atom< any, any, any > >()\n\t\t\n\t\tstatic watch() {\n\t\t\n\t\t\tnew $mol_after_frame( $mol_wire_atom.watch )\n\t\t\t\n\t\t\tfor( const atom of $mol_wire_atom.watching ) {\n\t\t\t\t\n\t\t\t\tif( atom.cursor === $mol_wire_cursor.final ) {\n\t\t\t\t\t$mol_wire_atom.watching.delete( atom )\n\t\t\t\t} else {\n\t\t\t\t\tatom.cursor = $mol_wire_cursor.stale\n\t\t\t\t\tatom.fresh()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twatch() {\n\t\t\t$mol_wire_atom.watching.add( this )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Update fiber value through another temp fiber.\n\t\t */\n\t\t@ $mol_wire_method\n\t\tresync( args: Args ) {\n\t\t\treturn this.put( this.task.call( this.host!, ... args ) )\n\t\t}\n\t\t\n\t\t@ $mol_wire_method\n\t\tonce() {\n\t\t\treturn this.sync()\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t\n\t\t\tsuper.destructor()\n\t\t\t\n\t\t\tconst prev = this.cache\n\t\t\tif( $mol_owning_check( this, prev ) ) {\n\t\t\t\tprev.destructor()\n\t\t\t}\n\t\t\t\n\t\t\tif( this.pub_from === 0 ) {\n\t\t\t\t;( this.host ?? this.task )[ this.field() ] = null\n\t\t\t} else {\n\t\t\t\t;( this.host ?? this.task )[ this.field() ].delete( this[ Symbol.toStringTag ] )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tput( next: Result | Error | Promise< Result | Error > ) {\n\t\t\t\n\t\t\tconst prev = this.cache\n\t\t\t\n\t\t\tif( next !== prev ) {\n\t\t\t\t\n\t\t\t\tif( $mol_owning_check( this, prev ) ) {\n\t\t\t\t\tprev.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cache = next\n\t\t\t\t\n\t\t\t\tif( $mol_owning_catch( this, next ) ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnext[ Symbol.toStringTag ] = this[ Symbol.toStringTag ]\n\t\t\t\t\t} catch {} // Promises throws in strict mode\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\tif( !$mol_compare_deep( prev, next ) ) {\n\t\t\t\t\t\tthis.emit()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\n\t\t\tif( next instanceof Promise ) return next\n\t\t\t\n\t\t\tthis.complete_pubs()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t}\n\t\n\t$mol_wire_atom.watch()\n\t\n}\n",null,"namespace $ {\n\t\n\texport function $mol_wire_solo< Args extends any[] >(\n\t\thost: object,\n\t\tfield: string,\n\t\tdescr?: TypedPropertyDescriptor< ( ... args: Args )=> any >\n\t) {\n\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field )\n\t\tconst orig = descr?.value! ?? host[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\n\t\tif( typeof sup[ field ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : sup[ field ].name } )\n\t\t}\n\t\t\n\t\tconst descr2 = {\n\t\t\t... descr,\n\t\t\tvalue: function( this: typeof host, ... args: Args ){\n\t\t\t\n\t\t\t\tlet atom = $mol_wire_atom.solo( this, orig )\n\t\t\t\t\n\t\t\t\tif(( args.length === 0 )||( args[0] === undefined )) {\n\t\t\t\t\t\n\t\t\t\t\tif( !$mol_wire_fiber.warm ) return atom.result()\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_wire_auto() instanceof $mol_wire_task ) {\n\t\t\t\t\t\treturn atom.once()\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn atom.sync()\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn atom.resync( args )\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tReflect.defineProperty( descr2.value , 'name' , { value : orig.name + ' ' } )\n\t\tObject.assign( descr2.value, { orig } )\n\t\t\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2 as any as TypedPropertyDescriptor< ( ... args: First_optional< Args > )=> any >\n\t}\n\n\ttype First_optional< Args extends any[] > =  Args extends []\n\t\t? []\n\t\t: [ Args[0] | undefined, ... $mol_type_tail< Args > ]\n\n}\n","namespace $ {\n\t\n\texport function $mol_wire_plex< Args extends [ any, ... any[] ] >(\n\t\thost: object,\n\t\tfield: string,\n\t\tdescr?: TypedPropertyDescriptor< ( ... args: Args )=> any >\n\t) {\n\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field )\n\t\tconst orig = descr?.value! ?? host[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\n\t\tif( typeof sup[ field ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : sup[ field ].name } )\n\t\t}\n\t\t\n\t\tconst descr2 = {\n\t\t\t... descr,\n\t\t\tvalue: function( this: typeof host, ... args: Args ) {\n\t\t\t\n\t\t\t\tlet atom = $mol_wire_atom.plex( this, orig, args[0] )\n\t\t\t\t\n\t\t\t\tif(( args.length === 1 )||( args[1] === undefined )) {\n\t\t\t\t\t\n\t\t\t\t\tif( !$mol_wire_fiber.warm ) return atom.result()\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_wire_auto() instanceof $mol_wire_task ) {\n\t\t\t\t\t\treturn atom.once()\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn atom.sync()\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn atom.resync( args )\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tReflect.defineProperty( descr2.value , 'name' , { value : orig.name + ' ' } )\n\t\tObject.assign( descr2.value, { orig } )\n\t\t\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2\n\t}\n\t\n}\n","namespace $ {\n\texport let $mol_mem = $mol_wire_solo\n\texport let $mol_mem_key = $mol_wire_plex\n}\n",null,"interface $node {\n\t[key:string]: any\n}\n\nvar $node = new Proxy( { require } as any , {\n\t\n\tget( target , name : string , wrapper ) {\n\n\t\tif( target[ name ] ) return target[ name ]\n\n\t\tconst mod = target.require( 'module' ) as typeof import( 'module' )\n\t\t\n\t\tif( mod.builtinModules.indexOf( name ) >= 0 ) return target.require( name )\n\t\tif( name[0] === '.' ) return target.require( name )\n\t\t\n\t\tconst path = target.require( 'path' ) as typeof import( 'path' )\n\t\tconst fs = target.require( 'fs' ) as typeof import( 'fs' )\n\n\t\tlet dir = path.resolve( '.' )\n\t\tconst suffix = `./node_modules/${ name }`\n\n\t\tconst $$ = ( $ as any )\n\t\t\n\t\twhile( !fs.existsSync( path.join( dir , suffix ) ) ) {\n\n\t\t\tconst parent = path.resolve( dir , '..' )\n\n\t\t\tif( parent === dir ) {\n\n\t\t\t\t$$.$mol_exec( '.' , 'npm' , 'install' , '--omit=dev', name )\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t$$.$mol_exec( '.' , 'npm' , 'install' , '--omit=dev', '@types/' + name )\n\t\t\t\t} catch {}\n\n\t\t\t\tbreak\n\n\t\t\t} else {\n\n\t\t\t\tdir = parent\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\treturn target.require( name )\n\n\t},\n\n\tset( target , name : string , value ) {\n\t\ttarget[ name ] = value\n\t\treturn true\n\t},\n\n} ) as $node\n\nrequire = ( req =>\n\tObject.assign( function require( name : string ) {\n\t\treturn $node[ name ]\n\t} , req )\n)( require )\n\n","namespace $ {\n\tconst TextEncoder = globalThis.TextEncoder ?? $node.util.TextEncoder\n\n\tconst encoder = new TextEncoder()\n\n\texport function $mol_charset_encode(value: string) {\n\t\treturn encoder.encode(value)\n\t}\n\n}\n","namespace $ {\n\t\n\texport type $mol_int62_pair = {\n\t\treadonly lo: number,\n\t\treadonly hi: number,\n\t}\n\t\n\texport const $mol_int62_max = ( 2 ** 30 ) - 1\n\texport const $mol_int62_min = - ( 2 ** 30 )\n\texport const $mol_int62_range = $mol_int62_max - $mol_int62_min + 1\n\t\n\texport function $mol_int62_to_string( { lo, hi }: $mol_int62_pair ) {\n\t\tlo = ( lo + $mol_int62_range ) % $mol_int62_range\n\t\thi = ( hi + $mol_int62_range ) % $mol_int62_range\n\t\treturn `${ lo.toString(36) }_${ hi.toString(36) }` as const\n\t}\n\n\texport function $mol_int62_from_string( str: string ): $mol_int62_pair {\n\t\tconst [ lo, hi ] = str.split( '_' )\n\t\treturn {\n\t\t\tlo: ( parseInt( lo, 36 ) - $mol_int62_min ) % $mol_int62_range + $mol_int62_min,\n\t\t\thi: ( parseInt( hi, 36 ) - $mol_int62_min ) % $mol_int62_range + $mol_int62_min,\n\t\t} as const\n\t}\n\n\texport function $mol_int62_compare(\n\t\tleft_lo: number,\n\t\tleft_hi: number,\n\t\tright_lo: number,\n\t\tright_hi: number,\n\t) {\n\t\treturn ( right_hi - left_hi ) || ( right_lo - left_lo )\n\t}\n\n\texport function $mol_int62_inc(\n\t\tlo: number,\n\t\thi: number,\n\t\tmax = $mol_int62_max,\n\t): $mol_int62_pair {\n\t\tif( lo === max ) {\n\t\t\treturn { lo: -max, hi: hi + 1 }\n\t\t} else {\n\t\t\treturn { lo: lo + 1, hi }\n\t\t}\n\t}\n\n\texport function $mol_int62_random(): $mol_int62_pair {\n\t\treturn {\n\t\t\tlo: Math.floor( Math.random() * $mol_int62_range + $mol_int62_min ),\n\t\t\thi: Math.floor( Math.random() * $mol_int62_range + $mol_int62_min ),\n\t\t}\n\t}\n\n\texport function $mol_int62_hash_string( str: string, seed_lo = 0, seed_hi = 0 ) {\n\t\treturn $mol_int62_hash_buffer( $mol_charset_encode( str ), seed_lo, seed_hi )\n\t}\n\t\n\texport function $mol_int62_hash_buffer( buf: Uint8Array, seed_lo = 0, seed_hi = 0 ): $mol_int62_pair {\n\t\t\n\t\tlet h1 = 0xdeadbeef ^ seed_lo\n\t\tlet h2 = 0x41c6ce57 ^ seed_hi\n\t\t\n\t\tfor( const byte of buf ) {\n\t\t\th1 = Math.imul( h1 ^ byte, 2654435761 )\n\t\t\th2 = Math.imul( h2 ^ byte, 1597334677 )\n\t\t}\n\t\t\n\t\th1 = Math.imul( h1 ^ ( h1 >>> 16 ), 2246822507 ) ^ Math.imul( h2 ^ ( h2 >>> 13 ), 3266489909 )\n\t\th2 = Math.imul( h2 ^ ( h2 >>> 16 ), 2246822507 ) ^ Math.imul( h1 ^ ( h1 >>> 13 ), 3266489909 )\n\t\t\n\t\treturn { lo: h1 << 1 >> 1, hi: h2 << 1 >> 1 }\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** @deprecated */\n\texport let $mol_dict_key = $mol_key\n\n\texport class $mol_dict< Key , Value > extends Map< Key , Value > {\n\n\t\tget( key : Key ) {\n\t\t\treturn super.get( $mol_key( key ) as any )\n\t\t}\n\n\t\thas( key : Key ) {\n\t\t\treturn super.has( $mol_key( key ) as any )\n\t\t}\n\n\t\tset( key : Key , value : Value ) {\n\t\t\treturn super.set( $mol_key( key ) as any , value )\n\t\t}\n\n\t\tdelete( key : Key ) {\n\t\t\treturn super.delete( $mol_key( key ) as any )\n\t\t}\n\n\t\tforEach( back : ( value : Value , key : Key , dict : Map< Key , Value > ) => void , context? : any ) {\n\t\t\treturn super.forEach( ( val , key , dict )=> {\n\t\t\t\tif( typeof key === 'string' ) key = JSON.parse( key )\n\t\t\t\treturn back.call( this , val , key , dict )\n\t\t\t} , context )\n\t\t}\n\n\t\tkeys() {\n\t\t\tconst iterator = super.keys()\n\t\t\t\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]() {\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tnext() {\n\t\t\t\t\t\n\t\t\t\t\tconst iteration = iterator.next()\n\t\t\t\t\tif( iteration.done ) return iteration\n\t\t\t\t\t\n\t\t\t\t\titeration.value = JSON.parse( iteration.value as any as string )\n\t\t\t\t\treturn iteration\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tentries() {\n\t\t\tconst iterator = super.entries()\n\t\t\t\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]() {\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tnext() {\n\t\t\t\t\t\n\t\t\t\t\tconst iteration = iterator.next()\n\t\t\t\t\tif( iteration.done ) return iteration\n\t\t\t\t\t\n\t\t\t\t\titeration.value = [ JSON.parse( iteration.value[0] as any as string ), iteration.value[1] ]\n\t\t\t\t\t// iteration.value[0] = JSON.parse( iteration.value[0] as any as string )\n\t\t\t\t\treturn iteration\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.entries()\n\t\t}\n\t\t\n\t}\n\n}\n",null,"namespace $ {\n\n\texport function $mol_data_setup<\n\t\tValue extends $mol_data_value ,\n\t\tConfig = never\n\t>(\n\t\tvalue : Value ,\n\t\tconfig : Config ,\n\t) {\n\t\t\n\t\treturn Object.assign( value , {\n\t\t\tconfig ,\n\t\t\tValue : null as any as ReturnType< Value >\n\t\t} )\n\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_diff_path< Item >( ... paths : Item[][] ) {\n\n\t\tconst limit = Math.min( ... paths.map( path => path.length ) )\n\n\t\tlookup: for( var i = 0 ; i < limit ; ++i ) {\n\n\t\t\tconst first = paths[0][i]\n\n\t\t\tfor( let j = 1 ; j < paths.length ; ++j ) {\n\t\t\t\tif( paths[j][i] !== first ) break lookup\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tprefix : paths[0].slice( 0 , i ) ,\n\t\t\tsuffix : paths.map( path => path.slice( i ) ) ,\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_error_mix extends Error {\n\n\t\terrors : Error[]\n\n\t\tconstructor( message : string , ... errors : Error[] ) {\n\n\t\t\tsuper( message )\n\t\t\t\n\t\t\tthis.errors = errors\n\n\t\t\tif( errors.length ) {\n\n\t\t\t\tconst stacks = [ ... errors.map( error => error.stack ) , this.stack ]\n\t\t\t\t\n\t\t\t\tconst diff = $mol_diff_path( ... stacks.map( stack => {\n\t\t\t\t\tif( !stack ) return []\n\t\t\t\t\treturn stack.split( '\\n' ).reverse()\n\t\t\t\t} ) )\n\t\t\t\t\n\t\t\t\tconst head = diff.prefix.reverse().join( '\\n' )\n\t\t\t\tconst tails = diff.suffix.map( path => path.reverse().map( line => line.replace( /^(?!\\s+at)/ , '\\tat (.) ' ) ).join( '\\n' ) ).join( '\\n\\tat (.) -----\\n' )\n\n\t\t\t\tthis.stack = `Error: ${ this.constructor.name }\\n\\tat (.) /\"\"\"\\\\\\n${ tails }\\n\\tat (.) \\\\___/\\n${ head }`\n\t\t\t\tthis.message += errors.map( error => '\\n' + error.message ).join( '' )\n\n\t\t\t}\n\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.message\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_data_error extends $mol_error_mix {}\n\n}\n","namespace $ {\n\n\texport function $mol_data_enum<\n\t\tDict extends Record< number | string , number | string >\n\t>( name : string , dict : Dict ) {\n\n\t\ttype Value = Dict[ keyof Dict ]\n\n\t\tconst index = {} as Record< Value , keyof Dict >\n\n\t\tfor( let key in dict ) {\n\t\t\tif( Number.isNaN( Number( key ) ) ) {\n\t\t\t\tindex[ dict[ key ] ] = key\n\t\t\t}\n\t\t}\n\n\t\treturn $mol_data_setup( ( value : Value ) => {\n\n\t\t\tif ( typeof index[ value ] !== 'string' ) {\n\t\t\t\treturn $mol_fail( new $mol_data_error( `${value} is not value of ${name} enum` ) )\n\t\t\t}\n\n\t\t\treturn value\n\n\t\t} , { name , dict } )\n\n\t}\n\t\n}\n","namespace $ {\n\texport var $mol_crypto_native = $node.crypto.webcrypto\n}\n","namespace $ {\n\n\t/** @FIXME Need polyfill for Safari and Node (https://github.com/microsoft/MSR-JavaScript-Crypto/) */\n\tconst algorithm = {\n\t\tname: 'ECDSA',\n\t\thash: 'SHA-256',\n\t\tnamedCurve: \"P-256\",\n\t}\n\t\n\t/** Asymmetric signing pair with shortest payload */\n\texport async function $mol_crypto_auditor_pair( this: $ ) {\n\t\t\n\t\tconst pair = await $mol_crypto_native.subtle.generateKey(\n\t\t\talgorithm,\n\t\t\ttrue,\n\t\t\t[ 'sign', 'verify' ]\n\t\t)\n\t\t\n\t\treturn {\n\t\t\t\n\t\t\tpublic: new $mol_crypto_auditor_public(\n\t\t\t\tpair.publicKey as CryptoKey & { type: 'public' }\n\t\t\t),\n\t\t\t\n\t\t\tprivate: new $mol_crypto_auditor_private(\n\t\t\t\tpair.privateKey as CryptoKey & { type: 'private' }\n\t\t\t),\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t/** Asymmetric signing public key wrapper with shortest payload */\n\texport class $mol_crypto_auditor_public extends Object {\n\t\t\n\t\t/** Key size in bytes. */\n\t\tstatic size = 91\n\t\t\n\t\tconstructor(\n\t\t\treadonly native: CryptoKey & { type: 'public' }\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tstatic async from( serial: BufferSource ) {\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.importKey(\n\t\t\t\t\t'spki',\n\t\t\t\t\tserial,\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'verify' ],\n\t\t\t\t) as CryptoKey & { type: 'public' }\n\t\t\t)\n\t\t}\n\t\t\n\t\t/** 62 bytes */\n\t\tasync serial() {\n\t\t\treturn await $mol_crypto_native.subtle.exportKey(\n\t\t\t\t'spki',\n\t\t\t\tthis.native,\n\t\t\t)\n\t\t}\n\t\t\n\t\tasync verify( data: BufferSource, sign: BufferSource ) {\n\t\t\treturn await $mol_crypto_native.subtle.verify(\n\t\t\t\talgorithm,\n\t\t\t\tthis.native,\n\t\t\t\tsign,\n\t\t\t\tdata,\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\t/** Asymmetric signing private key wrapper with shortest payload */\n\texport class $mol_crypto_auditor_private extends Object {\n\t\t\n\t\t/** Max key size in bytes. */\n\t\tstatic size = 200\n\t\t\n\t\tconstructor(\n\t\t\treadonly native: CryptoKey & { type: 'private' }\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\n\t\tstatic async from( serial: BufferSource ) {\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.importKey(\n\t\t\t\t\t'pkcs8',\n\t\t\t\t\tserial,\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'sign' ],\n\t\t\t\t) as CryptoKey & { type: 'private' }\n\t\t\t)\n\t\t}\n\t\t\n\t\t/** 190-200 bytes */\n\t\tasync serial() {\n\t\t\treturn await $mol_crypto_native.subtle.exportKey(\n\t\t\t\t'pkcs8',\n\t\t\t\tthis.native,\n\t\t\t)\n\t\t}\n\t\t\n\t\t/** 32 bytes */\n\t\tasync sign( data: BufferSource ) {\n\t\t\t\n\t\t\treturn await $mol_crypto_native.subtle.sign(\n\t\t\t\talgorithm,\n\t\t\t\tthis.native,\n\t\t\t\tdata\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t/** Sign size in bytes. */\n\texport const $mol_crypto_auditor_sign_size = 64\n\t\n}\n","namespace $ {\n\t\n\texport enum $hyoo_crowd_peer_level {\n\t\tget = 0,\n\t\tadd = 1,\n\t\tmod = 2,\n\t\tlaw = 3,\n\t}\n\t\n\texport class $hyoo_crowd_peer extends Object {\n\t\t\n\t\tid: $mol_int62_pair\n\t\t\n\t\tconstructor(\n\t\t\treadonly key_public: $mol_crypto_auditor_public,\n\t\t\treadonly key_public_serial: Uint8Array,\n\t\t\treadonly key_private: $mol_crypto_auditor_private,\n\t\t\treadonly key_private_serial: Uint8Array,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.id = $mol_int62_hash_buffer( this.key_public_serial )\n\t\t}\n\t\t\n\t\tstatic async generate() {\n\t\t\t\n\t\t\tconst pair = await $$.$mol_crypto_auditor_pair()\n\t\t\t\n\t\t\tconst public_serial = new Uint8Array( await pair.public.serial() )\n\t\t\tconst private_serial = new Uint8Array( await pair.private.serial() )\n\t\t\t\n\t\t\treturn new this( pair.public, public_serial, pair.private, private_serial )\n\t\t\t\n\t\t}\n\t\t\n\t\tstatic async restore(\n\t\t\tpublic_serial: Uint8Array,\n\t\t\tprivate_serial: Uint8Array,\n\t\t) {\n\t\t\t\n\t\t\tconst pair = {\n\t\t\t\tpublic: await $$.$mol_crypto_auditor_public.from( public_serial ),\n\t\t\t\tprivate: await $$.$mol_crypto_auditor_private.from( private_serial ),\n\t\t\t}\n\t\t\t\n\t\t\treturn new this( pair.public, public_serial, pair.private, private_serial )\n\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t// @see https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/encoding\n\texport type $mol_charset_encoding = 'utf8' | 'ibm866' | 'iso-8859-2' | 'iso-8859-3' | 'iso-8859-4' | 'iso-8859-5' | 'iso-8859-6'\n\t\t| 'iso-8859-7' | 'iso-8859-8' | 'iso-8859-8i' | 'iso-8859-10' | 'iso-8859-13' | 'iso-8859-14' | 'iso-8859-15' | 'iso-8859-16'\n\t\t| 'koi8-r' | 'koi8-u' | 'koi8-r' | 'macintosh' | 'windows-874' | 'windows-1250' | 'windows-1251' | 'windows-1252' | 'windows-1253'\n\t\t| 'windows-1254'| 'windows-1255'| 'windows-1256'| 'windows-1257'| 'windows-1258' | 'x-mac-cyrillic' | 'gbk'\n\t\t| 'gb18030' | 'hz-gb-2312' | 'big5' | 'euc-jp' | 'iso-2022-jp' | 'shift-jis' | 'euc-kr' | 'iso-2022-kr'\n\n\texport function $mol_charset_decode(value: BufferSource, code: $mol_charset_encoding = 'utf8') {\n\t\treturn new TextDecoder(code).decode(value)\n\t}\n\n}\n","namespace $ {\n\t\n\texport type $hyoo_crowd_unit_id = {\n\t\treadonly head: $mol_int62_pair,\n\t\treadonly self: $mol_int62_pair,\n\t}\n\t\n\tconst level = $mol_data_enum( 'level', $hyoo_crowd_peer_level )\n\t\n\texport enum $hyoo_crowd_unit_kind {\n\t\t\n\t\t/** Join peer to land */\n\t\tjoin = 0,\n\t\t\n\t\t/* Give rights for land to another peer */\n\t\tgive = 1,\n\t\t\n\t\t/** Add data to land by joined peer with given rights */\n\t\tdata = 2,\n\t\t\n\t}\n\t\n\texport enum $hyoo_crowd_unit_group {\n\t\t\n\t\t/** Join and Give units */\n\t\tauth = 0,\n\t\t\n\t\t/** Data units */\n\t\tdata = 1,\n\t\t\n\t}\n\t\n\t/** Independent part of data. mem >= 80B / bin >= 32B + 48B */\n\texport class $hyoo_crowd_unit extends Object {\n\t\t\n\t\tconstructor(\n\t\n\t\t\t/** Identifier of land. 8B / info = 62b */\n\t\t\treadonly land_lo: number,\n\t\t\treadonly land_hi: number,\n\t\t\t\n\t\t\t/** Identifier of auth. 8B / info = 62b */\n\t\t\treadonly auth_lo: number,\n\t\t\treadonly auth_hi: number,\n\t\t\t\n\t\t\t\n\t\t\t/** Identifier of head node. 8B / info = 62b */\n\t\t\treadonly head_lo: number,\n\t\t\treadonly head_hi: number,\n\t\t\t\n\t\t\t/** Self identifier inside head after prev before next. 8B / info = 62b */\n\t\t\treadonly self_lo: number,\n\t\t\treadonly self_hi: number,\n\t\t\t\n\t\t\t\n\t\t\t/** Identifier of next node. 8B / info = 62b */\n\t\t\treadonly next_lo: number,\n\t\t\treadonly next_hi: number,\n\t\t\t\n\t\t\t/** Identifier of prev node. 8B / info = 62b */\n\t\t\treadonly prev_lo: number,\n\t\t\treadonly prev_hi: number,\n\t\t\t\n\t\t\t\n\t\t\t/** Monotonic real clock. 4B / info = 31b */\n\t\t\treadonly time: number,\n\t\t\t\n\t\t\t/** type-size = bin<0 | null=0 | json>0 */\n\t\t\t/** Associated atomic data. mem = 4B+ / bin = (0|8B)+ / type-size-info = 16b */\n\t\t\treadonly data: unknown,\n\t\t\t\n\t\t\tpublic bin: $hyoo_crowd_unit_bin | null\n\t\t\t\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tid(): $hyoo_crowd_unit_id { return { head: this.head(), self: this.self() } }\n\t\t\n\t\tland(): $mol_int62_pair { return { lo: this.land_lo, hi: this.land_hi } }\n\t\tauth(): $mol_int62_pair { return { lo: this.auth_lo, hi: this.auth_hi } }\n\t\thead(): $mol_int62_pair { return { lo: this.head_lo, hi: this.head_hi } }\n\t\tnext(): $mol_int62_pair { return { lo: this.next_lo, hi: this.next_hi } }\n\t\tprev(): $mol_int62_pair { return { lo: this.prev_lo, hi: this.prev_hi } }\n\t\tself(): $mol_int62_pair { return { lo: this.self_lo, hi: this.self_hi } }\n\t\t\n\t\tkind() {\n\t\t\t\n\t\t\t// head === self === auth\n\t\t\tif( this.head_lo === this.self_lo && this.head_hi === this.self_hi ) {\n\t\t\t\tif( this.auth_lo === this.self_lo && this.auth_hi === this.self_hi ) {\n\t\t\t\t\treturn $hyoo_crowd_unit_kind.join\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// head === land\n\t\t\tif( this.head_lo === this.land_lo && this.head_hi === this.land_hi ) {\n\t\t\t\treturn  $hyoo_crowd_unit_kind.give\n\t\t\t}\n\t\t\t\n\t\t\treturn $hyoo_crowd_unit_kind.data\n\t\t}\n\t\t\n\t\tgroup() {\n\t\t\treturn this.kind() === $hyoo_crowd_unit_kind.data\n\t\t\t\t? $hyoo_crowd_unit_group.data\n\t\t\t\t: $hyoo_crowd_unit_group.auth\n\t\t}\n\t\t\n\t\tlevel() {\n\t\t\treturn level( this.data as any )\n\t\t}\n\t\t\n\t\t[Symbol.toPrimitive]() {\n\t\t\treturn JSON.stringify( this )\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\t\n\t\t\tswitch( this.kind() ) {\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.join:\n\t\t\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t\t\t$mol_dev_format_shade(\n\t\t\t\t\t\t\t// ' ',\n\t\t\t\t\t\t\t// $mol_int62_to_string( this.land() ),\n\t\t\t\t\t\t\t' 🔑 ',\n\t\t\t\t\t\t\t$mol_int62_to_string( this.self() ),\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.give:\n\t\t\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t\t\t$mol_dev_format_shade(\n\t\t\t\t\t\t\t// ' ',\n\t\t\t\t\t\t\t// $mol_int62_to_string( this.land() ),\n\t\t\t\t\t\t\t' 🏅 ',\n\t\t\t\t\t\t\t$mol_int62_to_string( this.self() ),\n\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$mol_dev_format_native( $hyoo_crowd_peer_level[ this.data as number ] ?? this.data ),\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.data:\n\t\t\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t\t\t$mol_dev_format_shade(\n\t\t\t\t\t\t\t// ' ',\n\t\t\t\t\t\t\t// $mol_int62_to_string( this.land() ),\n\t\t\t\t\t\t\t' 📦 ',\n\t\t\t\t\t\t\t$mol_int62_to_string( this.head() ),\n\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$mol_dev_format_native( this.data ),\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tconst offset = {\n\t\t\n\t\tland_lo: 0,\n\t\tland_hi: 4,\n\t\tauth_lo: 8,\n\t\tauth_hi: 12,\n\t\t\n\t\thead_lo: 16,\n\t\thead_hi: 20,\n\t\tself_lo: 24,\n\t\tself_hi: 28,\n\t\t\n\t\tnext_lo: 32,\n\t\tnext_hi: 36,\n\t\tprev_lo: 40,\n\t\tprev_hi: 44,\n\t\t\n\t\ttime: 48,\n\t\tsize: 54,\n\t\tdata: 56,\n\t\t\n\t} as const\n\t\n\texport class $hyoo_crowd_unit_bin extends DataView {\n\t\t\n\t\tstatic from( unit: $hyoo_crowd_unit ) {\n\t\t\t\n\t\t\tif( unit.bin ) return unit.bin\n\t\t\t\n\t\t\tconst type = unit.data === null\n\t\t\t\t? 0\n\t\t\t\t: unit.data instanceof Uint8Array\n\t\t\t\t\t? -1\n\t\t\t\t\t: 1\n\t\t\t\n\t\t\tconst buff = type === 0 ? null\n\t\t\t\t: type > 0 ? $mol_charset_encode( JSON.stringify( unit.data ) )\n\t\t\t\t: unit.data as Uint8Array\n\t\t\t\n\t\t\tconst size = buff?.byteLength ?? 0\n\t\t\tif( type > 0 && size > 2**15 - 1 ) throw new Error( `Too large json data: ${size} > ${ 2**15 - 1 }` )\n\t\t\tif( type < 0 && size > 2**15 ) throw new Error( `Too large binary data: ${size} > ${ 2**15 }` )\n\t\t\t\n\t\t\tconst total = offset.data + Math.ceil( size / 8 ) * 8 + $mol_crypto_auditor_sign_size\n\t\t\t\n\t\t\tconst mem = new Uint8Array( total )\n\t\t\tconst bin = new $hyoo_crowd_unit_bin( mem.buffer )\n\t\t\t\n\t\t\tbin.setInt32( offset.land_lo, unit.land_lo, true )\n\t\t\tbin.setInt32( offset.land_hi, unit.land_hi, true )\n\t\t\tbin.setInt32( offset.auth_lo, unit.auth_lo, true )\n\t\t\tbin.setInt32( offset.auth_hi, unit.auth_hi, true )\n\t\t\t\n\t\t\tbin.setInt32( offset.head_lo, unit.head_lo, true )\n\t\t\tbin.setInt32( offset.head_hi, unit.head_hi, true )\n\t\t\tbin.setInt32( offset.self_lo, unit.self_lo, true )\n\t\t\tbin.setInt32( offset.self_hi, unit.self_hi, true )\n\t\t\t\n\t\t\tbin.setInt32( offset.next_lo, unit.next_lo, true )\n\t\t\tbin.setInt32( offset.next_hi, unit.next_hi, true )\n\t\t\tbin.setInt32( offset.prev_lo, unit.prev_lo, true )\n\t\t\tbin.setInt32( offset.prev_hi, unit.prev_hi, true )\n\t\t\t\n\t\t\tbin.setInt32( offset.time, unit.time, true )\n\t\t\tbin.setInt16( offset.size, type * size, true )\n\t\t\t\n\t\t\tif( buff ) mem.set( buff, offset.data )\n\t\t\t\n\t\t\treturn bin\n\t\t}\n\t\t\n\t\tsign( next?: Uint8Array ) {\n\t\t\t\n\t\t\tconst sign_offset = this.byteOffset + this.byteLength - $mol_crypto_auditor_sign_size\n\t\t\t\n\t\t\tconst buff = new Uint8Array(\n\t\t\t\tthis.buffer,\n\t\t\t\tsign_offset,\n\t\t\t\t$mol_crypto_auditor_sign_size,\n\t\t\t)\n\t\t\t\n\t\t\tif( !next ) return buff\n\t\t\t\n\t\t\tbuff.set( next )\n\t\t\treturn buff\n\t\t\t\n\t\t}\n\t\t\n\t\t// land( next?: $mol_int62_pair ) {\n\t\t\t\n\t\t// \tif( next ) {\n\t\t\t\t\n\t\t// \t\tthis.setInt32( offset.land_lo, next.lo, true )\n\t\t// \t\tthis.setInt32( offset.land_hi, next.hi, true )\n\t\t// \t\treturn next\n\t\t\t\t\n\t\t// \t} else {\n\t\t\t\t\n\t\t// \t\treturn {\n\t\t// \t\t\tlo: this.getInt32( offset.land_lo, true ),\n\t\t// \t\t\thi: this.getInt32( offset.land_hi, true ),\n\t\t// \t\t}\n\t\t\t\t\n\t\t// \t}\n\n\t\t// }\n\t\t\n\t\tsize() {\n\t\t\treturn Math.ceil( Math.abs( this.getInt16( offset.size, true ) ) / 8 ) * 8 + offset.data + $mol_crypto_auditor_sign_size\n\t\t}\n\t\t\n\t\t// data() {\n\t\t// \tconst info = this.getUint16( offset.data )\n\t\t// \tconst size = Math.abs( info )\n\t\t// \tconst buf = new Uint8Array( this.buffer, this.byteOffset + offset.sens, size )\n\t\t// \tconst data = info > 0 ? JSON.parse( $mol_charset_decode( buf ) ) : info < 0 ? buf : null\n\t\t// \treturn data\n\t\t// }\n\t\t\n\t\tsens() {\n\t\t\treturn new Uint8Array(\n\t\t\t\tthis.buffer,\n\t\t\t\tthis.byteOffset,\n\t\t\t\tthis.size() - $mol_crypto_auditor_sign_size,\n\t\t\t)\n\t\t}\n\t\t\n\t\tids() {\n\t\t\treturn [\n\t\t\t\tthis.getInt32( this.byteOffset + offset.land_lo, true ) << 1 >> 1,\n\t\t\t\tthis.getInt32( this.byteOffset + offset.land_hi, true ) << 1 >> 1,\n\t\t\t\tthis.getInt32( this.byteOffset + offset.head_lo, true ) << 1 >> 1,\n\t\t\t\tthis.getInt32( this.byteOffset + offset.head_hi, true ) << 1 >> 1,\n\t\t\t\tthis.getInt32( this.byteOffset + offset.self_lo, true ) << 1 >> 1,\n\t\t\t\tthis.getInt32( this.byteOffset + offset.self_hi, true ) << 1 >> 1,\n\t\t\t] as const\n\t\t}\n\t\t\n\t\tunit(): $hyoo_crowd_unit {\n\t\t\t\n\t\t\tconst land_lo = this.getInt32( this.byteOffset + offset.land_lo, true ) << 1 >> 1\n\t\t\tconst land_hi = this.getInt32( this.byteOffset + offset.land_hi, true ) << 1 >> 1\n\t\t\tconst auth_lo = this.getInt32( this.byteOffset + offset.auth_lo, true ) << 1 >> 1\n\t\t\tconst auth_hi = this.getInt32( this.byteOffset + offset.auth_hi, true ) << 1 >> 1\n\t\t\t\n\t\t\tconst head_lo = this.getInt32( this.byteOffset + offset.head_lo, true ) << 1 >> 1\n\t\t\tconst head_hi = this.getInt32( this.byteOffset + offset.head_hi, true ) << 1 >> 1\n\t\t\tconst self_lo = this.getInt32( this.byteOffset + offset.self_lo, true ) << 1 >> 1\n\t\t\tconst self_hi = this.getInt32( this.byteOffset + offset.self_hi, true ) << 1 >> 1\n\t\t\t\n\t\t\tconst next_lo = this.getInt32( this.byteOffset + offset.next_lo, true ) << 1 >> 1\n\t\t\tconst next_hi = this.getInt32( this.byteOffset + offset.next_hi, true ) << 1 >> 1\n\t\t\tconst prev_lo = this.getInt32( this.byteOffset + offset.prev_lo, true ) << 1 >> 1\n\t\t\tconst prev_hi = this.getInt32( this.byteOffset + offset.prev_hi, true ) << 1 >> 1\n\t\t\t\n\t\t\tconst time = this.getInt32( this.byteOffset + offset.time, true ) << 1 >> 1\n\t\t\tconst type_size = this.getInt16( this.byteOffset + offset.size, true )\n\t\t\t\n\t\t\tlet data = null as unknown\n\t\t\t\n\t\t\tif( type_size ) {\n\t\t\t\t\n\t\t\t\tconst buff = new Uint8Array( this.buffer, this.byteOffset + offset.data, Math.abs( type_size ) )\n\t\t\t\t\n\t\t\t\tif( type_size < 0 ) data = buff\n\t\t\t\telse data = JSON.parse( $mol_charset_decode( buff ) )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn new $hyoo_crowd_unit(\n\t\t\t\t\n\t\t\t\tland_lo,\n\t\t\t\tland_hi,\n\t\t\t\tauth_lo,\n\t\t\t\tauth_hi,\n\t\t\t\t\n\t\t\t\thead_lo,\n\t\t\t\thead_hi,\n\t\t\t\tself_lo,\n\t\t\t\tself_hi,\n\t\t\t\t\n\t\t\t\tnext_lo,\n\t\t\t\tnext_hi,\n\t\t\t\tprev_lo,\n\t\t\t\tprev_hi,\n\t\t\t\t\n\t\t\t\ttime,\n\t\t\t\tdata,\n\t\t\t\tthis,\n\t\t\t\t\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\texport function $hyoo_crowd_unit_compare(\n\t\tleft: $hyoo_crowd_unit,\n\t\tright: $hyoo_crowd_unit,\n\t) {\n\t\treturn ( left.group() - right.group() )\n\t\t\t|| ( left.time - right.time )\n\t\t\t\n\t\t\t|| ( left.auth_hi - right.auth_hi )\n\t\t\t|| ( left.auth_lo - right.auth_lo )\n\t\t\t\n\t\t\t|| ( left.self_hi - right.self_hi )\n\t\t\t|| ( left.self_lo - right.self_lo )\n\t\t\t|| ( left.head_hi - right.head_hi )\n\t\t\t|| ( left.head_lo - right.head_lo )\n\t\t\t\n\t\t\t|| ( left.prev_hi - right.prev_hi )\n\t\t\t|| ( left.prev_lo - right.prev_lo )\n\t\t\t|| ( left.next_hi - right.next_hi )\n\t\t\t|| ( left.next_lo - right.next_lo )\n\t\t\t\n\t\t\t|| ( left.land_hi - right.land_hi )\n\t\t\t|| ( left.land_lo - right.land_lo )\n\t\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** Internal int31 representation of current time. */\n\texport function $hyoo_crowd_time_now() {\n\t\treturn Math.floor( Date.now() / 100 ) - 1767e7\n\t}\n\t\n\t/** Returns unix timestamp for internal time representation. */\n\texport function $hyoo_crowd_time_stamp( time: number ) {\n\t\treturn 1767e9 + time * 100\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** Vector clock. Stores real timestamps. */\n\texport class $hyoo_crowd_clock extends $mol_dict<\n\t\t$mol_int62_pair,\n\t\tnumber\n\t> {\n\t\t\n\t\tstatic begin = -1 * 2**30\n\t\t\n\t\t/** Maximum time for all peers. */\n\t\tlast_time = $hyoo_crowd_clock.begin\n\t\t\n\t\tconstructor(\n\t\t\tentries?: Iterable<\n\t\t\t\treadonly [ $mol_int62_pair, number ]\n\t\t\t>\n\t\t) {\n\t\t\t\n\t\t\tsuper( entries )\n\t\t\tif( !entries ) return\n\t\t\t\n\t\t\tfor( const [ peer, time ] of entries ) {\n\t\t\t\tthis.see_time( time )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Synchronize this cloc with another. */\n\t\tsync( right: $hyoo_crowd_clock ) {\n\t\t\tfor( const [ peer, time ] of right ) {\n\t\t\t\tthis.see_peer( peer, time )\n\t\t\t}\n\t\t}\n\t\t\n\t\t/** Increase `last` to latest. */\n\t\tsee_time( time: number ) {\n\t\t\tif( time < this.last_time ) return\n\t\t\tthis.last_time = time\n\t\t}\n\t\t\n\t\t/** Add new `time` for `peer` and increase `last`. */\n\t\tsee_peer(\n\t\t\tpeer: $mol_int62_pair,\n\t\t\ttime: number,\n\t\t) {\n\t\t\t\n\t\t\tif( !this.fresh( peer, time ) ) return\n\t\t\t\n\t\t\tthis.set( peer, time )\n\t\t\tthis.see_time( time )\n\t\t\t\n\t\t}\n\t\t\n\t\tsee_bin( bin: $hyoo_crowd_clock_bin, group: $hyoo_crowd_unit_group ) {\n\t\t\t\n\t\t\tfor( let cursor = offset.clocks; cursor < bin.byteLength; cursor += 16 ) {\n\t\t\t\t\n\t\t\t\tthis.see_peer(\n\t\t\t\t\t{\n\t\t\t\t\t\tlo: bin.getInt32( cursor + 0, true ) << 1 >> 1,\n\t\t\t\t\t\thi: bin.getInt32( cursor + 4, true ) << 1 >> 1,\n\t\t\t\t\t},\n\t\t\t\t\tbin.getInt32( cursor + 8 + 4 * group, true )\n\t\t\t\t)\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t/** Checks if time from future. */\n\t\tfresh(\n\t\t\tpeer: $mol_int62_pair,\n\t\t\ttime: number,\n\t\t) {\n\t\t\treturn time > this.time( peer )\n\t\t}\n\t\t\n\t\t/** Checks if this clock from future of another. */\n\t\tahead( clock: $hyoo_crowd_clock ) {\n\t\t\t\n\t\t\tfor( const [ peer, time ] of this ) {\n\t\t\t\tif( clock.fresh( peer, time ) ) return true\n\t\t\t}\n\t\t\t\n\t\t\treturn false\n\t\t}\n\t\t\n\t\ttime( peer: $mol_int62_pair ) {\n\t\t\treturn this.get( peer ) ?? $hyoo_crowd_clock.begin\n\t\t}\n\t\t\n\t\tnow() {\n\t\t\treturn $hyoo_crowd_time_now()\n\t\t}\n\t\t\n\t\tlast_stamp() {\n\t\t\treturn  $hyoo_crowd_time_stamp( this.last_time )\n\t\t}\n\t\t\n\t\t/** Gererates new time for peer that greater then other seen. */\n\t\ttick( peer: $mol_int62_pair ) {\n\t\t\t\n\t\t\tlet time = this.now()\n\t\t\t\n\t\t\tif( time <= this.last_time ) {\n\t\t\t\ttime = this.last_time + 1\n\t\t\t}\n\t\t\t\n\t\t\tthis.see_peer( peer, time )\n\t\t\t\n\t\t\treturn time\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t$mol_dev_format_shade( ' ' + new Date( this.last_stamp() ).toISOString().replace( 'T', ' ' ) ) ,\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\tconst offset = {\n\t\t\n\t\tland_lo: 0,\n\t\tland_hi: 4,\n\t\t\n\t\tclocks: 8,\n\t\t\n\t} as const\n\t\n\texport class $hyoo_crowd_clock_bin extends DataView {\n\t\t\n\t\tstatic from(\n\t\t\tland: $mol_int62_pair,\n\t\t\tclocks: readonly[ $hyoo_crowd_clock, $hyoo_crowd_clock ]\n\t\t) {\n\t\t\t\n\t\t\tconst size = offset.clocks + clocks[0].size * 16\n\t\t\tconst mem = new Uint8Array( size )\n\t\t\tconst bin = new $hyoo_crowd_clock_bin( mem.buffer )\n\t\t\t\n\t\t\tbin.setInt32( offset.land_lo, land.lo ^ ( 1 << 31 ), true )\n\t\t\tbin.setInt32( offset.land_hi, land.hi, true )\n\t\t\t\n\t\t\tlet cursor = offset.clocks\n\t\t\tfor( const [ peer, time ] of clocks[0] ) {\n\t\t\t\t\n\t\t\t\tbin.setInt32( cursor + 0, peer.lo, true )\n\t\t\t\tbin.setInt32( cursor + 4, peer.hi, true )\n\t\t\t\tbin.setInt32( cursor + 8, time, true )\n\t\t\t\tbin.setInt32( cursor + 12, clocks[1].get( peer ) ?? $hyoo_crowd_clock.begin, true )\n\t\t\t\t\n\t\t\t\tcursor += 16\n\t\t\t}\n\t\t\t\n\t\t\treturn bin\n\t\t}\n\t\t\n\t\tland() {\n\t\t\treturn {\n\t\t\t\tlo: this.getInt32( offset.land_lo, true ) << 1 >> 1,\n\t\t\t\thi: this.getInt32( offset.land_hi, true ) << 1 >> 1,\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Logger event data */\n\texport type $mol_log3_event< Fields > = {\n\t\t[ key in string ] : unknown\n\t} & {\n\t\t\n\t\t/** Time of event creation */\n\t\ttime? : string\n\n\t\t/** Place of event creation */\n\t\tplace : unknown\n\n\t\t/** Short description of event */\n\t\tmessage : string\n\n\t} & Fields\n\n\t/** Logger function */\n\texport type $mol_log3_logger< Fields , Res = void > = (\n\t\tthis : $ ,\n\t\tevent : $mol_log3_event< Fields > ,\n\t)=> Res\n\n\t/** Log begin of some task */\n\texport declare let $mol_log3_come : $mol_log3_logger<{}>\n\t\n\t/** Log end of some task */\n\texport declare let $mol_log3_done : $mol_log3_logger<{}>\n\t\n\t/** Log error */\n\texport declare let $mol_log3_fail : $mol_log3_logger<{}>\n\t\n\t/** Log warning message */\n\texport declare let $mol_log3_warn : $mol_log3_logger<{ hint : string }>\n\t\n\t/** Log some generic event */\n\texport declare let $mol_log3_rise : $mol_log3_logger<{}>\n\n\t/** Log begin of log group, returns func to close group */\n\texport declare let $mol_log3_area : $mol_log3_logger< {} , ()=> void >\n\n\t/** Log begin of collapsed group only when some logged inside, returns func to close group */\n\texport function $mol_log3_area_lazy(\n\t\tthis : $ ,\n\t\tevent : $mol_log3_event<{}> ,\n\t) {\n\n\t\tconst self = this\n\t\tconst stack = self.$mol_log3_stack\n\n\t\tconst deep = stack.length\n\t\tlet logged = false\n\n\t\tstack.push( ()=> {\n\t\t\tlogged = true\n\t\t\tself.$mol_log3_area.call( self , event )\n\t\t} )\n\n\t\treturn ()=> {\n\t\t\tif( logged ) self.console.groupEnd()\n\t\t\tif( stack.length > deep ) stack.length = deep\n\t\t}\n\n\t}\n\n\texport let $mol_log3_stack = [] as ( ()=> void )[]\n\n}\n","namespace $ {\n\n\texport const $mol_tree_convert : unique symbol = Symbol( '$mol_tree_convert' )\n\texport type $mol_tree_path = Array< string | number | null >\n\n\texport type $mol_tree_hack = ( input : $mol_tree , context : $mol_tree_context )=> readonly $mol_tree[]\n\texport type $mol_tree_context = Record< string , $mol_tree_hack >\n\texport type $mol_tree_library = Record< string , $mol_tree_context >\n\t\n\t/**\n\t * Abstract Syntax Tree with human readable serialization.\n\t * @see https://github.com/nin-jin/tree.d\n\t */\n\texport class $mol_tree extends $mol_object2 {\n\t\t\n\t\treadonly type : string\n\t\treadonly data : string\n\t\treadonly sub : readonly $mol_tree[]\n\t\treadonly baseUri : string\n\t\treadonly row : number\n\t\treadonly col : number\n\t\treadonly length : number\n\t\t\n\t\tconstructor( config : Partial<$mol_tree> = {} ) {\n\n\t\t\tsuper()\n\n\t\t\tthis.type = config.type || ''\n\t\t\t\n\t\t\tif( config.value !== undefined ) {\n\n\t\t\t\tvar sub = $mol_tree.values( config.value )\n\t\t\t\t\n\t\t\t\tif( config.type || sub.length > 1 ) {\n\n\t\t\t\t\tthis.sub = [ ... sub , ...( config.sub || [] ) ]\n\t\t\t\t\tthis.data = config.data || ''\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.data = sub[ 0 ].data\n\t\t\t\t\tthis.sub = config.sub || []\n\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.data = config.data || ''\n\t\t\t\tthis.sub = config.sub || []\n\n\t\t\t}\n\t\t\t\n\t\t\tthis.baseUri = config.baseUri || ''\n\t\t\tthis.row = config.row || 0\n\t\t\tthis.col = config.col || 0\n\t\t\tthis.length = config.length || 0\n\n\t\t}\n\t\t\n\t\tstatic values( str : string , baseUri? : string ) {\n\n\t\t\treturn str.split( '\\n' ).map( ( data , index ) => new $mol_tree( {\n\t\t\t\tdata : data ,\n\t\t\t\tbaseUri : baseUri ,\n\t\t\t\trow : index + 1 ,\n\t\t\t\tlength : data.length ,\n\t\t\t} ) )\n\n\t\t}\n\t\t\n\t\t/** Cloning node with overrides. */\n\t\tclone( config : Partial<$mol_tree> = {} ) {\n\n\t\t\treturn new $mol_tree({\n\t\t\t\ttype : ( 'type' in config ) ? config.type : this.type ,\n\t\t\t\tdata : ( 'data' in config ) ? config.data : this.data ,\n\t\t\t\tsub : ( 'sub' in config ) ? config.sub : this.sub ,\n\t\t\t\tbaseUri : ( 'baseUri' in config ) ? config.baseUri : this.baseUri ,\n\t\t\t\trow : ( 'row' in config ) ? config.row : this.row ,\n\t\t\t\tcol : ( 'col' in config ) ? config.col : this.col ,\n\t\t\t\tlength : ( 'length' in config ) ? config.length : this.length ,\n\t\t\t\tvalue : config.value\n\t\t\t})\n\n\t\t}\n\t\t\n\t\t/** Makes new derived node. */\n\t\tmake( config : Partial<$mol_tree> ) {\n\n\t\t\treturn new $mol_tree({\n\t\t\t\tbaseUri : this.baseUri ,\n\t\t\t\trow : this.row ,\n\t\t\t\tcol : this.col ,\n\t\t\t\tlength : this.length ,\n\t\t\t\t... config ,\n\t\t\t})\n\n\t\t}\n\t\t\n\t\t/** Makes new derived data node. */\n\t\tmake_data( value : string , sub? : readonly $mol_tree[] ) {\n\t\t\treturn this.make({ value , sub })\n\t\t}\n\t\t\n\t\t/** Makes new derived structural node. */\n\t\tmake_struct( type : string , sub? : readonly $mol_tree[] ) {\n\t\t\treturn this.make({ type , sub })\n\t\t}\n\t\t\n\t\t/** Parses tree format to AST. */\n\t\tstatic fromString( str : string , baseUri? : string ) {\n\t\t\t\n\t\t\tvar root = new $mol_tree( { baseUri : baseUri } )\n\t\t\tvar stack = [ root ]\n\t\t\t\n\t\t\tvar row = 0\n\t\t\tvar prefix = str.replace( /^\\n?(\\t*)[\\s\\S]*/ , '$1' )\n\t\t\tvar lines = str.replace( new RegExp( '^\\\\t{0,' + prefix.length + '}' , 'mg' ) , '' ).split( '\\n' )\n\n\t\t\tlines.forEach( line => {\n\n\t\t\t\t++row\n\t\t\t\t\n\t\t\t\tvar chunks = /^(\\t*)((?:[^\\n\\t\\\\ ]+ *)*)(\\\\[^\\n]*)?(.*?)(?:$|\\n)/m.exec( line )\n\t\t\t\tif( !chunks || chunks[4] ) return this.$.$mol_fail( new Error( `Syntax error at ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\n\t\t\t\tvar indent = chunks[ 1 ]\n\t\t\t\tvar path = chunks[ 2 ]\n\t\t\t\tvar data = chunks[ 3 ]\n\t\t\t\t\n\t\t\t\tvar deep = indent.length\n\t\t\t\tvar types = path ? path.replace( / $/ , '' ).split( / +/ ) : []\n\t\t\t\t\n\t\t\t\tif( stack.length <= deep ) return this.$.$mol_fail( new Error( `Too many tabs at ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\n\t\t\t\tstack.length = deep + 1\n\t\t\t\tvar parent = stack[ deep ];\n\t\t\t\t\n\t\t\t\tlet col = deep\n\t\t\t\ttypes.forEach( type => {\n\t\t\t\t\tif( !type ) return this.$.$mol_fail( new Error( `Unexpected space symbol ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\tvar next = new $mol_tree({ type , baseUri , row , col , length : type.length })\n\t\t\t\t\tconst parent_sub = parent.sub as $mol_tree[]\n\t\t\t\t\tparent_sub.push( next )\t\n\t\t\t\t\tparent = next\n\t\t\t\t\tcol += type.length + 1\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tif( data ) {\n\t\t\t\t\tvar next = new $mol_tree({ data : data.substring( 1 ) , baseUri , row , col , length : data.length })\n\t\t\t\t\tconst parent_sub = parent.sub as $mol_tree[]\n\t\t\t\t\tparent_sub.push( next )\n\t\t\t\t\tparent = next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstack.push( parent )\n\t\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\treturn root\n\t\t}\n\t\t\n\t\t/**\n\t\t * Parses json.tree lang to AST.\n\t\t * @todo Move to $mol_tree_json_from\n\t\t */\n\t\tstatic fromJSON( json : any , baseUri = '' ) : $mol_tree {\n\n\t\t\tswitch( true ) {\n\n\t\t\t\tcase typeof json === 'boolean' :\n\t\t\t\tcase typeof json === 'number' :\n\t\t\t\tcase json === null :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : String( json ) ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t\tcase typeof json === 'string' :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\tvalue : json ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\n\t\t\t\tcase Array.isArray( json ) :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : \"/\" ,\n\t\t\t\t\t\tsub : ( json as any[] ).map( json => $mol_tree.fromJSON( json , baseUri ) )\n\t\t\t\t\t})\n\n\t\t\t\tcase json instanceof Date :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\tvalue : json.toISOString() ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t\tdefault :\n\n\t\t\t\t\tif( typeof json[ $mol_tree_convert ] === 'function' ) {\n\t\t\t\t\t\treturn json[ $mol_tree_convert ]()\n\t\t\t\t\t}\n\n\t\t\t\t\tif( typeof json.toJSON === 'function' ) {\n\t\t\t\t\t\treturn $mol_tree.fromJSON( json.toJSON() )\n\t\t\t\t\t}\n\n\t\t\t\t\tif( json instanceof Error ) {\n\t\t\t\t\t\tconst { name , message , stack } = json\n\t\t\t\t\t\tjson = { ... json , name , message ,  stack }\n\t\t\t\t\t}\n\n\t\t\t\t\tvar sub : $mol_tree[] = []\n\t\t\t\t\t\n\t\t\t\t\tfor( var key in json ) {\n\n\t\t\t\t\t\tif( json[ key ] === undefined ) continue\n\n\t\t\t\t\t\tconst subsub = $mol_tree.fromJSON( json[ key ] , baseUri )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( /^[^\\n\\t\\\\ ]+$/.test( key ) ) {\n\n\t\t\t\t\t\t\tvar child = new $mol_tree({\n\t\t\t\t\t\t\t\ttype : key ,\n\t\t\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\t\t\tsub : [ subsub ] ,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar child = new $mol_tree({\n\t\t\t\t\t\t\t\tvalue : key ,\n\t\t\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\t\t\tsub : [ subsub ] ,\n\t\t\t\t\t\t\t} )\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsub.push( child )\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : \"*\" ,\n\t\t\t\t\t\tsub : sub ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tget uri() {\n\t\t\treturn this.baseUri + '#' + this.row + ':' + this.col\n\t\t}\n\t\t\n\t\t/** Serializas to tree format. */\n\t\ttoString( prefix = '' ) : string {\n\t\t\tvar output = ''\n\t\t\t\n\t\t\tif( this.type.length ) {\n\t\t\t\tif( !prefix.length ) {\n\t\t\t\t\tprefix = \"\\t\";\n\t\t\t\t}\n\t\t\t\toutput += this.type\n\t\t\t\tif( this.sub.length == 1 ) {\n\t\t\t\t\treturn output + ' ' + this.sub[ 0 ].toString( prefix )\n\t\t\t\t}\n\t\t\t\toutput += \"\\n\"\n\t\t\t} else if( this.data.length || prefix.length ) {\n\t\t\t\toutput += \"\\\\\" + this.data + \"\\n\"\n\t\t\t}\n\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\toutput += prefix\n\t\t\t\toutput += child.toString( prefix + \"\\t\" )\n\t\t\t}\n\t\t\t\n\t\t\treturn output\n\t\t}\n\t\t\n\t\t/**\n\t\t * Serializes AST to json.tree lang.\n\t\t * @todo Move to $mol_tree_json_to\n\t\t */\n\t\ttoJSON() : any {\n\t\t\tif( !this.type ) return this.value\n\t\t\t\n\t\t\tif( this.type === 'true' ) return true\n\t\t\tif( this.type === 'false' ) return false\n\t\t\tif( this.type === 'null' ) return null\n\t\t\t\n\t\t\tif( this.type === '*' ) {\n\t\t\t\tvar obj = {}\n\t\t\t\tfor( var child of this.sub ) {\n\t\t\t\t\tif( child.type === '-' ) continue\n\t\t\t\t\tvar key = child.type || child.clone({ sub : child.sub.slice( 0 , child.sub.length - 1 ) }).value\n\t\t\t\t\tvar val = child.sub[ child.sub.length - 1 ].toJSON()\n\t\t\t\t\tif( val !== undefined ) ( obj as any )[ key ] = val\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === '/' ) {\n\t\t\t\tvar res : any[] = []\n\t\t\t\tthis.sub.forEach(\n\t\t\t\t\tchild => {\n\t\t\t\t\t\tif( child.type === '-' ) return\n\t\t\t\t\t\tvar val = child.toJSON()\n\t\t\t\t\t\tif( val !== undefined ) res.push( val )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\treturn res\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === 'time' ) {\n\t\t\t\treturn new Date( this.value )\n\t\t\t}\n\t\t\t\n\t\t\tconst numb = Number( this.type ) \n\t\t\tif( !Number.isNaN( numb ) || this.type === 'NaN' ) return numb\n\t\t\t\n\t\t\tthrow new Error( `Unknown type (${this.type}) at ${this.uri}` )\n\t\t}\n\t\t\n\t\tget value() {\n\t\t\tvar values : string[] = []\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\tif( child.type ) continue\n\t\t\t\tvalues.push( child.value )\n\t\t\t}\n\t\t\treturn this.data + values.join( \"\\n\" )\n\t\t}\n\t\t\n\t\t/** Makes new tree with node overrided by path. */\n\t\tinsert( value : $mol_tree , ...path : $mol_tree_path ) : $mol_tree {\n\t\t\tif( path.length === 0 ) return value\n\t\t\t\n\t\t\tconst type = path[0]\n\t\t\tif( typeof type === 'string' ) {\n\n\t\t\t\tlet replaced = false\n\t\t\t\tconst sub = this.sub.map( ( item , index )=> {\n\t\t\t\t\tif( item.type !== type ) return item\n\t\t\t\t\treplaced = true\n\t\t\t\t\treturn item.insert( value , ... path.slice( 1 ) )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tif( !replaced ) sub.push( new $mol_tree({ type }).insert( value , ... path.slice( 1 ) ) )\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub })\n\n\t\t\t} else if( typeof type === 'number' ) {\n\t\t\t\t\n\t\t\t\tconst sub = this.sub.slice()\n\t\t\t\tsub[ type ] = ( sub[ type ] || new $mol_tree ).insert( value , ... path.slice( 1 ) )\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub })\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub : ( ( this.sub.length === 0 ) ? [ new $mol_tree() ] : this.sub ).map( item => item.insert( value , ... path.slice( 1 ) ) ) })\n\n\t\t\t}\n\t\t}\n\n\t\t/** Query nodes by path. */\n\t\tselect( ...path : $mol_tree_path ) {\n\t\t\tvar next = [ this as $mol_tree ]\n\t\t\tfor( var type of path ) {\n\t\t\t\tif( !next.length ) break\n\t\t\t\tvar prev = next\n\t\t\t\tnext = []\n\n\t\t\t\tfor( var item of prev ) {\n\n\t\t\t\t\tswitch( typeof( type ) ) {\n\n\t\t\t\t\t\tcase 'string' :\n\t\t\t\t\t\t\tfor( var child of item.sub ) {\n\t\t\t\t\t\t\t\tif( !type || ( child.type == type ) ) {\n\t\t\t\t\t\t\t\t\tnext.push( child )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 'number' :\n\t\t\t\t\t\t\tif( type < item.sub.length ) next.push( item.sub[ type ] )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault : next.push( ... item.sub )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new $mol_tree( { sub : next } )\n\t\t}\n\t\t\n\t\t/** Filter subnodes by path or value. */\n\t\tfilter( path : string[] , value? : string ) {\n\t\t\tvar sub = this.sub.filter(\n\t\t\t\tfunction( item ) {\n\t\t\t\t\t\n\t\t\t\t\tvar found = item.select( ...path )\n\t\t\t\t\t\n\t\t\t\t\tif( value == null ) {\n\t\t\t\t\t\treturn Boolean( found.sub.length )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn found.sub.some( child => child.value == value )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn new $mol_tree( { sub : sub } )\n\t\t}\n\n\t\t/** @deprecated Use $mol_tree:hack */\n\t\ttransform( visit : ( stack : $mol_tree[] , sub : ()=> $mol_tree[] )=> $mol_tree | null , stack : $mol_tree[] = [] ) : $mol_tree | null {\n\t\t\tconst sub_stack = [ this , ...stack ]\n\t\t\treturn visit( sub_stack , ()=> this.sub.map( node => node.transform( visit , sub_stack ) ).filter( n => n ) as $mol_tree[] )\n\t\t}\n\n\t\t/** Transform tree through context with transformers */\n\t\thack( context : $mol_tree_context ) : $mol_tree {\n\t\t\t\n\t\t\tconst sub = ( [] as $mol_tree[] ).concat( ... this.sub.map( child => {\n\n\t\t\t\tconst handle = context[ child.type ] || context[ '' ]\n\t\t\t\tif( !handle ) $mol_fail( child.error( 'Handler not defined' ) )\n\t\t\t\t\n\t\t\t\treturn handle( child , context )\n\n\t\t\t} ) )\n\n\t\t\treturn this.clone({ sub })\n\t\t}\n\n\t\t/** Makes Error with node coordinates. */\n\t\terror( message : string ) {\n\t\t\treturn new Error( `${message}:\\n${ this } ${this.baseUri}:${this.row}:${this.col}` )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_term_color {\n\t\t\n\t\tstatic reset = this.ansi( 0, 0 )\n\t\tstatic bold = this.ansi( 1, 22 )\n\t\tstatic italic = this.ansi( 3, 23 )\n\t\tstatic underline = this.ansi( 4, 24 )\n\t\tstatic inverse = this.ansi( 7, 27 )\n\t\tstatic hidden = this.ansi( 8, 28 )\n\t\tstatic strike = this.ansi( 9, 29 )\n\t\t\n\t\tstatic gray = this.ansi( 90, 39 )\n\t\tstatic red = this.ansi( 91, 39 )\n\t\tstatic green = this.ansi( 92, 39 )\n\t\tstatic yellow = this.ansi( 93, 39 )\n\t\tstatic blue = this.ansi( 94, 39 )\n\t\tstatic magenta = this.ansi( 95, 39 )\n\t\tstatic cyan = this.ansi( 96, 39 )\n\t\t\n\t\tstatic Gray = ( str: string )=> this.inverse( this.gray( str ) )\n\t\tstatic Red = ( str: string )=> this.inverse( this.red( str ) )\n\t\tstatic Green = ( str: string )=> this.inverse( this.green( str ) )\n\t\tstatic Yellow = ( str: string )=> this.inverse( this.yellow( str ) )\n\t\tstatic Blue = ( str: string )=> this.inverse( this.blue( str ) )\n\t\tstatic Magenta = ( str: string )=> this.inverse( this.magenta( str ) )\n\t\tstatic Cyan = ( str: string )=> this.inverse( this.cyan( str ) )\n\t\t\n\t\tstatic ansi( open: number, close: number ) {\n\t\n\t\t\tif( typeof process === 'undefined' ) return String\n\t\t\tif( !process.stdout.isTTY ) return String\n\t\t\n\t\t\tconst prefix = `\\x1b[${open}m`\n\t\t\tconst postfix = `\\x1b[${close}m`\n\t\t\t\n\t\t\tconst suffix_regexp = new RegExp( postfix.replace( '[', '\\\\[' ), 'g' )\n\t\t\n\t\t\treturn function colorer( str: string ) {\n\t\t\n\t\t\t\tstr = String( str )\n\t\t\t\tif( str === '' ) return str\n\t\t\n\t\t\t\tconst suffix = str.replace( suffix_regexp, prefix )\n\t\t\t\treturn prefix + suffix + postfix\n\t\t\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_log3_node_make(\n\t\tlevel : keyof Console ,\n\t\toutput : 'stdout' | 'stderr',\n\t\ttype : string ,\n\t\tcolor: ( str: string )=> string ,\n\t) {\n\n\t\treturn function $mol_log3_logger(\n\t\t\tthis : $ ,\n\t\t\tevent : $mol_log3_event<{}> ,\n\t\t) {\n\n\t\t\tif( !event.time ) event = { time : new Date().toISOString() , ... event }\n\n\t\t\tconst tree = this.$mol_tree.fromJSON( event ).clone({ type })\n\t\t\tlet str = color( tree.toString() )\n\n\t\t\t;( this.console[ level ] as any )( str )\n\t\n\t\t\tconst self = this\n\t\t\treturn ()=> self.console.groupEnd()\n\n\t\t}\n\n\t}\n\n\t$.$mol_log3_come = $mol_log3_node_make( 'info' , 'stdout' , 'come' , $mol_term_color.blue )\n\t$.$mol_log3_done = $mol_log3_node_make( 'info' , 'stdout' , 'done' , $mol_term_color.green )\n\t$.$mol_log3_fail = $mol_log3_node_make( 'error' , 'stderr' , 'fail' , $mol_term_color.red )\n\t$.$mol_log3_warn = $mol_log3_node_make( 'warn' , 'stderr' , 'warn' , $mol_term_color.yellow )\n\t$.$mol_log3_rise = $mol_log3_node_make( 'log' , 'stdout' , 'rise' , $mol_term_color.magenta )\n\t$.$mol_log3_area = $mol_log3_node_make( 'log' , 'stdout' , 'area' , $mol_term_color.cyan )\n\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\n\texport const $mol_object_field = Symbol( '$mol_object_field' )\n\t\n\texport class $mol_object extends $mol_object2 {\n\t\t\n\t\tpublic static make< Instance >( this : { new() : Instance } , config : Partial< Instance > ) : Instance {\n\t\t\treturn super.create( obj => {\n\t\t\t\tfor( let key in config ) ( obj as any )[ key ] = config[ key ]!\n\t\t\t} ) as any\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_wrapper extends $mol_object2 {\n\n\t\tstatic wrap : ( task : ( ... ags : any[] )=> any )=> ( ... ags : any[] )=> any\n\t\t\n\t\tstatic run< Result >( task : ()=> Result ) : Result {\n\t\t\treturn this.func( task )()\n\t\t}\n\t\n\t\tstatic func< Args extends any[] , Result , Host = void >(\n\t\t\tfunc : ( this : Host , ... args : Args )=> Result\n\t\t) : ( this : Host , ... args : Args )=> Result {\n\t\t\treturn this.wrap( func )\n\t\t}\n\n\t\tstatic get class() {\n\n\t\t\treturn < Class extends new ( ... args : any[] )=> any >(\n\t\t\t\tClass : Class\n\t\t\t) => {\n\n\t\t\t\ttype Args = ConstructorParameters< Class >\n\t\t\t\ttype Result = InstanceType< Class >\n\n\t\t\t\tconst construct = ( target : new ( ... args : Args )=> Result , args : Args )=> new Class( ... args )\n\n\t\t\t\tconst handler = {\n\t\t\t\t\tconstruct : this.func( construct )\n\t\t\t\t}\n\n\t\t\t\thandler[ Symbol.toStringTag ] = Class.name + '#'\n\n\t\t\t\treturn new Proxy( Class , handler )\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tstatic get method() {\n\t\t\t\n\t\t\treturn (\n\t\t\t\tobj : object,\n\t\t\t\tname : PropertyKey,\n\t\t\t\tdescr : PropertyDescriptor,\n\t\t\t) => {\n\t\t\t\tdescr.value = this.func( descr.value! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tstatic get field() {\n\t\t\t\n\t\t\treturn <\n\t\t\t\tHost ,\n\t\t\t\tField extends keyof Host ,\n\t\t\t\tArgs extends any[] ,\n\t\t\t\tResult ,\n\t\t\t>(\n\t\t\t\tobj : Host ,\n\t\t\t\tname : Field ,\n\t\t\t\tdescr : TypedPropertyDescriptor< Result >\n\t\t\t) => {\n\t\t\t\tdescr.get = descr.set = this.func( descr.get! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_memo extends $mol_wrapper {\n\t\t\n\t\tstatic wrap< This extends object , Value >( task : ( this : This , next? : Value )=> Value ) {\n\n\t\t\tconst store = new WeakMap< This , Value >()\n\n\t\t\treturn function( this : This , next? : Value ) {\n\n\t\t\t\tif( next === undefined && store.has( this ) ) return store.get( this )\n\t\t\t\t\n\t\t\t\tconst val = task.call( this , next ) ?? next\n\t\t\t\t\n\t\t\t\tstore.set( this , val! )\n\t\t\t\t\n\t\t\t\treturn val\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\texport var $mol_dom_context : typeof globalThis\n\t\n}\n","namespace $ {\n\t\n\t$.$mol_dom_context = new $node.jsdom.JSDOM( '' , { url : 'https://localhost/' } ).window as any\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_func_name( this : $ , func : Function ) : string {\n\t\t\n\t\tlet name = func.name\n\t\tif( name?.length > 1 ) return name\n\n\t\tfor( let key in this ) {\n\t\t\ttry {\n\t\t\t\tif( this[ key ] !== func ) continue\n\t\t\t\tname = key\n\t\t\t\tObject.defineProperty( func , 'name' , { value : name } )\n\t\t\t\tbreak\n\t\t\t} catch {}\n\t\t}\n\n\t\treturn name\n\t}\n\n\texport function $mol_func_name_from< Target extends Function >( target : Target , source : Function ) {\n\t\tObject.defineProperty( target , 'name' , { value : source.name } )\n\t\treturn target\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_dom_render_children (\n\t\tel : Element | DocumentFragment ,\n\t\tchildNodes : NodeList | Array< Node | string | null >\n\t) {\n\t\tconst node_set = new Set< Node | string | null >( childNodes )\n\t\t\n\t\tlet nextNode : Node | null = el.firstChild\n\t\tfor( let view of childNodes ) {\n\n\t\t\tif( view == null ) continue\n\n\t\t\tif( view instanceof $mol_dom_context.Node ) {\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\tif( !nextNode ) {\n\t\t\t\t\t\tel.appendChild( view )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif( nextNode == view ) {\n\t\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( node_set.has( nextNode ) ) {\n\t\t\t\t\t\t\tel.insertBefore( view , nextNode )\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst nn = nextNode.nextSibling\n\t\t\t\t\t\t\tel.removeChild( nextNode )\n\t\t\t\t\t\t\tnextNode = nn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif( nextNode && nextNode.nodeName === '#text' ) {\n\t\t\t\t\tconst str = String( view )\n\t\t\t\t\tif( nextNode.nodeValue !== str ) nextNode.nodeValue = str\n\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t} else {\n\t\t\t\t\tconst textNode = $mol_dom_context.document.createTextNode( String( view ) )\n\t\t\t\t\tel.insertBefore( textNode , nextNode )\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twhile( nextNode ) {\n\t\t\tconst currNode = nextNode\n\t\t\tnextNode = currNode.nextSibling\n\t\t\tel.removeChild( currNode )\n\t\t}\n\t}\n\n}\n",null,"namespace $ {\n\n\texport let $mol_jsx_prefix = ''\n\texport let $mol_jsx_crumbs = ''\n\n\texport let $mol_jsx_booked = null as null | Set< string >\n\t\n\texport let $mol_jsx_document : $mol_jsx.JSX.ElementClass['ownerDocument'] = {\n\t\tgetElementById : ()=> null ,\n\t\tcreateElementNS : ( space: string, name : string )=> $mol_dom_context.document.createElementNS( space, name ) as any,\n\t\tcreateDocumentFragment : ()=> $mol_dom_context.document.createDocumentFragment(),\n\t}\n\t\n\texport const $mol_jsx_frag = ''\n\n\texport function $mol_jsx<\n\t\tProps extends $mol_jsx.JSX.IntrinsicAttributes,\n\t\tChildren extends Array< Node | string >\n\t>(\n\t\tElem : string\n\t\t\t| ( ( props : Props , ... children : Children ) => Element ) ,\n\t\tprops : Props ,\n\t\t... childNodes : Children\n\t) : Element | DocumentFragment {\n\n\t\tconst id = props && props.id || ''\n\t\tconst guid = id ? $mol_jsx_prefix ? $mol_jsx_prefix + '/'+ id : id : $mol_jsx_prefix\n\t\tconst crumbs_self = id ? $mol_jsx_crumbs.replace( /(\\S+)/g, `$1_${ id.replace( /\\/.*/i, '' ) }` ) : $mol_jsx_crumbs\n\t\t\n\t\tif( Elem && $mol_jsx_booked ) {\n\t\t\tif( $mol_jsx_booked.has( id ) ) {\n\t\t\t\t$mol_fail( new Error( `JSX already has tag with id ${ JSON.stringify( guid ) }` ) )\n\t\t\t} else {\n\t\t\t\t$mol_jsx_booked.add( id )\n\t\t\t}\n\t\t}\n\n\t\tlet node: Element | DocumentFragment | null = guid ? $mol_jsx_document.getElementById( guid ) : null\n\n\t\tif( $mol_jsx_prefix ) {\n\t\t\t\n\t\t\tconst prefix_ext = $mol_jsx_prefix\n\t\t\tconst booked_ext = $mol_jsx_booked\n\t\t\tconst crumbs_ext = $mol_jsx_crumbs\n\t\t\t\n\t\t\tfor( const field in props ) {\n\t\t\t\t\n\t\t\t\tconst func = props[ field ]\n\t\t\t\tif( typeof func !== 'function' ) continue\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tconst wrapper = function( this: any, ... args: any[] ) {\n\t\t\t\t\t\n\t\t\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\t\t\tconst booked = $mol_jsx_booked\n\t\t\t\t\tconst crumbs = $mol_jsx_crumbs\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\n\t\t\t\t\t\t$mol_jsx_prefix = prefix_ext\n\t\t\t\t\t\t$mol_jsx_booked = booked_ext\n\t\t\t\t\t\t$mol_jsx_crumbs = crumbs_ext\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn func.call( this, ... args )\n\t\t\t\t\t\t\n\t\t\t\t\t} finally {\n\t\t\t\t\t\t\n\t\t\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t\t\t$mol_jsx_booked = booked\n\t\t\t\t\t\t$mol_jsx_crumbs = crumbs\n\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_func_name_from( wrapper, func )\n\t\t\t\tprops[ field ] = wrapper as any\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tif( typeof Elem !== 'string' ) {\n\n\t\t\tif( 'prototype' in Elem ) {\n\n\t\t\t\tconst view = node && node[ Elem as any ] || new ( Elem as any )\n\t\t\t\t\n\t\t\t\tObject.assign( view , props )\n\t\t\t\tview[ Symbol.toStringTag ] = guid\n\t\t\t\t\n\t\t\t\tview.childNodes = childNodes\n\t\t\t\t\n\t\t\t\tif( !view.ownerDocument ) view.ownerDocument = $mol_jsx_document\n\t\t\t\tview.className = ( crumbs_self ? crumbs_self + ' ' : '' ) + ( Elem['name'] || Elem )\n\t\t\t\t\n\t\t\t\tnode = view.valueOf()\n\t\t\t\t\n\t\t\t\tnode![ Elem as any ] = view\n\t\t\t\t\n\t\t\t\treturn node!\n\n\t\t\t} else {\n\n\t\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\t\tconst booked = $mol_jsx_booked\n\t\t\t\tconst crumbs = $mol_jsx_crumbs\n\t\t\t\t\n\t\t\t\ttry {\n\t\n\t\t\t\t\t$mol_jsx_prefix = guid\n\t\t\t\t\t$mol_jsx_booked = new Set\n\t\t\t\t\t$mol_jsx_crumbs = ( crumbs_self ? crumbs_self + ' ' : '' ) + ( Elem['name'] || Elem )\n\t\n\t\t\t\t\treturn ( Elem as any )( props , ... childNodes )\n\t\t\t\t\t\n\t\t\t\t} finally {\n\n\t\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t\t$mol_jsx_booked = booked\n\t\t\t\t\t$mol_jsx_crumbs = crumbs\n\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tif( !node ) {\n\t\t\tnode = Elem\n\t\t\t\t? $mol_jsx_document.createElementNS( props?.xmlns ?? 'http://www.w3.org/1999/xhtml', Elem )\n\t\t\t\t: $mol_jsx_document.createDocumentFragment()\n\t\t}\n\n\t\t$mol_dom_render_children( node , ( [] as ( Node | string )[] ).concat( ... childNodes ) )\n\t\tif( !Elem ) return node\n\n\t\tif( guid ) ( node as Element ).id = guid\n\t\tfor( const key in props ) {\n\t\t\tif( key === 'id' ) continue\n\n\t\t\tif( typeof props[ key ] === 'string' ) {\n\n\t\t\t\t;( node as Element ).setAttribute( key , props[ key as any ] )\n\n\t\t\t} else if(\n\t\t\t\tprops[ key ] &&\n\t\t\t\ttypeof props[ key ] === 'object' &&\n\t\t\t\tReflect.getPrototypeOf( props[ key ] as any ) === Reflect.getPrototypeOf({})\n\t\t\t) {\n\n\t\t\t\tif( typeof node[ key as any ] === 'object' ) {\n\t\t\t\t\tObject.assign( ( node as any )[ key ] , props[ key ] )\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tnode[ key as any ] = props[ key ]\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tif( $mol_jsx_crumbs ) ( node as Element ).className = ( props?.['class'] ? props['class'] + ' ' : '' ) + crumbs_self\n\n\t\treturn node\n\n\t}\n\n\texport declare namespace $mol_jsx.JSX {\n\n\t\texport interface Element extends HTMLElement {\n\t\t\tclass?: string\n\t\t}\n\t\t\n\t\texport interface ElementClass {\n\t\t\tattributes : {}\n\t\t\townerDocument : Pick< Document , 'getElementById' | 'createElementNS' | 'createDocumentFragment' >\n\t\t\tchildNodes : Array< Node | string >\n\t\t\tvalueOf() : Element\n\t\t}\n\t\t\n\t\ttype OrString< Dict > = {\n\t\t\t[ key in keyof Dict ]: Dict[ key ] | string\n\t\t}\n\t\t\n\t\t/** Props for html elements */\n\t\texport type IntrinsicElements = {\n\t\t\t[ key in keyof ElementTagNameMap ]? : $.$mol_type_partial_deep< OrString<\n\t\t\t\t& Element\n\t\t\t\t& IntrinsicAttributes\n\t\t\t\t& ElementTagNameMap[ key ]\n\t\t\t> >\n\t\t}\n\t\t\n\t\t/** Additional undeclared props */\n\t\texport interface IntrinsicAttributes {\n\t\t\tid? : string\n\t\t\txmlns? : string\n\t\t}\n\t\t\n\t\texport interface ElementAttributesProperty {\n\t\t\tattributes : {\n\t\t\t}\n\t\t}\n\t\t\n\t\t// export type IntrinsicClassAttributes< Class > = $.$mol_type_partial_deep< Omit< Class , 'valueOf' > >\n\t\t\n\t\tinterface ElementChildrenAttribute {\n\t\t}\n\t\n\t}\n\n}\n","/** @jsx $mol_jsx */\n/** @jsxFrag $mol_jsx_frag */\nnamespace $ {\n\t\n\t/** Stateless non-unique adapter to CROWD Tree for given Head. */\n\texport class $hyoo_crowd_node {\n\t\t\n\t\tconstructor(\n\t\t\treadonly land: $hyoo_crowd_land,\n\t\t\treadonly head: $mol_int62_pair,\n\t\t) {}\n\t\t\n\t\tstatic for< Node extends typeof $hyoo_crowd_node >(\n\t\t\tthis: Node,\n\t\t\tland: $hyoo_crowd_land,\n\t\t\thead: $mol_int62_pair,\n\t\t) {\n\t\t\treturn new this( land, head ) as InstanceType< Node >\n\t\t}\n\t\t\n\t\tworld() {\n\t\t\treturn this.land.world()\n\t\t}\n\t\t\n\t\t/** Returns another representation of this node. */\n\t\tas< Node extends typeof $hyoo_crowd_node >( Node: Node ) {\n\t\t\treturn new Node( this.land, this.head ) as InstanceType< Node >\n\t\t}\n\t\t\n\t\t/** Ordered inner alive Units. */\n\t\tunits() {\n\t\t\treturn this.land.unit_alives( this.head )\n\t\t}\n\t\t\n\t\t/** Ordered inner alive Node. */\n\t\tnodes< Node extends typeof $hyoo_crowd_node >( Node: Node ) {\n\t\t\treturn this.units().map( unit => new Node( this.land, unit.self() ) as InstanceType< Node > )\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t$mol_dev_format_shade( '/' ) ,\n\t\t\t\t$mol_dev_format_auto( this.units().map( unit => unit.data ) ) ,\n\t\t\t\t$mol_dev_format_shade( '/' ) ,\n\t\t\t\t$mol_dev_format_auto( this.nodes( $hyoo_crowd_node ) ) ,\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $hyoo_crowd_struct extends $hyoo_crowd_node {\n\t\t\n\t\t/** Returns inner node for key. */\n\t\tsub< Node extends typeof $hyoo_crowd_node >( key: string, Node: Node ) {\n\t\t\treturn new Node( this.land, $mol_int62_hash_string( key, this.head.lo, this.head.hi ) ) as InstanceType< Node >\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\t/** Conflict-free Reinterpretable Ordered Washed Data Tree */\n\texport class $hyoo_crowd_land extends $mol_object {\n\t\t\n\t\t@ $mol_memo.method\n\t\tid(): $mol_int62_pair {\n\t\t\treturn $mol_int62_random()\n\t\t}\n\t\t\n\t\tpeer(): $hyoo_crowd_peer {\n\t\t\treturn this.world().peer!\n\t\t}\n\t\t\n\t\tworld(): $hyoo_crowd_world {\n\t\t\t$mol_fail( new Error( `World isn't defined` ) )\n\t\t}\n\t\t\n\t\tget clock_auth() {\n\t\t\tthis.pub.promote()\n\t\t\treturn this._clocks[ $hyoo_crowd_unit_group.auth ]\n\t\t}\n\t\t\n\t\tget clock_data() {\n\t\t\tthis.pub.promote()\n\t\t\treturn this._clocks[ $hyoo_crowd_unit_group.data ]\n\t\t}\n\t\t\n\t\tget clocks() {\n\t\t\tthis.pub.promote()\n\t\t\treturn this._clocks\n\t\t}\n\t\t\n\t\treadonly pub = new $mol_wire_pub\n\t\treadonly _clocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t\n\t\t/** unit by head + self */\n\t\tprotected _unit_all = new $mol_dict<\n\t\t\t$hyoo_crowd_unit_id,\n\t\t\t$hyoo_crowd_unit\n\t\t>()\n\t\t\n\t\tunit(\n\t\t\thead: $mol_int62_pair,\n\t\t\tself: $mol_int62_pair,\n\t\t) {\n\t\t\treturn this._unit_all.get({ head, self })\n\t\t}\n\t\t\n\t\t/** units by head */\n\t\tprotected _unit_lists = new $mol_dict<\n\t\t\t$mol_int62_pair,\n\t\t\tundefined | $hyoo_crowd_unit[] & { dirty: boolean }\n\t\t>()\n\t\t\n\t\t/** Units by Head without tombstones */\n\t\tprotected _unit_alives = new $mol_dict<\n\t\t\t$mol_int62_pair,\n\t\t\tundefined | $hyoo_crowd_unit[]\n\t\t>()\n\t\t\n\t\tsize() {\n\t\t\treturn this._unit_all.size\n\t\t}\n\t\t\n\t\t/** Returns list of all Units for Node. */ \n\t\tprotected unit_list(\n\t\t\thead: $mol_int62_pair,\n\t\t) {\n\t\t\t\n\t\t\tlet kids = this._unit_lists.get( head )\n\t\t\tif( !kids ) this._unit_lists.set( head, kids = Object.assign( [], { dirty: false } ) )\n\t\t\t\n\t\t\treturn kids\n\t\t}\n\t\t\n\t\t/** Returns list of alive Units for Node. */ \n\t\tunit_alives(\n\t\t\thead: $mol_int62_pair,\n\t\t): readonly $hyoo_crowd_unit[] {\n\t\t\t\n\t\t\tthis.pub.promote()\n\t\t\t\n\t\t\tlet kids = this._unit_alives.get( head )\n\t\t\tif( !kids ) {\n\t\t\t\t\n\t\t\t\tconst all = this.unit_list( head )\n\t\t\t\tif( all.dirty ) this.resort( head )\n\t\t\t\t\n\t\t\t\tkids = all.filter( kid => kid.data !== null )\n\t\t\t\tthis._unit_alives.set( head, kids )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn kids\n\t\t}\n\t\t\n\t\t/** Root Node. */\n\t\tchief = new $hyoo_crowd_struct( this, { lo: 0, hi: 0 } )\n\t\t\n\t\t/** Generates new identifier. */\n\t\tid_new(): $mol_int62_pair {\n\t\t\t\n\t\t\tfor( let i = 0; i < 1000; ++i ) {\n\t\t\t\t\n\t\t\t\tconst id = $mol_int62_random()\n\t\t\t\t\n\t\t\t\tif( id.lo === 0 && id.hi === 0 ) continue // zero reserved for empty\n\t\t\t\tif( id.lo === this.id().lo && id.hi === this.id().hi ) continue // reserved for rights\n\t\t\t\tif( this._unit_lists.has( id ) ) continue // skip already exists\n\t\t\t\t\n\t\t\t\treturn id\n\t\t\t}\n\t\t\t\n\t\t\tthrow new Error( `Can't generate ID after 1000 times` )\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Makes independent clone with defined peer. */\n\t\tfork( auth: $hyoo_crowd_peer ) {\n\t\t\t\n\t\t\tconst fork = $hyoo_crowd_land.make({\n\t\t\t\tid: ()=> this.id(),\n\t\t\t\tpeer: ()=> this.peer(),\n\t\t\t})\n\t\t\t\n\t\t\treturn fork.apply( this.delta() )\n\t\t}\n\t\t\n\t\t/** Makes Delta bettween Clock and now. */\n\t\tdelta(\n\t\t\tclocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t) {\n\t\t\t\n\t\t\tthis.pub.promote()\n\t\t\t\n\t\t\tconst delta = [] as $hyoo_crowd_unit[]\n\t\t\t\n\t\t\tfor( const unit of this._unit_all.values() ) {\n\t\t\t\t\n\t\t\t\tconst time = clocks[ unit.group() ].time( unit.auth() )\n\t\t\t\tif( unit.time <= time ) continue\n\t\t\t\t\n\t\t\t\tdelta.push( unit! )\n\t\t\t}\n\t\t\t\n\t\t\tdelta.sort( $hyoo_crowd_unit_compare )\n\t\t\t\n\t\t\treturn delta as readonly $hyoo_crowd_unit[]\n\t\t}\n\t\t\n\t\tresort(\n\t\t\thead: $mol_int62_pair,\n\t\t) {\n\t\t\t\n\t\t\tconst kids = this._unit_lists.get( head )!\n\t\t\t\n\t\t\tconst queue = kids.splice(0).sort(\n\t\t\t\t( left, right )=> - $hyoo_crowd_unit_compare( left, right )\n\t\t\t)\n\t\t\t\n\t\t\tfor( let cursor = queue.length - 1; cursor >= 0; --cursor ) {\n\t\t\t\t\n\t\t\t\tconst kid = queue[cursor]\n\t\t\t\tlet index = 0\n\n\t\t\t\tif( kid.prev_lo || kid.prev_hi ) {\n\n\t\t\t\t\tindex = kids.findIndex( sib => sib.self_lo === kid.prev_lo && sib.self_hi === kid.prev_hi ) + 1\n\t\t\t\t\t\n\t\t\t\t\tif( !index ) {\n\n\t\t\t\t\t\tindex = kids.length\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( kid.next_lo || kid.next_hi ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tindex = kids.findIndex( sib => sib.self_lo === kid.next_lo && sib.self_hi === kid.next_hi )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( index === -1 ) continue\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tkids.splice( index, 0, kid )\n\t\t\t\tqueue.splice( cursor, 1 )\n\t\t\t\tcursor = queue.length\n\n\t\t\t}\n\t\t\t\n\t\t\tthis._unit_lists.set( head, kids )\n\t\t\tkids.dirty = false\n\t\t\t\n\t\t\treturn kids\n\t\t}\n\t\t\n\t\t/** Applies Delta to current state. */\n\t\tapply( delta: readonly $hyoo_crowd_unit[] ) {\n\t\t\t\n\t\t\tfor( const next of delta ) {\n\t\t\t\t\n\t\t\t\tthis._clocks[ next.group() ].see_peer( next.auth(), next.time )\n\t\t\t\tconst kids = this.unit_list( next.head() )\n\t\t\t\t\n\t\t\t\tlet prev = this._unit_all.get( next.id() )\n\t\t\t\tif( prev ) {\n\t\t\t\t\tif( $hyoo_crowd_unit_compare( prev, next ) > 0 ) continue\n\t\t\t\t\tkids.splice( kids.indexOf( prev ), 1, next )\n\t\t\t\t} else {\n\t\t\t\t\tkids.push( next )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._unit_all.set( next.id(), next )\n\t\t\t\tkids.dirty = true\n\t\t\t\tthis._unit_alives.set( next.head(), undefined )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.pub.emit()\n\t\t\t\n\t\t\treturn this\n\t\t}\n\t\t\n\t\t_joined = false\n\t\t\n\t\t/** Register public key of current peer **/\n\t\tjoin() {\n\t\t\t\n\t\t\tif( this._joined ) return\n\t\t\t\n\t\t\tconst { id: peer, key_public_serial } = this.peer()\n\t\t\tif( !key_public_serial ) return\n\t\t\t\n\t\t\tconst auth = this._unit_all.get({ head: peer, self: peer })\n\t\t\tif( auth ) return\n\t\t\t\n\t\t\tconst time = this._clocks[ $hyoo_crowd_unit_group.auth ].tick( peer )\n\t\t\t\n\t\t\tconst join_unit = new $hyoo_crowd_unit(\n\t\t\t\t\n\t\t\t\tthis.id().lo,\n\t\t\t\tthis.id().hi,\n\t\t\t\tpeer.lo,\n\t\t\t\tpeer.hi,\n\t\t\t\t\n\t\t\t\tpeer.lo,\n\t\t\t\tpeer.hi,\n\t\t\t\tpeer.lo,\n\t\t\t\tpeer.hi,\n\t\t\t\t\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t\n\t\t\t\ttime,\n\t\t\t\tkey_public_serial,\n\t\t\t\tnull,\n\t\t\t\t\n\t\t\t)\n\t\t\t\n\t\t\tthis._unit_all.set( { head: peer, self: peer }, join_unit )\n\t\t\t\n\t\t\tthis._joined = true\n\t\t\t\n\t\t}\n\t\t\n\t\tlevel_base( next?: $hyoo_crowd_peer_level ) {\n\t\t\tthis.level( { lo: 0, hi: 0 }, next )\n\t\t}\n\t\t\n\t\tlevel( peer: $mol_int62_pair, next?: $hyoo_crowd_peer_level ) {\n\t\t\t\n\t\t\tthis.join()\n\t\t\t\n\t\t\tconst exists = this._unit_all.get({ head: this.id(), self: peer })\n\t\t\tconst prev = exists?.level() ?? $hyoo_crowd_peer_level.get\n\t\t\t\n\t\t\tif( next === undefined ) return prev\n\t\t\tif( next <= prev ) return prev\n\t\t\t\n\t\t\tconst time = this._clocks[ $hyoo_crowd_unit_group.auth ].tick( peer )\n\t\t\tconst auth = this.peer()\n\t\t\t\n\t\t\tconst join_unit = new $hyoo_crowd_unit(\n\t\t\t\t\n\t\t\t\tthis.id().lo,\n\t\t\t\tthis.id().hi,\n\t\t\t\tauth.id.lo,\n\t\t\t\tauth.id.hi,\n\t\t\t\t\n\t\t\t\tthis.id().lo,\n\t\t\t\tthis.id().hi,\n\t\t\t\tpeer.lo,\n\t\t\t\tpeer.hi,\n\t\t\t\t\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\t\n\t\t\t\ttime,\n\t\t\t\tnext,\n\t\t\t\tnull,\n\t\t\t\t\n\t\t\t)\n\t\t\t\n\t\t\tthis._unit_all.set( { head: this.id(), self: peer }, join_unit )\n\t\t\tthis.pub.emit()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t/** Places data to tree. */\n\t\tput(\n\t\t\thead: $mol_int62_pair,\n\t\t\tself: $mol_int62_pair,\n\t\t\tprev: $mol_int62_pair,\n\t\t\tdata: unknown,\n\t\t) {\n\t\t\t\n\t\t\tthis.join()\n\t\t\t\n\t\t\tlet unit_old = this._unit_all.get({ head, self })\n\t\t\tlet unit_prev = prev ? this._unit_all.get({ head, self: prev })! : null\n\t\t\t\n\t\t\tconst unit_list = this.unit_list( head ) as $hyoo_crowd_unit[]\n\t\t\tif( unit_old ) unit_list.splice( unit_list.indexOf( unit_old ), 1 )\n\t\t\t\n\t\t\tconst seat = unit_prev ? unit_list.indexOf( unit_prev ) + 1 : 0\n\t\t\tconst lead = unit_list[ seat ]\n\t\t\t\n\t\t\tconst next = lead?.self() ?? { lo: 0, hi: 0 }\n\t\t\t\n\t\t\tconst time = this._clocks[ $hyoo_crowd_unit_group.data ].tick( this.peer().id )\n\t\t\tconst auth = this.peer()\n\t\t\t\n\t\t\tconst unit_new = new $hyoo_crowd_unit(\n\t\t\t\t\n\t\t\t\tthis.id().lo,\n\t\t\t\tthis.id().hi,\n\t\t\t\tauth.id.lo,\n\t\t\t\tauth.id.hi,\n\t\t\t\t\n\t\t\t\thead.lo,\n\t\t\t\thead.hi,\n\t\t\t\tself.lo,\n\t\t\t\tself.hi,\n\t\t\t\t\n\t\t\t\tnext.lo,\n\t\t\t\tnext.hi,\n\t\t\t\tprev.lo,\n\t\t\t\tprev.hi,\n\t\t\t\t\n\t\t\t\ttime,\n\t\t\t\tdata,\n\t\t\t\tnull,\n\t\t\t\t\n\t\t\t)\n\t\t\t\n\t\t\tthis._unit_all.set( { head, self }, unit_new )\n\t\t\t\n\t\t\tunit_list.splice( seat, 0, unit_new )\n\t\t\tthis._unit_alives.set( head, undefined )\n\t\t\t\n\t\t\t// this.apply([ unit ])\n\t\t\t\n\t\t\tthis.pub.emit()\n\t\t\t\n\t\t\treturn unit_new\n\t\t}\n\t\t\n\t\t/** Recursively marks unit with its subtree as deleted and wipes data. */\n\t\twipe( unit: $hyoo_crowd_unit ) {\n\t\t\t\n\t\t\tif( unit.data === null ) return unit\n\t\t\t\n\t\t\tfor( const kid of this.unit_list( unit.self() ) ) {\n\t\t\t\tthis.wipe( kid )\n\t\t\t}\n\t\t\t\n\t\t\tconst unit_list = this.unit_list( unit.head() )\n\t\t\tconst seat = unit_list.indexOf( unit )\n\t\t\t\n\t\t\tconst prev = seat > 0 ? unit_list[ seat - 1 ].self() : seat < 0 ? unit.prev() : { lo: 0, hi: 0 }\n\t\t\t\n\t\t\treturn this.put(\n\t\t\t\tunit.head(),\n\t\t\t\tunit.self(),\n\t\t\t\tprev,\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Moves Unit after another Prev inside some Head. */\n\t\tmove(\n\t\t\tunit: $hyoo_crowd_unit,\n\t\t\thead: $mol_int62_pair,\n\t\t\tprev: $mol_int62_pair,\n\t\t) {\n\t\t\t\n\t\t\tthis.wipe( unit )\n\t\t\t\n\t\t\treturn this.put(\n\t\t\t\thead,\n\t\t\t\tunit.self(),\n\t\t\t\tprev,\n\t\t\t\tunit.data\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Moves Unit at given Seat inside given Head. */\n\t\tinsert(\n\t\t\tunit: $hyoo_crowd_unit,\n\t\t\thead: $mol_int62_pair,\n\t\t\tseat: number,\n\t\t) {\n\t\t\tconst list = this.unit_list( head )\n\t\t\tconst prev = seat ? list[ seat - 1 ].self() : { lo: 0, hi: 0 }\n\t\t\treturn this.move( unit, head, prev )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ { \n\texport function $mol_const< Value >( value : Value ) {\n\t\tvar getter = <{ () : Value , '()' : Value }> ( () => value )\n\t\tgetter['()'] = value\n\t\tgetter[ Symbol.toStringTag ] = value\n\t\treturn getter\n\t}\n}\n","namespace $ {\n\texport class $hyoo_crowd_world extends $mol_object2 {\n\t\t\n\t\tconstructor(\n\t\t\treadonly peer?: $hyoo_crowd_peer\n\t\t) {\n\t\t\tsuper()\n\t\t\tif( peer ) this._knights.set( peer.id , peer )\n\t\t}\n\t\t\n\t\treadonly lands_pub = new $mol_wire_pub\n\t\t\n\t\t_lands = new $mol_dict<\n\t\t\t$mol_int62_pair,\n\t\t\t$hyoo_crowd_land\n\t\t>()\n\t\t\n\t\tget lands() {\n\t\t\tthis.lands_pub.promote()\n\t\t\treturn this._lands\n\t\t}\n\t\t\n\t\tland_init( id: $hyoo_crowd_land ) { }\n\t\t\n\t\tland(\n\t\t\tid: $mol_int62_pair,\n\t\t) {\n\t\t\t\n\t\t\tconst exists = this._lands.get( id )\n\t\t\tif( exists ) return exists\n\t\t\t\n\t\t\tconst land = $hyoo_crowd_land.make({\n\t\t\t\tid: $mol_const( id ),\n\t\t\t\tworld: $mol_const( this ),\n\t\t\t})\n\t\t\t\n\t\t\tthis._lands.set( id, land )\n\t\t\tthis.lands_pub.emit()\n\t\t\t\n\t\t\treturn land\n\t\t}\n\t\t\n\t\tland_sync(\n\t\t\tid: $mol_int62_pair,\n\t\t) {\n\t\t\tconst land = this.land( id )\n\t\t\tthis.land_init( land )\n\t\t\treturn land\n\t\t}\n\t\t\n\t\thome() {\n\t\t\treturn this.land( this.peer!.id )\n\t\t}\n\t\t\n\t\t_knights = new $mol_dict<\n\t\t\t$mol_int62_pair,\n\t\t\t$hyoo_crowd_peer\n\t\t>()\n\t\t\n\t\t_signs = new WeakMap< $hyoo_crowd_unit, Uint8Array >()\n\t\t\n\t\tasync grab(\n\t\t\tking_level = $hyoo_crowd_peer_level.law,\n\t\t\tbase_level = $hyoo_crowd_peer_level.get,\n\t\t) {\n\t\t\t\n\t\t\tif( !king_level && !base_level ) $mol_fail( new Error( 'Grabbing dead land' ) )\n\t\t\t\n\t\t\tconst knight = await $hyoo_crowd_peer.generate()\n\t\t\tthis._knights.set( knight.id, knight )\n\t\t\t\n\t\t\tconst land_inner = this.land( knight.id )\n\t\t\tconst land_outer = $hyoo_crowd_land.make({\n\t\t\t\tid: $mol_const( knight.id ),\n\t\t\t\tpeer: $mol_const( knight ),\n\t\t\t})\n\t\t\t\n\t\t\tland_outer.level( this.peer!.id, king_level )\n\t\t\tland_outer.level_base( base_level )\n\t\t\t\n\t\t\tland_inner.apply( land_outer.delta() )\n\t\t\t\n\t\t\treturn land_inner\n\t\t}\n\t\t\n\t\tasync delta_land(\n\t\t\tland: $hyoo_crowd_land,\n\t\t\tclocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t) {\n\t\t\t\n\t\t\tconst units = land.delta( clocks )\n\t\t\tif( !units.length ) return []\n\t\t\t\n\t\t\t// let size = 0\n\t\t\t// const bins = [] as $hyoo_crowd_unit_bin[]\n\t\t\t\n\t\t\tfor( const unit of units ) {\n\t\t\t\t\n\t\t\t\tif( !unit.bin ) {\n\t\t\t\t\n\t\t\t\t\tconst bin = $hyoo_crowd_unit_bin.from( unit )\n\t\t\t\t\t\n\t\t\t\t\tlet sign = this._signs.get( unit )\n\t\t\t\t\tif( !sign ) {\n\t\t\t\t\t\tconst knight = this._knights.get( unit.auth() )!\n\t\t\t\t\t\tsign = new Uint8Array( await knight.key_private.sign( bin.sens() ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbin.sign( sign )\n\t\t\t\t\tunit.bin = bin\n\t\t\t\t\tthis._signs.set( unit, sign )\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// bins.push( bin )\n\t\t\t\t// yield unit\n\t\t\t\t// size += unit.bin.byteLength\n\t\t\t\t// if( size > 2 ** 15 ) break\n\t\t\t}\n\t\t\t\n\t\t\t// const delta = new Uint8Array( size )\n\t\t\t\n\t\t\t// let offset = 0\n\t\t\t// for( const bin of bins ) {\n\t\t\t// \tdelta.set( new Uint8Array( bin.buffer ), offset )\n\t\t\t// \toffset += bin.byteLength\n\t\t\t// }\n\t\t\t\n\t\t\t// yield delta\n\t\t\treturn units\n\t\t}\n\t\t\n\t\tasync delta( clocks = new $mol_dict< $mol_int62_pair, readonly[ $hyoo_crowd_clock, $hyoo_crowd_clock ] >() ) {\n\t\t\t\n\t\t\tconst delta = [] as $hyoo_crowd_unit[]\n\t\t\t\n\t\t\tfor( const land of this.lands.values() ) {\n\t\t\t\tconst units = await this.delta_land( land, clocks.get( land.id() ) )\n\t\t\t\tdelta.push( ... units )\n\t\t\t}\n\t\t\t\n\t\t\treturn delta\n\t\t}\n\t\t\n\t\tasync apply(\n\t\t\tdelta: Uint8Array,\n\t\t) {\n\t\t\t\n\t\t\tconst broken = [] as [ $hyoo_crowd_unit, string ][]\n\t\t\t\n\t\t\tlet bin_offset = 0\n\t\t\twhile( bin_offset < delta.byteLength ) {\n\t\t\t\t\n\t\t\t\tconst bin = new $hyoo_crowd_unit_bin( delta.buffer, delta.byteOffset + bin_offset )\n\t\t\t\tconst unit = bin.unit()\n\t\t\t\t\n\t\t\t\tconst error = await this.apply_unit( unit )\n\t\t\t\tif( error ) broken.push([ unit, error ])\n\t\t\t\t\n\t\t\t\tbin_offset += bin.size()\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn broken\n\t\t}\n\t\t\n\t\tasync apply_unit(\n\t\t\tunit: $hyoo_crowd_unit,\n\t\t) {\n\t\t\t\n\t\t\tconst land = this.land( unit.land() )\n\t\t\t\n\t\t\ttry {\n\t\t\t\tawait this.audit( unit )\n\t\t\t} catch( error: any ) {\n\t\t\t\treturn error.message as string\n\t\t\t}\n\t\t\n\t\t\tland.apply([ unit ])\n\t\t\t\n\t\t\treturn ''\n\t\t}\n\t\t\n\t\tasync audit(\n\t\t\tunit: $hyoo_crowd_unit,\n\t\t) {\n\t\t\t\n\t\t\tconst land = this.land( unit.land() )\n\t\t\tconst bin = unit.bin!\n\t\t\t\t\n\t\t\tconst desync = 60 * 60 * 10 // 1 hour\n\t\t\tconst deadline = land.clock_data.now() + desync\n\t\t\t\n\t\t\tif( unit.time > deadline ) {\n\t\t\t\t$mol_fail( new Error( 'Far future' ) )\n\t\t\t}\n\t\t\t\n\t\t\tconst auth_unit = land.unit( unit.auth(), unit.auth() )\n\t\t\tconst kind = unit.kind()\n\t\t\t\n\t\t\tswitch( kind ) {\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.join: {\n\t\t\t\t\n\t\t\t\t\tif( auth_unit ) {\n\t\t\t\t\t\t$mol_fail( new Error( 'Already join' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(!( unit.data instanceof Uint8Array )) {\n\t\t\t\t\t\t$mol_fail( new Error( 'No join key' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst key_buf = unit.data\n\t\t\t\t\tconst self = $mol_int62_hash_buffer( key_buf )\n\t\t\t\t\t\n\t\t\t\t\tif( unit.self_lo !== self.lo || unit.self_hi !== self.hi ) {\n\t\t\t\t\t\t$mol_fail( new Error( 'Alien join key' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst key = await $mol_crypto_auditor_public.from( key_buf )\n\t\t\t\t\tconst sign = bin.sign()\n\t\t\t\t\tconst valid = await key.verify( bin.sens(), sign )\n\t\t\t\t\t\n\t\t\t\t\tif( !valid ) {\n\t\t\t\t\t\t$mol_fail( new Error( 'Wrong join sign' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis._signs.set( unit, sign )\n\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.give: {\n\t\t\t\t\t\n\t\t\t\t\tconst king_unit = land.unit( land.id(), land.id() )\n\t\t\t\t\t\n\t\t\t\t\tif( !king_unit ) {\n\t\t\t\t\t\t$mol_fail( new Error( 'No king' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst give_unit = land.unit( land.id(), unit.self() )\n\t\t\t\t\t\n\t\t\t\t\tif( give_unit?.level() as number > unit.level() ) {\n\t\t\t\t\t\t$mol_fail( new Error( `Revoke unsupported` ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif( unit.auth_lo === king_unit.auth_lo && unit.auth_hi === king_unit.auth_hi ) break\n\t\t\t\t\t\n\t\t\t\t\tconst lord_unit = land.unit( land.id(), unit.auth() )\n\t\t\t\t\t\n\t\t\t\t\tif( lord_unit?.level() !== $hyoo_crowd_peer_level.law ) {\n\t\t\t\t\t\t$mol_fail( new Error( `Need law level` ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.data: {\n\t\t\t\t\n\t\t\t\t\tconst king_unit = land.unit( land.id(), land.id() )\n\t\t\t\t\t\n\t\t\t\t\tif( !king_unit ) {\n\t\t\t\t\t\t$mol_fail( new Error( 'No king' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif( unit.auth_lo === king_unit.auth_lo && unit.auth_hi === king_unit.auth_hi ) break\n\t\t\t\t\t\n\t\t\t\t\tdirect: {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst give_unit = land.unit( land.id(), unit.auth() )\n\t\t\t\t\t\tconst level = give_unit?.level() ?? $hyoo_crowd_peer_level.get\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( level >= $hyoo_crowd_peer_level.mod ) break\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( level === $hyoo_crowd_peer_level.add ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst exists = land.unit( unit.head(), unit.self() )\n\t\t\t\t\t\t\tif( !exists ) break\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( exists.auth_lo === unit.auth_lo && exists.auth_hi === unit.auth_hi ) break\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfallback: {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst give_unit = land.unit( land.id(), { lo: 0, hi: 0 } )\n\t\t\t\t\t\tconst level = give_unit?.level() ?? $hyoo_crowd_peer_level.get\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( level >= $hyoo_crowd_peer_level.mod ) break\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( level === $hyoo_crowd_peer_level.add ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst exists = land.unit( unit.head(), unit.self() )\n\t\t\t\t\t\t\tif( !exists ) break\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( exists.auth_lo === unit.auth_lo && exists.auth_hi === unit.auth_hi ) break\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$mol_fail( new Error( `No rights` ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif( !auth_unit ) {\n\t\t\t\t$mol_fail( new Error( 'No auth key' ) )\n\t\t\t}\n\t\t\t\n\t\t\tconst key_buf = auth_unit.data as Uint8Array\n\t\t\tconst key = await $mol_crypto_auditor_public.from( key_buf )\n\t\t\tconst sign = bin.sign()\n\t\t\tconst valid = await key.verify( bin.sens(), sign )\n\t\t\t\n\t\t\tif( !valid ) {\n\t\t\t\t$mol_fail( new Error( 'Wrong auth sign' ) )\n\t\t\t}\n\t\t\t\n\t\t\tthis._signs.set( unit, sign )\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\n\texport class $mol_state_arg extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic href( next? : string ) : string {\n\t\t\treturn next || process.argv.slice( 2 ).join( ' ' )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic href_normal(): string {\n\t\t\treturn this.link({})\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic dict( next? : { [ key : string ] : string | null } ) {\n\t\t\tif( next !== void 0 ) this.href( this.make_link( next ) )\n\t\t\t\n\t\t\tvar href = this.href()\n\t\t\tvar chunks = href.split( ' ' )\n\t\t\t\n\t\t\tvar params : { [ key : string ] : string } = {}\n\t\t\tchunks.forEach(\n\t\t\t\tchunk => {\n\t\t\t\t\tif( !chunk ) return\n\t\t\t\t\tvar vals = chunk.split( '=' ).map( decodeURIComponent )\n\t\t\t\t\tparams[ vals.shift()! ] = vals.join('=')\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn params\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic value( key : string , next? : string | null ) {\n\t\t\tif( next === void 0 ) return this.dict()[ key ] ?? null\n\t\t\tthis.href( this.link( { [ key ] : next } ) )\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tstatic link( next : any ) {\n\t\t\tvar params : { [ key : string ] : any } = {}\n\t\t\t\n\t\t\tvar prev = this.dict()\n\t\t\tfor( var key in prev ) {\n\t\t\t\tparams[ key ] = prev[ key ]\n\t\t\t}\n\t\t\t\n\t\t\tfor( var key in next ) {\n\t\t\t\tparams[ key ] = next[ key ]\n\t\t\t}\n\t\t\t\n\t\t\treturn this.make_link( params )\n\t\t}\n\t\t\n\t\tstatic make_link( next : { [ key : string ] : any } ) {\n\t\t\tvar chunks : string[] = []\n\t\t\tfor( var key in next ) {\n\t\t\t\tif( null == next[ key ] ) continue\n\t\t\t\tchunks.push( [ key ].concat( next[ key ] ).map( encodeURIComponent ).join( '=' ) )\n\t\t\t}\n\t\t\t\n\t\t\treturn chunks.join( ' ' )\n\t\t}\n\t\t\n\t\tconstructor( public prefix = '' ) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tvalue( key : string , next? : string ) {\n\t\t\treturn ( this.constructor as typeof $mol_state_arg ).value( this.prefix + key , next )\n\t\t}\n\t\t\n\t\tsub( postfix : string ) {\n\t\t\treturn new ( this.constructor as typeof $mol_state_arg )( this.prefix + postfix + '.' )\n\t\t}\n\t\t\n\t\tlink( next : { [ key : string ] : string } ) {\n\t\t\tvar prefix = this.prefix\n\t\t\tvar dict : { [ key : string ] : any } = {}\n\t\t\tfor( var key in next ) {\n\t\t\t\tdict[ prefix + key ] = next[ key ]\n\t\t\t}\n\t\t\treturn ( this.constructor as typeof $mol_state_arg ).link( dict )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport function $mol_env() {\n\t\treturn {} as Record< string, string | undefined >\n\t}\n}\n","namespace $ {\n\t$.$mol_env = function $mol_env() {\n\t\treturn this.process.env\n\t}\n}\n","namespace $ {\n\texport function $mol_exec(\n\t\tthis : $ ,\n\t\tdir : string ,\n\t\tcommand : string ,\n\t\t...args : string[]\n\t) {\n\n\t\tlet [ app , ... args0 ] = command.split( ' ' )\n\t\targs = [ ... args0 , ... args ]\n\n\t\tthis.$mol_log3_come({\n\t\t\tplace: '$mol_exec' ,\n\t\t\tdir: $node.path.relative( '' , dir ) ,\n\t\t\tmessage: 'Run',\n\t\t\tcommand: `${app} ${ args.join(' ') }` ,\n\t\t})\n\n\t\tvar res = $node['child_process'].spawnSync(\n\t\t\tapp ,\n\t\t\targs,\n\t\t\t{\n\t\t\t\tcwd : $node.path.resolve( dir ) ,\n\t\t\t\tshell : true ,\n\t\t\t\tenv: this.$mol_env(),\n\t\t\t}\n\t\t)\n\t\t\n\t\tif( res.status || res.error ) return $mol_fail( res.error || new Error( res.stderr.toString() ) )\n\t\tif( !res.stdout ) res.stdout = Buffer.from([])\n\n\t\treturn res\n\t}\n}\n","namespace $ {\n\t\n\texport class $hyoo_sync_server extends $mol_object2 {\n\t\t\n\t\t@ $mol_mem\n\t\thttp() {\n\t\t\t\n\t\t\tconst server = $node.http.createServer( ( req, res )=> {\n\t\t\t\tres.writeHead( 200, { 'Content-Type': 'text/plain' } )\n\t\t\t\tres.end( '$hyoo_sync_server is ON' )\n\t\t\t} )\n\t\t\t\n\t\t\tserver.listen( this.port() )\n\t\t\t\n\t\t\tconsole.log( 'Server started http://localhost:' + this.port() + '/' )\n\t\t\t\n\t\t\treturn server\n\t\t}\n\t\t\n\t\tlines = new Set< InstanceType< $node['ws'] > >()\n\t\t\n\t\t@ $mol_mem_key\n\t\tline_clocks( { line, land }: {\n\t\t\tline: InstanceType< typeof $node.ws.WebSocket >,\n\t\t\tland: $mol_int62_pair,\n\t\t} ) {\n\t\t\treturn [\n\t\t\t\tnew $hyoo_crowd_clock,\n\t\t\t\tnew $hyoo_crowd_clock,\n\t\t\t] as const\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsocket() {\n\n\t\t\tconst socket = new $node.ws.Server({\n\t\t\t\tserver : this.http() ,\n\t\t\t\tperMessageDeflate: {\n\t\t\t\t\tzlibDeflateOptions: {\n\t\t\t\t\t\tchunkSize: 1024,\n\t\t\t\t\t\tmemLevel: 7,\n\t\t\t\t\t\tlevel: 3\n\t\t\t\t\t},\n\t\t\t\t\tzlibInflateOptions: {\n\t\t\t\t\t\tchunkSize: 10 * 1024\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tsocket.on( 'connection' , line => {\n\n\t\t\t\tthis.$.$mol_log3_come({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: 'Peer join',\n\t\t\t\t\tline: $mol_key( line ),\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.lines.add( line )\n\t\t\t\t\n\t\t\t\tline.on( 'close', ()=> {\n\t\t\t\t\tthis.$.$mol_log3_done({\n\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\tmessage: 'Peer leave',\n\t\t\t\t\t\tline: $mol_key( line ),\n\t\t\t\t\t})\t\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tline.on( 'message', async( message, isBinary )=> {\n\t\t\t\t\tconsole.log(message)\n\t\t\t\t\tif( !isBinary ) return\n\t\t\t\t\tif( message instanceof Array ) return\n\t\t\t\t\t\n\t\t\t\t\tconst data = new Int32Array( new Uint8Array( message ).buffer )\n\t\t\t\t\t\n\t\t\t\t\tif( data[0] << 1 >> 1 ^ data[0] ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst line_bin = new $hyoo_crowd_clock_bin( data.buffer )\n\t\t\t\t\t\tconst land = this.world().land( line_bin.land() )\n\t\t\t\t\t\tconst line_clocks = this.line_clocks({ line, land: land.id() })\n\t\n\t\t\t\t\t\tline_clocks[ $hyoo_crowd_unit_group.auth ].see_bin( line_bin, $hyoo_crowd_unit_group.auth )\n\t\t\t\t\t\tline_clocks[ $hyoo_crowd_unit_group.data ].see_bin( line_bin, $hyoo_crowd_unit_group.data )\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst self_bin = $hyoo_crowd_clock_bin.from( land.id(), land._clocks )\n\t\t\t\t\t\tline.send( self_bin, { binary: true } )\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.$.$mol_log3_come({\n\t\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\t\tmessage: 'Sync Start',\n\t\t\t\t\t\t\tline: $mol_key( line ),\n\t\t\t\t\t\t\tland: $mol_int62_to_string( land.id() ),\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst delta = await this.world().delta_land( land, line_clocks )\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor( const unit of delta ) {\n\t\t\t\t\t\t\tline.send( unit.bin!, { binary: true } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tconst bin = new $hyoo_crowd_unit_bin( data.buffer )\n\t\t\t\t\tconst unit = bin.unit()\n\t\t\t\t\tlet error\n\t\t\t\t\t\n\t\t\t\t\t// Serialize units handling\n\t\t\t\t\twhile( line.isPaused ) {\n\t\t\t\t\t\tawait new Promise( done => setTimeout( done ) )\n\t\t\t\t\t}\n\n\t\t\t\t\tline.pause()\n\t\t\t\t\ttry {\n\t\t\t\t\t\terror = await this.world().apply_unit( unit )\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tline.resume()\n\t\t\t\t\t}\n\n\t\t\t\t\tif( error ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.$.$mol_log3_fail({\n\t\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\t\tmessage: error,\n\t\t\t\t\t\t\tline: $mol_key( line ),\n\t\t\t\t\t\t\tunit: {\n\t\t\t\t\t\t\t\tkind: $hyoo_crowd_unit_kind[ unit.kind() ],\n\t\t\t\t\t\t\t\tland: $mol_int62_to_string( unit.land() ),\n\t\t\t\t\t\t\t\tauth: $mol_int62_to_string( unit.auth() ),\n\t\t\t\t\t\t\t\thead: $mol_int62_to_string( unit.head() ),\n\t\t\t\t\t\t\t\tself: $mol_int62_to_string( unit.self() ),\n\t\t\t\t\t\t\t\tnext: $mol_int62_to_string( unit.next() ),\n\t\t\t\t\t\t\t\tprev: $mol_int62_to_string( unit.prev() ),\n\t\t\t\t\t\t\t\ttime: unit.time,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst land = this.world().land( unit.land() )\n\t\t\t\t\tconst line_clocks = this.line_clocks({ line, land: land.id() })\n\t\t\t\t\t\n\t\t\t\t\tconst clock = line_clocks[ unit.group() ]\n\t\t\t\t\tclock.see_peer( unit.auth(), unit.time )\n\t\t\t\t\t\n\t\t\t\t\t// this.$.$mol_log3_rise({\n\t\t\t\t\t// \tplace: this,\n\t\t\t\t\t// \tmessage: 'Come',\n\t\t\t\t\t// \tline: $mol_key( line ),\n\t\t\t\t\t// \tunit: {\n\t\t\t\t\t// \t\tkind: $hyoo_crowd_unit_kind[ unit.kind() ],\n\t\t\t\t\t// \t\tland: $mol_int62_to_string( unit.land() ),\n\t\t\t\t\t// \t\tauth: $mol_int62_to_string( unit.auth() ),\n\t\t\t\t\t// \t\thead: $mol_int62_to_string( unit.head() ),\n\t\t\t\t\t// \t\tself: $mol_int62_to_string( unit.self() ),\n\t\t\t\t\t// \t\tnext: $mol_int62_to_string( unit.next() ),\n\t\t\t\t\t// \t\tprev: $mol_int62_to_string( unit.prev() ),\n\t\t\t\t\t// \t\ttime: unit.time,\n\t\t\t\t\t// \t},\n\t\t\t\t\t// })\n\n\t\t\t\t\tfor( const other of this.lines ) {\n\t\t\t\t\t\tif( line === other ) continue\n\t\t\t\t\t\tconst other_clocks = this.line_clocks({ line: other, land: land.id() })\n\t\t\t\t\t\tif( other_clocks[ unit.group() ].fresh( unit.auth(), unit.time ) ) {\n\t\t\t\t\t\t\tother.send( message, { binary: true } )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} )\n\n\t\t\t} )\n\n\t\t\treturn socket\n\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tworld() {\n\t\t\treturn new $hyoo_crowd_world\n\t\t}\n\n\t\tport() { return 0 }\n\t\t\n\t\tstatic run( port: number ) {\n\t\t\tconst server = new this\n\t\t\tserver.port = $mol_const( port )\n\t\t\tserver.socket()\n\t\t\treturn server\n\t\t}\n\t\t\n\t}\n\t\n\tlet port = Number( process.env.PORT || $mol_state_arg.value( 'port' ) )\n\tif( port ) $hyoo_sync_server.run( port )\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_test_complete() {\n\t\tprocess.exit(0)\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_test( set : { [ name : string ] : string | ( ( context : $ )=> void ) } ) {\n\t\t\n\t\tfor( let name in set ) {\n\n\t\t\tconst code = set[ name ]\n\t\t\tconst test = ( typeof code === 'string' ) ? new Function( '' , code ) as ()=> void : code\n\t\t\t\n\t\t\t$mol_test_all.push( test )\n\t\t}\n\n\t\t$mol_test_schedule()\n\t}\n\n\texport let $mol_test_mocks = [] as Array< ( context : $ )=> void >\n\n\texport const $mol_test_all = [] as Array< ( context : $ )=> any >\n\n\texport async function $mol_test_run() {\n\n\t\tfor( var test of $mol_test_all ) {\n\n\t\t\tlet context = Object.create( $$ )\n\t\t\tfor( let mock of $mol_test_mocks ) await mock( context )\n\t\t\t\n\t\t\tconst res = test( context )\n\t\t\tif( res instanceof Promise ) {\n\t\t\t\tawait new Promise( ( done, fail )=> {\n\t\t\t\t\tres.then( done, fail )\n\t\t\t\t\tsetTimeout( ()=> fail( new Error( 'Test timeout: ' + test.name ) ), 1000 )\n\t\t\t\t} )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t$$.$mol_log3_done({\n\t\t\tplace: '$mol_test',\n\t\t\tmessage: 'All tests passed',\n\t\t\tcount: $mol_test_all.length,\n\t\t})\n\t\t\n\t}\n\t\n\tlet scheduled = false\n\texport function $mol_test_schedule() {\n\n\t\tif( scheduled ) return\n\t\tscheduled = true\n\n\t\tsetTimeout( async ()=> {\n\t\t\t\n\t\t\tscheduled = false\n \t\t\t\n\t\t\tawait $mol_test_run()\n\t\t\t$$.$mol_test_complete()\n\t\t\t\n\t\t} , 0 )\n\t\t\n\t}\n\n\t$mol_test_mocks.push( context => {\n\t\tlet seed = 0\n\n\t\tcontext.Math = Object.create( Math )\n\t\tcontext.Math.random = ()=> Math.sin( seed++ )\n\n\t\tconst forbidden = [ 'XMLHttpRequest' , 'fetch' ]\n\n\t\tfor( let api of forbidden ) {\n\t\t\tcontext[ api ] = new Proxy( function(){} , {\n\t\t\t\tget() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t\tapply() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t} )\n\t\t}\n\t\t\n\t} )\n\n\t$mol_test({\n\n\t\t'mocked Math.random'( $ ) {\n\t\t\tconsole.assert( $.Math.random() === 0 )\n\t\t\tconsole.assert( $.Math.random() === Math.sin(1) )\n\t\t} ,\n\n\t\t'forbidden XMLHttpRequest'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void new $.XMLHttpRequest )\n\t\t\t} catch( error: any ) {\n\t\t\t\tconsole.assert( error.message === 'XMLHttpRequest is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t\t'forbidden fetch'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void $.fetch('') )\n\t\t\t} catch( error: any ) {\n\t\t\t\tconsole.assert( error.message === 'fetch is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_log3_come = ()=> {}\n\t\t$.$mol_log3_done = ()=> {}\n\t\t$.$mol_log3_fail = ()=> {}\n\t\t$.$mol_log3_warn = ()=> {}\n\t\t$.$mol_log3_rise = ()=> {}\n\t\t$.$mol_log3_area = ()=> ()=> {}\n\t} )\n\n}\n",null,null,null,null,null,null,"/** @jsx $mol_jsx */\nnamespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Make empty div'() {\n\t\t\t$mol_assert_equal( (<div/>).outerHTML , '<div></div>' )\n\t\t} ,\n\t\t\n\t\t'Define native field'() {\n\t\t\t\n\t\t\tconst dom = <input value='123' /> as HTMLInputElement\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<input value=\"123\">' )\n\t\t\t$mol_assert_equal( dom.value, '123' )\n\n\t\t} ,\n\t\t\n\t\t'Define classes'() {\n\t\t\t\n\t\t\tconst dom = <div class={ 'foo bar' } />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div class=\"foo bar\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define styles'() {\n\t\t\t\n\t\t\tconst dom = <div style={{ color: 'red' }} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div style=\"color: red;\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define dataset'() {\n\t\t\t\n\t\t\tconst dom = <div dataset={{ foo: 'bar' }} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div data-foo=\"bar\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define attributes'() {\n\t\t\t\n\t\t\tconst dom = <div lang=\"ru\" hidden />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div lang=\"ru\" hidden=\"\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define child nodes'() {\n\n\t\t\tconst dom =\n\t\t\t\t<div>\n\t\t\t\t\thello\n\t\t\t\t\t<strong>world</strong>\n\t\t\t\t\t!\n\t\t\t\t</div>\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div>hello<strong>world</strong>!</div>' )\n\n\t\t} ,\n\n\t\t'Function as component'() {\n\n\t\t\tconst Button = (\n\t\t\t\tprops: { hint: string },\n\t\t\t\ttarget: ()=> string,\n\t\t\t) => {\n\t\t\t\treturn <button title={ props.hint } >{ target() }</button>\n\t\t\t}\n\n\t\t\tconst dom = <Button id=\"foo\" hint=\"click me\">{ ()=> 'hey!' }</Button>\n\n\t\t\t$mol_assert_equal( dom.outerHTML, '<button id=\"foo\" title=\"click me\" class=\"Button\">hey!</button>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Nested guid generation'() {\n\n\t\t\tconst Foo = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<Bar id=\"bar\">\n\t\t\t\t\t\t<img id=\"icon\" />\n\t\t\t\t\t</Bar>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tconst Bar = ( props: {}, icon: Element )=> {\n\t\t\t\treturn <span>{ icon }<i id=\"label\"/></span>\n\t\t\t}\n\n\t\t\tconst dom = <Foo id=\"foo\" />\n\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div id=\"foo\" class=\"Foo\"><span id=\"foo/bar\" class=\"Foo_bar Bar\"><img id=\"foo/icon\" class=\"Foo_icon\"><i id=\"foo/bar/label\" class=\"Foo_bar_label Bar_label\"></i></span></div>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Fail on non unique ids'() {\n\n\t\t\tconst App = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<span id=\"bar\" />\n\t\t\t\t\t<span id=\"bar\" />\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> <App id=\"foo\" />, 'JSX already has tag with id \"foo/bar\"' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Owner based guid generationn'() {\n\n\t\t\tconst Foo = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<Bar id=\"middle\" icon={ ()=> <img id=\"icon\" /> } />\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tconst Bar = ( props: { icon: ()=> Element } )=> {\n\t\t\t\treturn <span>{ props.icon() }</span>\n\t\t\t}\n\n\t\t\tconst dom = <Foo id=\"app\" />\n\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div id=\"app\" class=\"Foo\"><span id=\"app/middle\" class=\"Foo_middle Bar\"><img id=\"app/icon\" class=\"Foo_icon\"></span></div>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Fail on same ids from different caller'() {\n\n\t\t\tconst Foo = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<img id=\"icon\" />\n\t\t\t\t\t<Bar id=\"bar\" icon={ ()=> <img id=\"icon\" /> } />\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tconst Bar = ( props: { icon: ()=> Element } )=> {\n\t\t\t\treturn <span>{ props.icon() }</span>\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> <Foo id=\"foo\" />, 'JSX already has tag with id \"foo/icon\"' )\n\t\t\t\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","/** @jsx $mol_jsx */\nnamespace $ {\n\n\t$mol_test({\n\n\t\t'nulls & undefineds'() {\n\n\t\t\t$mol_assert_ok( $mol_compare_deep( null , null ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( undefined , undefined ) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( undefined , null ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( {} , null ) )\n\t\t\t\n\t\t} ,\n\n\t\t'number'() {\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep( 1 , 1 ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( Number.NaN , Number.NaN ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( 1 , 2 ) )\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep( Object( 1 ) , Object( 1 ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( Object( 1 ) , Object( 2 ) ) )\n\t\t\t\n\t\t} ,\n\n\t\t'POJO'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( {} , {} ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( { a : 1 } , { b : 2 } ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( { a : 1 } , { a : 2 } ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( {} , { a : undefined } ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( { a: 1, b: 2 } , { b: 2, a: 1 } ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( { a : { b : 1 } } , { a : { b : 1 } } ) )\n\t\t} ,\n\n\t\t'Array'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( [] , [] ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( [ 1 , [2] ] , [ 1 , [2] ] ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( [ 1 , 2 ] , [ 1 , 3 ] ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( [ 1 , 2 , ] , [ 1 , 3 , undefined ] ) )\n\t\t} ,\n\n\t\t'Non POJO are different'() {\n\t\t\t\n\t\t\tclass Thing extends Object {}\n\t\t\t$mol_assert_not( $mol_compare_deep( new Thing , new Thing ) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( ()=> 1 , ()=>1 ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new RangeError( 'Test error' ) , new RangeError( 'Test error' ) ) )\n\t\t\t\n\t\t} ,\n\n\t\t'same POJOs with cyclic reference'() {\n\n\t\t\tconst a = { foo : {} }\n\t\t\ta['self'] = a\n\n\t\t\tconst b = { foo : {} }\n\t\t\tb['self'] = b\n\n\t\t\t$mol_assert_ok( $mol_compare_deep( a , b ) )\n\n\t\t} ,\n\n\t\t'Date'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Date( 12345 ) , new Date( 12345 ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Date( 12345 ) , new Date( 12346 ) ) )\n\t\t} ,\n\n\t\t'RegExp'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( /\\x22/mig , /\\x22/mig ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( /\\x22/mig , /\\x21/mig ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( /\\x22/mig , /\\x22/mg ) )\n\t\t} ,\n\n\t\t'Error'() {\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( new Error( 'xxx' ) , new Error( 'xxx' ) ) )\n\n\t\t\tconst fail = ( message: string )=> new Error( message )\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep(\n\t\t\t\t... [ 'xxx' , 'xxx' ].map( msg => new Error( msg ) ) as [ Error, Error ]\n\t\t\t) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep(\n\t\t\t\t... [ 'xxx' , 'yyy' ].map( msg => new Error( msg ) ) as [ Error, Error ]\n\t\t\t) )\n\t\t\t\n\t\t} ,\n\n\t\t'Map'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Map , new Map ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Map([ [ 1 , [2] ] ]) , new Map([ [ 1 , [2] ] ]) ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Map([ [ [1] , 2 ] ]) , new Map([ [ [1] , 2 ] ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Map([ [ 1 , 2 ] ]) , new Map([ [ 1 , 3 ] ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Map([ [ [1] , 2 ] ]) , new Map([ [ [3] , 2 ] ]) ) )\n\t\t} ,\n\t\t\n\t\t'Set'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Set , new Set ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Set([ 1 , [2] ]) , new Set([ 1 , [2] ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Set([ 1 ]) , new Set([ 2 ]) ) )\n\t\t} ,\n\t\t\n\t\t'Uint8Array'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Uint8Array , new Uint8Array ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Uint8Array([ 0 ]) , new Uint8Array([ 0 ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Uint8Array([ 0 ]) , new Uint8Array([ 1 ]) ) )\n\t\t} ,\n\t\t\n\t\t'Custom comparator'() {\n\t\t\t\n\t\t\tclass User {\n\t\t\t\t\n\t\t\t\tconstructor(\n\t\t\t\t\treadonly name: string,\n\t\t\t\t\treadonly rand = Math.random(),\n\t\t\t\t) {}\n\t\t\t\t\n\t\t\t\t[ Symbol.toPrimitive ]( mode: 'default' | 'number' | 'string' ) {\n\t\t\t\t\treturn this.name\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep( new User( 'Jin' ), new User( 'Jin' ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new User( 'Jin' ), new User( 'John' ) ) )\n\t\t\t\n\t\t} ,\n\t\t\n\t})\n\n}\n","namespace $ {\n\n\texport function $mol_dom_serialize(\n\t\tnode: Node\n\t) {\n\t\tconst serializer = new $mol_dom_context.XMLSerializer\n\t\treturn serializer.serializeToString( node )\n\t}\n\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'must be false'() {\n\t\t\t$mol_assert_not( 0 )\n\t\t} ,\n\t\t\n\t\t'must be true'() {\n\t\t\t$mol_assert_ok( 1 )\n\t\t} ,\n\t\t\n\t\t'two must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'three must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'two must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'two must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\t\n\texport function $mol_assert_ok( value : any ) {\n\t\tif( value ) return\n\t\t$mol_fail( new Error( `${value} ≠ true` ) )\n\t}\n\t\n\texport function $mol_assert_not( value : any ) {\n\t\tif( !value ) return\n\t\t$mol_fail( new Error( `${value} ≠ false` ) )\n\t}\n\t\n\texport function $mol_assert_fail( handler : ()=> any , ErrorRight? : any ) {\n\t\t\n\t\tconst fail = $.$mol_fail\n\t\t\n\t\ttry {\n\t\t\t$.$mol_fail = $.$mol_fail_hidden\n\t\t\t\n\t\t\thandler()\n\n\t\t} catch( error: any ) {\n\t\t\t\n\t\t\tif( !ErrorRight ) return error\n\t\t\t\n\t\t\t$.$mol_fail = fail\n\n\t\t\tif( typeof ErrorRight === 'string' ) {\n\t\t\t\t$mol_assert_equal( error.message, ErrorRight )\n\t\t\t} else {\n\t\t\t\t$mol_assert_ok( error instanceof ErrorRight )\n\t\t\t}\n\t\t\t\n\t\t\treturn error\n\n\t\t} finally {\n\t\t\t$.$mol_fail = fail\n\t\t}\n\n\t\t$mol_fail( new Error( 'Not failed' ) )\n\t}\n\t\n\texport function $mol_assert_equal< Value >( ... args : [ Value, Value, ...Value[] ] ) {\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( Number.isNaN( args[i] as any as number ) && Number.isNaN( args[j] as any as number ) ) continue\n\t\t\t\tif( args[i] !== args[j] ) $mol_fail( new Error( `Not equal (${i+1}:${j+1})\\n${ args[i] }\\n${ args[j] }` ) )\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport function $mol_assert_unique( ... args : [ any, any, ...any[] ] ) {\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( args[i] === args[j] || ( Number.isNaN( args[i] as any as number ) && Number.isNaN( args[j] as any as number ) ) ) {\n\t\t\t\t\t$mol_fail( new Error( `args[${ i }] = args[${ j }] = ${ args[i] }` ) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\texport function $mol_assert_like< Value >( head : Value, ... tail : Value[]) {\n\t\tfor( let [ index, value ] of Object.entries( tail ) ) {\n\n\t\t\tif( !$mol_compare_deep( value , head ) ) {\n\n\t\t\t\tconst print = ( val : any ) => {\n\t\t\t\t\t\n\t\t\t\t\tif( !val ) return val\n\t\t\t\t\tif( typeof val !== 'object' ) return val\n\t\t\t\t\tif( 'outerHTML' in val ) return val.outerHTML\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn JSON.stringify( val )\n\t\t\t\t\t} catch( error: any ) {\n\t\t\t\t\t\tconsole.error( error )\n\t\t\t\t\t\treturn val\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn $mol_fail( new Error( `Not like (1:${ + index + 2 })\\n${ print( head ) }\\n---\\n${ print( value ) }` ) )\n\n\t\t\t}\n\n\t\t}\n\t}\n\t\n\texport function $mol_assert_dom( left: Element, right: Element ) {\n\t\t$mol_assert_equal( $mol_dom_serialize( left ), $mol_dom_serialize( right ) )\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\t\t\n\t\t'FQN of anon function'($) {\n\t\t\tconst $$ = Object.assign( $ , { $mol_func_name_test : ( ()=> ()=> {} )() } )\n\t\t\t$mol_assert_equal( $$.$mol_func_name_test.name , '' )\n\t\t\t$mol_assert_equal( $$.$mol_func_name( $$.$mol_func_name_test ) , '$mol_func_name_test' )\n\t\t\t$mol_assert_equal( $$.$mol_func_name_test.name , '$mol_func_name_test' )\n\t\t},\n\n\t})\n\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'get'() {\n\t\t\tconst proxy = $mol_delegate( {} as any , ()=> ({ foo : 777 }) )\n\t\t\t$mol_assert_equal( proxy.foo , 777 )\n\t\t},\n\n\t\t'has'() {\n\t\t\tconst proxy = $mol_delegate( {} as any , ()=> ({ foo : 777 }) )\n\t\t\t$mol_assert_equal( 'foo' in proxy , true )\n\t\t},\n\n\t\t'set'() {\n\t\t\tconst target = { foo : 777 }\n\t\t\tconst proxy = $mol_delegate( {} as any , ()=> target )\n\t\t\tproxy.foo = 123\n\t\t\t$mol_assert_equal( target.foo , 123 )\n\t\t},\n\t\t\n\t\t'getOwnPropertyDescriptor'() {\n\n\t\t\tconst proxy = $mol_delegate( {} as any , ()=> ({ foo : 777 }) )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tObject.getOwnPropertyDescriptor( proxy , 'foo' ),\n\t\t\t\t{\n\t\t\t\t\tvalue: 777,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t},\n\t\t\t)\n\t\t\t\n\t\t},\n\n\t\t'ownKeys'() {\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} as any ,\n\t\t\t\t()=> ({ foo : 777 , [ Symbol.toStringTag ] : 'bar' }),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tReflect.ownKeys( proxy ),\n\t\t\t\t[ 'foo' , Symbol.toStringTag ],\n\t\t\t)\n\n\t\t},\n\n\t\t'getPrototypeOf'() {\n\n\t\t\tclass Foo {}\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} as any ,\n\t\t\t\t()=> new Foo,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\tObject.getPrototypeOf( proxy ),\n\t\t\t\tFoo.prototype,\n\t\t\t)\n\n\t\t},\n\n\t\t'setPrototypeOf'() {\n\n\t\t\tclass Foo {}\n\t\t\tconst target = {}\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} ,\n\t\t\t\t()=> target,\n\t\t\t)\n\n\t\t\tObject.setPrototypeOf( proxy , Foo.prototype )\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\tObject.getPrototypeOf( target ),\n\t\t\t\tFoo.prototype,\n\t\t\t)\n\n\t\t},\n\n\t\t'instanceof'() {\n\n\t\t\tclass Foo {}\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} ,\n\t\t\t\t()=> new Foo,\n\t\t\t)\n\n\t\t\t$mol_assert_ok( proxy instanceof Foo )\n\t\t\t$mol_assert_ok( proxy instanceof $mol_delegate )\n\n\t\t},\n\n\t\t'autobind'() {\n\n\t\t\tclass Foo {}\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} ,\n\t\t\t\t()=> new Foo,\n\t\t\t)\n\n\t\t\t$mol_assert_ok( proxy instanceof Foo )\n\t\t\t$mol_assert_ok( proxy instanceof $mol_delegate )\n\n\t\t},\n\n\t})\n}\n",null,"namespace $ {\n\t$mol_test({\n\t\t\n\t\t'Collect deps'() {\n\t\t\t\n\t\t\tconst pub1 = new $mol_wire_pub\n\t\t\tconst pub2 = new $mol_wire_pub\n\t\t\tconst sub = new $mol_wire_pub_sub\n\t\t\t\n\t\t\tconst bu1 = sub.track_on()\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tpub1.promote()\n\t\t\t\tpub2.promote()\n\t\t\t\tpub2.promote()\n\t\t\t\t\n\t\t\t} finally {\n\t\t\t\t\n\t\t\t\tsub.track_cut()\n\t\t\t\tsub.track_off( bu1 )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpub1.emit()\n\t\t\tpub2.emit()\n\t\t\t\n\t\t\t$mol_assert_like( sub.pub_list, [ pub1, pub2, pub2 ] )\n\t\t\t\n\t\t\tconst bu2 = sub.track_on()\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tpub1.promote()\n\t\t\t\tpub1.promote()\n\t\t\t\tpub2.promote()\n\t\t\t\t\n\t\t\t} finally {\n\t\t\t\t\n\t\t\t\tsub.track_cut()\n\t\t\t\tsub.track_off( bu2 )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpub1.emit()\n\t\t\tpub2.emit()\n\t\t\t\n\t\t\t$mol_assert_like( sub.pub_list, [ pub1, pub1, pub2 ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'cyclic detection'( $ ) {\n\t\t\t\n\t\t\tconst sub1 = new $mol_wire_pub_sub\n\t\t\tconst sub2 = new $mol_wire_pub_sub\n\t\t\t\n\t\t\tconst bu1 = sub1.track_on()\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tconst bu2 = sub2.track_on()\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\t$mol_assert_fail( ()=> sub1.promote(), 'Circular subscription' )\n\t\t\t\t\t\n\t\t\t\t} finally {\n\t\t\t\t\t\n\t\t\t\t\tsub2.track_cut()\n\t\t\t\t\tsub2.track_off( bu2 )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} finally {\n\t\t\t\t\n\t\t\t\tsub1.track_cut()\n\t\t\t\tsub1.track_off( bu1 )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t})\n}\n","namespace $ {\n\n\t/// @todo right orderinng\n\texport let $mol_after_mock_queue = [] as ( ()=> void )[]\n\n\texport function $mol_after_mock_warp() {\n\t\tconst queue = $mol_after_mock_queue.splice( 0 )\n\t\tfor( const task of queue ) task()\n\t}\n\n\texport class $mol_after_mock_commmon extends $mol_object2 {\n\n\t\tpromise = Promise.resolve()\n\t\tcancelled = false\n\t\tid : any\n\n\t\tconstructor( public task : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_after_mock_queue.push( task )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tconst index = $mol_after_mock_queue.indexOf( this.task )\n\t\t\tif( index >= 0 )$mol_after_mock_queue.splice( index , 1 )\n\t\t}\n\n\t}\n\n\texport class $mol_after_mock_timeout extends $mol_after_mock_commmon {\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\ttask : ()=> void ,\n\t\t) {\n\t\t\tsuper( task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_timeout = $mol_after_mock_timeout as any as typeof $mol_after_timeout\n\t})\n\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_frame = $mol_after_mock_commmon as any as typeof $mol_after_frame\n\t})\n\n}\n","namespace $ {\n\n\t$mol_test({\n\t\t\n\t\t'Sync execution'() {\n\n\t\t\tclass Sync extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic calc( a: number, b: number ) {\n\t\t\t\t\treturn a + b\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Sync.calc( 1, 2 ), 3 )\n\t\t\t\n\t\t},\n\n\t\tasync 'async <=> sync'() {\n\t\t\t\n\t\t\tclass SyncAsync extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic async val( a: number ) {\n\t\t\t\t\treturn a\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic sum( a: number, b: number ) {\n\t\t\t\t\tconst syn = $mol_wire_sync( this )\n\t\t\t\t\treturn syn.val( a ) + syn.val( b )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic async calc( a: number, b: number ) {\n\t\t\t\t\treturn 5 + await $mol_wire_async( this ).sum( a, b )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( await SyncAsync.calc( 1, 2 ), 8 )\n\n\t\t},\n\n\t\tasync 'Idempotence control'() {\n\n\t\t\tclass Idempotence extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic logs_idemp = 0\n\t\t\t\tstatic logs_unidemp = 0\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic log_idemp() {\n\t\t\t\t\tthis.logs_idemp += 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic log_unidemp() {\n\t\t\t\t\tthis.logs_unidemp += 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic async val( a: number ) {\n\t\t\t\t\treturn a\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic sum( a: number, b: number ) {\n\t\t\t\t\tthis.log_idemp()\n\t\t\t\t\tthis.log_unidemp()\n\t\t\t\t\tconst syn = $mol_wire_sync( this )\n\t\t\t\t\treturn syn.val( a ) + syn.val( b )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic async calc( a: number, b: number ) {\n\t\t\t\t\treturn 5 + await $mol_wire_async( this ).sum( a, b )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( await Idempotence.calc( 1, 2 ), 8 )\n\t\t\t$mol_assert_equal( Idempotence.logs_idemp, 1 )\n\t\t\t$mol_assert_equal( Idempotence.logs_unidemp, 3 )\n\n\t\t},\n\n\t\tasync 'Error handling'() {\n\t\t\t\n\t\t\tclass Handle extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic async sum( a: number, b: number ){\n\t\t\t\t\t$mol_fail( new Error( 'test error ' + ( a + b ) ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic check() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn $mol_wire_sync( Handle ).sum( 1, 2 )\n\t\t\t\t\t} catch( error: any ) {\n\t\t\t\t\t\tif( error instanceof Promise ) $mol_fail_hidden( error )\n\t\t\t\t\t\t$mol_assert_equal( error.message, 'test error 3' )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tawait $mol_wire_async( Handle ).check()\n\t\t\t\n\t\t},\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_wire_sync< Host extends object >( obj: Host ) {\n\t\treturn new Proxy( obj, {\n\t\t\t\n\t\t\tget( obj, field ) {\n\t\t\t\t\n\t\t\t\tconst val = obj[ field ]\n\t\t\t\tif( typeof val !== 'function' ) return val\n\t\t\t\t\n\t\t\t\tconst temp = $mol_wire_task.getter( val )\n\t\t\t\treturn function $mol_wire_sync( this: Host, ... args: any[] ) {\n\t\t\t\t\tconst fiber = temp( obj, args )\n\t\t\t\t\treturn fiber.sync()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tapply( obj, self, args ) {\n\t\t\t\tconst temp = $mol_wire_task.getter( obj as ( ... args: any[] )=> any )\n\t\t\t\tconst fiber = temp( self, args )\n\t\t\t\treturn fiber.sync()\n\t\t\t},\n\t\t\t\n\t\t} ) as any as (\n\t\t\tHost extends ( ... args: infer Args )=> infer Res\n\t\t\t\t? Res extends Promise< infer Res2 >\n\t\t\t\t\t? ( ... args: Args )=> Res2\n\t\t\t\t\t: Host\n\t\t\t\t: {}\n\t\t) & {\n\t\t\t[ key in keyof Host ]: Host[ key ] extends ( ... args: infer Args )=> Promise< infer Res >\n\t\t\t\t? ( ... args: Args )=> Res\n\t\t\t\t: Host[ key ]\n\t\t}\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_promise< Result = void >() {\n\t\t\n\t\tlet done!: ( res: Result | PromiseLike< Result > )=> void\n\t\tlet fail!: ( error?: any ) => void\n\t\t\n\t\tconst promise = new Promise< Result >( ( d, f ) => {\n\t\t\tdone = d\n\t\t\tfail = f\n\t\t} )\n\t\t\n\t\treturn Object.assign( promise, {\n\t\t\tdone,\n\t\t\tfail,\n\t\t} )\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_wait_timeout_async( this: $, timeout: number ) {\n\t\tconst promise = $mol_promise()\n\t\tconst task = new this.$mol_after_timeout( timeout , ()=> promise.done() )\n\t\treturn Object.assign( promise, {\n\t\t\tdestructor: ()=> task.destructor()\n\t\t} )\n\t}\n\t\n\texport function $mol_wait_timeout( this: $, timeout: number ) {\n\t\treturn this.$mol_wire_sync( this ).$mol_wait_timeout_async( timeout )\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test({\n\t\t\n\t\tasync 'Latest method calls wins'( $ ) {\n\t\t\t\n\t\t\tclass NameLogger extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\tstatic first = [] as string[]\n\t\t\t\tstatic last = [] as string[]\n\t\t\t\t\n\t\t\t\tstatic send( next: string ) {\n\t\t\t\t\t$mol_wire_sync( this.first ).push( next )\n\t\t\t\t\tthis.$.$mol_wait_timeout(0)\n\t\t\t\t\tthis.last.push( next )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst name = $mol_wire_async( NameLogger ).send\n\t\t\t\n\t\t\tname( 'john' )\n\t\t\tconst promise = name( 'jin' )\n\t\t\t\n\t\t\t$.$mol_after_mock_warp()\n\t\t\tawait promise\n\t\t\t\n\t\t\t$mol_assert_like( NameLogger.first, [ 'john', 'jin' ] )\n\t\t\t$mol_assert_like( NameLogger.last, [ 'jin' ] )\n\n\t\t},\n\n\t\tasync 'Latest function calls wins'( $ ) {\n\t\t\t\n\t\t\tconst first = [] as string[]\n\t\t\tconst last = [] as string[]\n\t\t\t\n\t\t\tfunction send_name( next: string ) {\n\t\t\t\t$mol_wire_sync( first ).push( next )\n\t\t\t\t$.$mol_wait_timeout(0)\n\t\t\t\tlast.push( next )\n\t\t\t}\n\t\t\t\n\t\t\tconst name = $mol_wire_async( send_name )\n\t\t\t\n\t\t\tname( 'john' )\n\t\t\tconst promise = name( 'jin' )\n\t\t\t\n\t\t\t$.$mol_after_mock_warp()\n\t\t\tawait promise\n\t\t\t\n\t\t\t$mol_assert_like( first, [ 'john', 'jin' ] )\n\t\t\t$mol_assert_like( last, [ 'jin' ] )\n\t\t\t\n\t\t},\n\n\t})\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_wire_async< Host extends object >( obj: Host ) {\n\t\t\n\t\tlet fiber: $mol_wire_fiber< any, any, any >\n\t\tconst temp = $mol_wire_task.getter( obj as ( ... args: any[] )=> any )\n\t\t\n\t\treturn new Proxy( obj, {\n\t\t\t\n\t\t\tget( obj, field ) {\n\t\t\t\t\n\t\t\t\tconst val = obj[ field ]\n\t\t\t\tif( typeof val !== 'function' ) return val\n\t\t\t\t\n\t\t\t\tlet fiber: $mol_wire_fiber< any, any, any >\n\t\t\t\tconst temp = $mol_wire_task.getter( val ) \n\t\t\t\t\n\t\t\t\treturn function $mol_wire_async( this: Host, ... args: any[] ) {\n\t\t\t\t\tfiber?.destructor()\n\t\t\t\t\tfiber = temp( obj, args )\n\t\t\t\t\treturn fiber.async()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tapply( obj, self, args ) {\n\t\t\t\tfiber?.destructor()\n\t\t\t\tfiber = temp( self, args )\n\t\t\t\treturn fiber.async()\n\t\t\t},\n\t\t\t\n\t\t} ) as any as (\n\t\t\tHost extends ( ... args: infer Args )=> infer Res\n\t\t\t\t? Res extends Promise<any>\n\t\t\t\t\t? Host\n\t\t\t\t\t: ( ... args: Args )=> Promise< Res >\n\t\t\t\t: {}\n\t\t) & {\n\t\t\t[ key in keyof Host ]: Host[ key ] extends ( ... args: infer Args )=> infer Res\n\t\t\t\t? Res extends Promise<any>\n\t\t\t\t\t? Host[ key ]\n\t\t\t\t\t: ( ... args: Args )=> Promise< Res >\n\t\t\t\t: Host[ key ]\n\t\t}\n\t\t\n\t}\n\t\n}\n",null,"namespace $ {\n\t$mol_test({\n\t\t\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#component-states\n\t\t'Cached channel' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next = 1 ) {\n\t\t\t\t\treturn next + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.value(), 2 )\n\n\t\t\tApp.value( 2 )\n\t\t\t$mol_assert_equal( App.value(), 3 )\n\n\t\t},\n\n\t\t'Read Pushed' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next = 0 ) {\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.value( 1 ), 1 )\n\t\t\t$mol_assert_equal( App.value(), 1 )\n\n\t\t},\n\n\t\t'Mem overrides mem' ($) {\n\n\t\t\tclass Base extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next = 1 ) {\n\t\t\t\t\treturn next + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tclass Middle extends Base {\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next?: number ) {\n\t\t\t\t\treturn super.value( next ) + 1\n\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tclass App extends Middle {\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next?: number ) {\n\t\t\t\t\treturn super.value( next ) * 3\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.value(), 9 )\n\t\t\t\n\t\t\t$mol_assert_equal( App.value( 5 ), 21 )\n\t\t\t$mol_assert_equal( App.value(), 21 )\n\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-consistency\n\t\t'Auto recalculation of cached values'( $ ) {\n\t\t\t\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic xxx( next? : number ) {\n\t\t\t\t\treturn next || 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic yyy() {\n\t\t\t\t\treturn this.xxx() + 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic zzz() {\n\t\t\t\t\treturn this.yyy() + 1\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.yyy(), 2 )\n\t\t\t$mol_assert_equal( App.zzz(), 3 )\n\n\t\t\tApp.xxx( 5 )\n\t\t\t$mol_assert_equal( App.zzz(), 7 )\n\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-reasonability\n\t\t'Skip recalculation when actually no dependency changes'( $ ) {\n\t\t\t\n\t\t\tconst log = [] as string[]\n\t\t\t\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic xxx( next? : number ) {\n\t\t\t\t\tlog.push( 'xxx' )\n\t\t\t\t\treturn next || 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic yyy() {\n\t\t\t\t\tlog.push( 'yyy' )\n\t\t\t\t\treturn [ Math.sign( this.xxx() ) ]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic zzz() {\n\t\t\t\t\tlog.push( 'zzz' )\n\t\t\t\t\treturn this.yyy()[0] + 1\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\tApp.zzz()\n\t\t\t$mol_assert_like( log, [ 'zzz', 'yyy', 'xxx' ] )\n\t\t\t\n\t\t\tApp.xxx( 5 )\n\t\t\t$mol_assert_like( log, [ 'zzz', 'yyy', 'xxx', 'xxx' ] )\n\t\t\t\n\t\t\tApp.zzz()\n\t\t\t$mol_assert_like( log, [ 'zzz', 'yyy', 'xxx', 'xxx', 'yyy' ] )\n\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#flow-auto\n\t\t'Flow: Auto'( $ ) {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic get $() { return $ }\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic first( next = 1 ) { return next }\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic second( next = 2 ) { return next }\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic condition( next = true ) { return next }\n\t\t\t\t\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic result() {\n\t\t\t\t\tconst res = this.condition() ? this.first() : this.second() \n\t\t\t\t\treturn res + this.counter ++\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result() , 1 )\n\t\t\t$mol_assert_equal( App.counter , 1 )\n\t\t\t\n\t\t\tApp.condition( false )\n\t\t\t$mol_assert_equal( App.result() , 3 )\n\t\t\t$mol_assert_equal( App.counter , 2 )\n\n\t\t\tApp.first( 10 )\n\t\t\t$mol_assert_equal( App.result() , 3 )\n\t\t\t$mol_assert_equal( App.counter , 2 )\n\n\t\t} ,\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#dupes-equality\n\t\t'Dupes: Equality'( $ ) {\n\t\t\t\n\t\t\tlet counter = 0\n\t\t\t\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic foo( next? : { numbs: number[] } ) {\n\t\t\t\t\treturn next ?? { numbs: [ 1 ] }\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic bar() {\n\t\t\t\t\treturn { ... this.foo(), count: ++ counter }\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like( App.bar(), { numbs: [ 1 ], count: 1 } )\n\n\t\t\tApp.foo({ numbs: [ 1 ] })\n\t\t\t$mol_assert_like( App.bar(), { numbs: [ 1 ], count: 1 } )\n\t\t\t\n\t\t\tApp.foo({ numbs: [ 2 ] })\n\t\t\t$mol_assert_like( App.bar(), { numbs: [ 2 ], count: 2 } )\n\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#cycle-fail\n\t\t'Cycle: Fail'( $ ) {\n\t\t\n\t\t\tclass App extends $mol_object2 {\n\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic foo() : number {\n\t\t\t\t\treturn this.bar() + 1\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic bar() : number {\n\t\t\t\t\treturn this.foo() + 1\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t\t$mol_assert_fail( ()=> App.foo(), 'Circular subscription' )\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tApp.test()\n\t\t} ,\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\t// 'Update deps on push'( $ ) {\n\t\t\n\t\t// \tclass App extends $mol_object2 {\n\t\t\n\t\t// \t\tstatic $ = $\n\t\t\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic left( next = false ) {\n\t\t// \t\t\treturn next\n\t\t// \t\t}\n\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic right( next = false ) {\n\t\t// \t\t\treturn next\n\t\t// \t\t}\n\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic res( next?: boolean ) {\n\t\t// \t\t\treturn this.left( next ) && this.right()\n\t\t// \t\t}\n\t\t\n\t\t// \t}\n\t\t\t\n\t\t// \t$mol_assert_equal( App.res(), false )\n\t\t// \t$mol_assert_equal( App.res( true ), false )\n\t\t\t\n\t\t// \t$mol_assert_equal( App.right( true ), true )\n\t\t// \t$mol_assert_equal( App.res(), true )\n\t\t\t\n\t\t// } ,\n\t\t\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\t'Different order of pull and push'( $ ) {\n\t\t\n\t\t\tclass App extends $mol_object2 {\n\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic store( next = 0 ) {\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic fast( next?: number ) {\n\t\t\t\t\treturn this.store( next )\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic slow( next?: number ) {\n\t\t\t\t\tif( next !== undefined ) this.slow() // enforce pull before push\n\t\t\t\t\treturn this.store( next )\n\t\t\t\t}\n\t\t\n\t\t\t}\n\t\t\t\n\t\t\tApp.fast()\n\t\t\t$mol_assert_equal( App.slow( 666 ), 666 )\n\t\t\t$mol_assert_equal( App.fast(), App.slow(), 666 )\n\t\t\t\n\t\t\tApp.store( 777 )\n\t\t\t$mol_assert_equal( App.fast(), App.slow(), 777 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\t'Actions inside invariant'( $ ) {\n\t\t\n\t\t\tclass App extends $mol_object2 {\n\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic count( next = 0 ) {\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic count2() {\n\t\t\t\t\treturn this.count()\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic res() {\n\t\t\t\t\tconst count = this.count2()\n\t\t\t\t\tif( !count ) this.count( count + 1 )\n\t\t\t\t\treturn count + 1\n\t\t\t\t}\n\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like( App.res(), 1 )\n\t\t\t\n\t\t\tApp.count( 5 )\n\t\t\t$mol_assert_like( App.res(), 6 )\n\n\t\t} ,\n\t\t\n\t\tasync 'Toggle with async'( $ ) {\n\t\t\n\t\t\tclass App extends $mol_object2 {\n\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic checked( next = false ) {\n\t\t\t\t\t$$.$mol_wait_timeout(0)\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic toggle() {\n\t\t\t\t\tconst prev = this.checked()\n\t\t\t\t\t$mol_assert_unique( this.checked( !prev ), prev )\n\t\t\t\t\t// $mol_assert_equal( this.checked() , prev )\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic res() {\n\t\t\t\t\treturn this.checked()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t\t\n\t\t\t\t\t$mol_assert_equal( App.res(), false )\n\t\t\t\t\t\n\t\t\t\t\tApp.toggle()\n\t\t\t\t\t$mol_assert_equal( App.res(), true )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\n\t\t\t}\n\t\t\t\n\t\t\tawait $mol_wire_async( App ).test()\n\t\t\t\n\t\t} ,\n\n\t\t// // https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\t// 'Stable order of multiple root'( $ ) {\n\t\t\n\t\t// \tclass App extends $mol_object2 {\n\t\t\n\t\t// \t\tstatic $ = $\n\t\t\t\t\n\t\t// \t\tstatic counter = 0\n\t\t\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic left_trigger( next = 0 ) {\n\t\t// \t\t\treturn next\n\t\t// \t\t}\n\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic left_root() {\n\t\t// \t\t\tthis.left_trigger()\n\t\t// \t\t\treturn ++ this.counter\n\t\t// \t\t}\n\t\t\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic right_trigger( next = 0 ) {\n\t\t// \t\t\treturn next\n\t\t// \t\t}\n\t\t\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic right_root() {\n\t\t// \t\t\tthis.right_trigger()\n\t\t// \t\t\treturn ++ this.counter\n\t\t// \t\t}\n\t\t\n\t\t// \t}\n\t\t\t\n\t\t// \t$mol_assert_equal( App.left_root(), 1 )\n\t\t// \t$mol_assert_equal( App.right_root(), 2 )\n\t\t\t\n\t\t// \tApp.right_trigger( 1 )\n\t\t// \tApp.left_trigger( 1 )\n\t\t\t\n\t\t// \t$mol_wire_fiber.sync()\n\t\t\t\n\t\t// \t$mol_assert_equal( App.right_root(), 4 )\n\t\t// \t$mol_assert_equal( App.left_root(), 3 )\n\n\t\t// } ,\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#error-store\n\t\t'Restore after error'( $ ) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic get $() { return $ }\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic condition( next = false ) { return next }\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic broken() {\n\t\t\t\t\t\n\t\t\t\t\tif( this.condition() ) {\n\t\t\t\t\t\t$mol_fail( new Error( 'test error' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic result() {\n\t\t\t\t\treturn this.broken()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result() , 1 )\n\t\t\t\n\t\t\tApp.condition( true )\n\t\t\t$mol_assert_fail( ()=> App.result() )\n\t\t\t\n\t\t\tApp.condition( false )\n\t\t\t$mol_assert_equal( App.result() , 1 )\n\n\t\t} ,\n\t\n\t\tasync 'Wait for data'($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\tstatic async source() {\n\t\t\t\t\treturn 'Jin'\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic middle() {\n\t\t\t\t\treturn $mol_wire_sync( this ).source()\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic target() {\n\t\t\t\t\treturn this.middle()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t\t$mol_assert_equal( App.target() , 'Jin' )\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tawait $mol_wire_async( App ).test()\n\t\t},\n\n\t\t'Auto destroy on long alone'( $ ) {\n\n\t\t\tlet destroyed = false\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic showing( next = true ) {\n\t\t\t\t\treturn next\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic details() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdestructor() {\n\t\t\t\t\t\t\tdestroyed = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic render() {\n\t\t\t\t\treturn this.showing() ? this.details() : null\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst details = App.render()\n\t\t\t$mol_assert_ok( details )\n\n\t\t\tApp.showing( false )\n\t\t\t$mol_assert_not( App.render() )\n\t\t\t\n\t\t\tApp.showing( true )\n\t\t\t$mol_assert_equal( App.render() , details )\n\t\t\t\n\t\t\t$mol_wire_fiber.sync()\n\t\t\t$mol_assert_not( destroyed )\n\t\t\t\n\t\t\tApp.showing( false )\n\t\t\t$mol_wire_fiber.sync()\n\t\t\t$mol_assert_ok( destroyed )\n\n\t\t\tApp.showing( true )\n\t\t\t$mol_assert_unique( App.render() , details )\n\t\t\t\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\tasync 'Hold pubs while wait async task'($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\tstatic counter = 0\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic resets( next?: null ): number {\n\t\t\t\t\treturn ( $mol_wire_probe( ()=> this.resets() ) ?? -1 ) + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic async wait() { }\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value() {\n\t\t\t\t\treturn ++ this.counter\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic result() {\n\t\t\t\t\tif( this.resets() ) $mol_wire_sync( this ).wait()\n\t\t\t\t\treturn this.value()\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.result() , 1 )\n\t\t\t\n\t\t\tApp.resets( null )\n\t\t\t$mol_wire_fiber.sync()\n\t\t\t$mol_assert_equal( await $mol_wire_async( App ).result() , 1 )\n\t\t\t\n\t\t},\n\n\t\t'Owned value has js-path name' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic title() {\n\t\t\t\t\treturn new $mol_object2\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( `${ App.title() }` , 'App.title()' )\n\n\t\t} ,\n\n\t\t'Unsubscribe from temp pubs on complete' ($) {\n\n\t\t\tclass Random extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic seed() {\n\t\t\t\t\treturn Math.random()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic resets( next?: null ) {\n\t\t\t\t\treturn Math.random()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value() {\n\t\t\t\t\tthis.resets()\n\t\t\t\t\treturn this.seed()\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\tconst first = Random.value()\n\t\t\t\n\t\t\tRandom.resets( null )\n\t\t\t$mol_assert_unique( Random.value(), first )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'Memoize by single simple key' ($) {\n\n\t\t\tclass Team extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic user_name( user: string , next?: string ) {\n\t\t\t\t\treturn next ?? user\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic user_names() {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tthis.user_name( 'jin' ),\n\t\t\t\t\t\tthis.user_name( 'john' ),\n\t\t\t\t\t]\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like( Team.user_names(), [ 'jin', 'john' ] )\n\t\t\t\n\t\t\tTeam.user_name( 'jin', 'JIN' )\n\t\t\t$mol_assert_like( Team.user_names(), [ 'JIN', 'john' ] )\n\n\t\t} ,\n\n\t\t'Memoize by single complex key' ($) {\n\n\t\t\tclass Map extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic tile( pos: [ number, number ] ) {\n\t\t\t\t\treturn new String( `/tile=${pos}` )\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t\t\n\t\t\t\t\t$mol_assert_like( this.tile([0,1]), new String( '/tile=0,1' ) )\n\t\t\t\t\t$mol_assert_equal( this.tile([0,1]), this.tile([0,1]) )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tMap.test()\n\t\t} ,\n\n\t\t'Owned value has js-path name' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic like( friend: number ) {\n\t\t\t\t\treturn new $mol_object2\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic relation( [ friend, props ]: [ number, [ number ] ] ) {\n\t\t\t\t\treturn new $mol_object2\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( `${ App.like(123) }` , 'App.like(123)' )\n\t\t\t$mol_assert_equal( `${ App.relation([123,[456]]) }` , 'App.relation([123,[456]])' )\n\n\t\t} ,\n\n\t\t'Deep deps' ($) {\n\n\t\t\tclass Fib extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\tstatic sums = 0\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic value( index: number , next?: number ): number {\n\t\t\t\t\tif( next ) return next\n\t\t\t\t\tif( index < 2 ) return 1\n\t\t\t\t\t++ this.sums\n\t\t\t\t\treturn this.value( index - 1 ) + this.value( index - 2 )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Fib.value( 4 ), 5 )\n\t\t\t$mol_assert_equal( Fib.sums, 3 )\n\t\t\t\n\t\t\tFib.value( 1, 2 )\n\t\t\t$mol_assert_equal( Fib.value( 4 ), 8 )\n\t\t\t$mol_assert_equal( Fib.sums, 6 )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'Previous value'() {\n\n\t\t\tclass Cache extends $mol_object2 {\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic store( next?: Record< string, number > ): typeof next {\n\t\t\t\t\tif( !next ) return {}\n\t\t\t\t\treturn {\n\t\t\t\t\t\t... $mol_wire_probe( ()=> this.store() ) ?? {},\n\t\t\t\t\t\t... next,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like( Cache.store(), {} )\n\t\t\t\n\t\t\t$mol_assert_like( Cache.store({ foo: 666 }), { foo: 666 } )\n\t\t\t$mol_assert_like( Cache.store({ bar: 777 }), { foo: 666, bar: 777 } )\n\n\t\t} ,\n\t\t\n\t})\n}\n","namespace $ {\n\t\n\texport function $mol_wire_probe< Value >(\n\t\ttask : ()=> Value, next?: Value\n\t) : Value | undefined {\n\t\t\n\t\tconst warm = $mol_wire_fiber.warm\n\t\t\n\t\ttry {\n\t\t\t$mol_wire_fiber.warm = false\n\t\t\treturn task()\n\t\t} finally {\n\t\t\t$mol_wire_fiber.warm = warm\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test({\n\t\t'encode utf8 string'() {\n\t\t\tconst str = 'Hello, ΧΨΩЫ'\n\t\t\tconst encoded = new Uint8Array( [ 72, 101, 108, 108, 111, 44, 32, 206, 167, 206, 168, 206, 169, 208, 171 ] )\n\n\t\t\t$mol_assert_like( $mol_charset_encode(str), encoded )\n\t\t},\n\t})\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'config by value'() {\n\n\t\t\tconst N = $mol_data_setup( ( a : number )=> a , 5 )\n\t\t\t\n\t\t\t$mol_assert_equal( N.config , 5 )\n\t\t\t\n\t\t\ttype record_value = $mol_type_assert<\n\t\t\t\ttypeof N.Value ,\n\t\t\t\tnumber\n\t\t\t>\n\t\t\t\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'equal paths' () {\n\n\t\t\tconst diff = $mol_diff_path( [1,2,3,4] , [1,2,3,4] , [1,2,3,4] )\n\t\t\t\n\t\t\t$mol_assert_like( diff , {\n\t\t\t\tprefix : [1,2,3,4] , \n\t\t\t\tsuffix : [ [] , [] , [] ] ,\n\t\t\t} )\n\n\t\t} ,\n\n\t\t'different suffix' () {\n\n\t\t\tconst diff = $mol_diff_path( [1,2,3,4] , [1,2,3,5] , [1,2,5,4] )\n\t\t\t\n\t\t\t$mol_assert_like( diff , {\n\t\t\t\tprefix : [1,2] , \n\t\t\t\tsuffix : [ [3,4] , [3,5] , [5,4] ] ,\n\t\t\t} )\n\n\t\t} ,\n\n\t\t'one contains other' () {\n\t\t\t\n\t\t\tconst diff = $mol_diff_path( [1,2,3,4] , [1,2] , [1,2,3] )\n\t\t\t\n\t\t\t$mol_assert_like( diff , {\n\t\t\t\tprefix : [1,2] , \n\t\t\t\tsuffix : [ [3,4] , [] , [3] ] ,\n\t\t\t} )\n\n\t\t} ,\n\n\t\t'fully different' () {\n\n\t\t\tconst diff = $mol_diff_path( [1,2] , [3,4] , [5,6] )\n\t\t\t\n\t\t\t$mol_assert_like( diff , {\n\t\t\t\tprefix : [] , \n\t\t\t\tsuffix : [ [1,2] , [3,4] , [5,6] ] ,\n\t\t\t} )\n\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\tenum sex { male , female }\n\t\n\tenum gender {\n\t\tbisexual = 'bisexual' ,\n\t\ttrans = 'transgender' ,\n\t}\n\t\n\t// Test disabled due https://github.com/microsoft/TypeScript/issues/46112\n\t// type sex_value =  $mol_type_assert< typeof Sex.Value , sex >\n\t\n\t$mol_test({\n\t\t\n\t\t'config of enum' () {\n\t\t\t\n\t\t\tconst Sex = $mol_data_enum( 'sex' , sex )\n\n\t\t\t$mol_assert_like( Sex.config , {\n\t\t\t\tname : 'sex' ,\n\t\t\t\tdict : sex ,\n\t\t\t} )\n\t\t\t\n\t\t} ,\n\n\t\t'name of enum' () {\n\t\t\tconst Sex = $mol_data_enum( 'sex' , sex )\n\t\t\t$mol_assert_equal( Sex.config.name , 'sex' )\n\t\t} ,\n\n\t\t'Is right value of enum' () {\n\t\t\tconst Sex = $mol_data_enum( 'sex' , sex )\n\t\t\t$mol_assert_equal( Sex(0) , sex.male )\n\t\t} ,\n\n\t\t'Is wrong value of enum' () {\n\t\t\tconst Sex = $mol_data_enum( 'sex' , sex )\n\t\t\t$mol_assert_fail( ()=> Sex(2) , `2 is not value of sex enum` )\n\t\t} ,\n\n\t\t'Is name instead of value' () {\n\t\t\tconst Sex = $mol_data_enum( 'sex' , sex )\n\t\t\t$mol_assert_fail( ()=> Sex( 'male' as any ) , `male is not value of sex enum` )\n\t\t} ,\n\n\t\t'Is common object field' () {\n\t\t\tconst Sex = $mol_data_enum( 'sex' , sex )\n\t\t\t$mol_assert_fail( ()=> Sex( '__proto__' as any ) , `__proto__ is not value of sex enum` )\n\t\t} ,\n\n\t})\n\n\n\t// Test disabled due https://github.com/microsoft/TypeScript/issues/46112\n\t// type gender_value =  $mol_type_assert< typeof Gender.Value , gender >\n\n\t$mol_test({\n\t\t\n\t\t'config of enum' () {\n\n\t\t\tconst Gender = $mol_data_enum( 'gender' , gender )\n\t\t\t\n\t\t\t$mol_assert_like( Gender.config , {\n\t\t\t\tname : 'gender' ,\n\t\t\t\tdict : gender ,\n\t\t\t} )\n\n\t\t} ,\n\n\t\t'Is right value of enum' () {\n\t\t\tconst Gender = $mol_data_enum( 'gender' , gender )\n\t\t\t$mol_assert_equal( Gender( 'transgender' as any ) , gender.trans )\n\t\t} ,\n\n\t\t'Is wrong value of enum' () {\n\t\t\tconst Gender = $mol_data_enum( 'gender' , gender )\n\t\t\t$mol_assert_fail( ()=> Gender( 'xxx' as any ) , `xxx is not value of gender enum` )\n\t\t} ,\n\n\t\t'Is name instead of value' () {\n\t\t\tconst Gender = $mol_data_enum( 'gender' , gender )\n\t\t\t$mol_assert_fail( ()=> Gender( 'trans' as any ) , `trans is not value of gender enum` )\n\t\t} ,\n\n\t\t'Is common object field' () {\n\t\t\tconst Gender = $mol_data_enum( 'gender' , gender )\n\t\t\t$mol_assert_fail( ()=> Gender( '__proto__' as any ) , `__proto__ is not value of gender enum` )\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\t$mol_test({\n\t\t'decode utf8 string'() {\n\t\t\tconst str = 'Hello, ΧΨΩЫ'\n\t\t\tconst encoded = new Uint8Array( [ 72, 101, 108, 108, 111, 44, 32, 206, 167, 206, 168, 206, 169, 208, 171 ] )\n\n\t\t\t$mol_assert_equal( $mol_charset_decode(encoded), str )\n\t\t\t$mol_assert_equal( $mol_charset_decode(encoded, 'utf8'), str )\n\t\t},\n\n\t\t'decode empty string'() {\n\t\t\tconst encoded = new Uint8Array( [] )\n\n\t\t\t$mol_assert_equal( $mol_charset_decode(encoded), '' )\n\t\t},\n\t})\n}\n","namespace $ {\n\t\n\tconst common = [\n\t\t\n\t\t12 << 0 | 13 << 8 | 14 << 16 | 15 << 24, // land_lo\n\t\t13 << 0 | 14 << 8 | 15 << 16 | 16 << 24, // land_hi\n\t\t2  << 0 |  3 << 8 |  4 << 16 |  5 << 24, // auth_lo\n\t\t3  << 0 |  4 << 8 |  5 << 16 |  6 << 24, // auto_hi\n\t\t\n\t\t4  << 0 |  5 << 8 |  6 << 16 |  7 << 24, // head_lo\n\t\t5  << 0 |  6 << 8 |  7 << 16 |  8 << 24, // head_hi\n\t\t10 << 0 | 11 << 8 | 12 << 16 | 13 << 24, // self_lo\n\t\t11 << 0 | 12 << 8 | 13 << 16 | 14 << 24, // self_hi\n\t\t\n\t\t6  << 0 |  7 << 8 |  8 << 16 |  9 << 24, // next_lo\n\t\t7  << 0 |  8 << 8 |  9 << 16 | 10 << 24, // next_hi\n\t\t8  << 0 |  9 << 8 | 10 << 16 | 11 << 24, // prev_lo\n\t\t9  << 0 | 10 << 8 | 11 << 16 | 12 << 24, // prev_hi\n\t\t\n\t\t1  << 0 |  2 << 8 |  3 << 16 |  4 << 24, // time\n\t\t\n\t] as const\n\t\n\t$mol_test({\n\t\t\n\t\t'pack and unpack unit with null'( $ ) {\n\t\t\t\n\t\t\tconst source = new $hyoo_crowd_unit(\n\t\t\t\t... common,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t\tconst packed = $hyoo_crowd_unit_bin.from( source )\n\t\t\tconst unpacked = packed.unit()\n\t\t\t\n\t\t\tsource.bin = packed\n\t\t\t$mol_assert_like( source, unpacked )\n\t\t\t\n\t\t},\n\t\t\n\t\t'pack and unpack unit with json'( $ ) {\n\t\t\t\n\t\t\tconst source = new $hyoo_crowd_unit(\n\t\t\t\t... common,\n\t\t\t\t{ a: [ 1 ] },\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t\tconst packed = $hyoo_crowd_unit_bin.from( source )\n\t\t\tconst unpacked = packed.unit()\n\t\t\t\n\t\t\tsource.bin = packed\n\t\t\t$mol_assert_like( source, unpacked )\n\t\t\t\n\t\t},\n\t\t\n\t\t'pack and unpack unit with bin'( $ ) {\n\t\t\t\n\t\t\tconst source = new $hyoo_crowd_unit(\n\t\t\t\t... common,\n\t\t\t\tnew Uint8Array([ 1, 2, 3, 4, 5, 6, 7, 8 ]),\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t\tconst packed = $hyoo_crowd_unit_bin.from( source )\n\t\t\tconst unpacked = packed.unit()\n\t\t\t\n\t\t\tsource.bin = packed\n\t\t\t$mol_assert_like( source, unpacked )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'sign / verify'( $ ) {\n\t\t\t\n\t\t\tconst source = new $hyoo_crowd_unit(\n\t\t\t\t... common,\n\t\t\t\t{ a: [ 1 ] },\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t\tconst packed = $hyoo_crowd_unit_bin.from( source )\n\t\t\t\n\t\t\tconst key = await $.$mol_crypto_auditor_pair()\n\t\t\tpacked.sign( new Uint8Array( await key.private.sign( packed.sens() ) ) )\n\t\t\t\n\t\t\tconst sign = packed.sign()\n\t\t\t\n\t\t\t$mol_assert_ok( await key.public.verify( packed.sens(), sign ) )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","/** @jsx $mol_jsx */\nnamespace $ {\n\t$mol_test({\n\t\t\n\t\t'Primitives'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( null ), 'null' )\n\t\t\t$mol_assert_equal( $mol_key( false ), 'false' )\n\t\t\t$mol_assert_equal( $mol_key( true ), 'true' )\n\t\t\t$mol_assert_equal( $mol_key( 0 ), '0' )\n\t\t\t$mol_assert_equal( $mol_key( '' ), '\"\"' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Array & POJO'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key([ null ]), '[null]' )\n\t\t\t$mol_assert_equal( $mol_key({ foo: 0 }), '{\"foo\":0}' )\n\t\t\t$mol_assert_equal( $mol_key({ foo: [false] }), '{\"foo\":[false]}' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Function'() {\n\t\t\t\n\t\t\tconst func = ()=> {}\n\t\t\t$mol_assert_equal( $mol_key( func ), $mol_key( func ) )\n\t\t\t$mol_assert_unique( $mol_key( func ), $mol_key( ()=> {} ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Objects'() {\n\t\t\t\n\t\t\tclass User {}\n\t\t\tconst jin = new User()\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( jin ), $mol_key( jin ) )\n\t\t\t$mol_assert_unique( $mol_key( jin ), $mol_key( new User() ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Elements'() {\n\t\t\t\n\t\t\tconst foo = <div>bar</div>\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( foo ), $mol_key( foo ) )\n\t\t\t$mol_assert_unique( $mol_key( foo ), $mol_key( <div>bar</div> ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Custom JSON representation'() {\n\t\t\t\n\t\t\tclass User {\n\t\t\t\tconstructor( public name: string, public age: number ) {}\n\t\t\t\ttoJSON() { return { name: this.name } }\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( new User( 'jin', 18 ) ), '{\"name\":\"jin\"}' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Special native classes'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( new Date( 'xyz' ) ), 'null' )\n\t\t\t$mol_assert_equal( $mol_key( new Date( '2001-01-02T03:04:05.678Z' ) ), '\"2001-01-02T03:04:05.678Z\"' )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( /./ ), '\"/./\"' )\n\t\t\t$mol_assert_equal( $mol_key( /\\./gimsu ), '\"/\\\\\\\\./gimsu\"' )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","/** @jsx $mol_jsx */\nnamespace $ {\n\t$mol_test({\n\n\t\t'number'() {\n\t\t\tconst dict = new $mol_dict< number , number >()\n\t\t\t$mol_assert_equal( dict.get( 123 ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , false )\n\n\t\t\tdict.set( 123 , 321 )\n\t\t\t$mol_assert_equal( dict.get( 123 ) , 321 )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , true )\n\n\t\t\tdict.delete( 123 )\n\t\t\t$mol_assert_equal( dict.get( 123 ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( 123 ) , false )\n\t\t} ,\n\n\t\t'pojo as key'() {\n\t\t\tconst dict = new $mol_dict< { foo : number } , number >()\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , undefined )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , false )\n\n\t\t\tdict.set( { foo : 123 } , 321 )\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , 321 )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , true )\n\n\t\t\tdict.delete({ foo : 123 })\n\t\t\t$mol_assert_equal( dict.get({ foo : 123 }) , undefined )\n\t\t\t$mol_assert_equal( dict.has({ foo : 123 }) , false )\n\t\t} ,\n\n\t\t'array as key'() {\n\t\t\tconst dict = new $mol_dict< [ number ] , number >()\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , undefined )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , false )\n\n\t\t\tdict.set( [ 123 ] , 321 )\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , 321 )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , true )\n\n\t\t\tdict.delete([ 123 ])\n\t\t\t$mol_assert_equal( dict.get([ 123 ]) , undefined )\n\t\t\t$mol_assert_equal( dict.has([ 123 ]) , false )\n\t\t} ,\n\n\t\t'html element as key'() {\n\t\t\tconst el = <div />\n\n\t\t\tconst dict = new $mol_dict< Element , number >()\n\t\t\t$mol_assert_equal( dict.get( el ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( el ) , false )\n\n\t\t\tdict.set( el , 321 )\n\t\t\t$mol_assert_equal( dict.get( el ) , 321 )\n\t\t\t$mol_assert_equal( dict.has( el ) , true )\n\t\t\t\n\t\t\t$mol_assert_equal( dict.get( <div/> ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( <div/> ) , false )\n\n\t\t\tdict.delete( el )\n\t\t\t$mol_assert_equal( dict.get( el ) , undefined )\n\t\t\t$mol_assert_equal( dict.has( el ) , false )\n\t\t} ,\n\n\t\t'for-of key restore'() {\n\t\t\t\n\t\t\tconst dict = new $mol_dict([[ [123] , 321 ]])\n\t\t\t\n\t\t\tconst keys = [] as number[][]\n\t\t\tconst vals = [] as number[]\n\n\t\t\tfor( const [ key , val ] of dict ) {\n\t\t\t\tkeys.push( key )\n\t\t\t\tvals.push( val )\n\t\t\t}\n\n\t\t\t$mol_assert_like( keys, [ [123] ] )\n\t\t\t$mol_assert_like( vals, [ 321 ] )\n\n\t\t} ,\n\n\t\t'method iterators key restore'() {\n\t\t\tconst dict = new $mol_dict([[ [123] , 321 ]])\n\t\t\t$mol_assert_like( [ ... dict.keys() ], [ [123] ] )\n\t\t\t$mol_assert_like( [ ... dict.values() ], [ 321 ] )\n\t\t\t$mol_assert_like( [ ... dict.entries() ], [ [ [123], 321 ] ] )\n\t\t} ,\n\n\t\t'forEach key restore'() {\n\n\t\t\tconst dict = new $mol_dict([[ [123] , 321 ]])\n\t\t\t\n\t\t\tconst keys = [] as number[][]\n\t\t\tconst vals = [] as number[]\n\n\t\t\tdict.forEach( ( val , key )=> {\n\t\t\t\tkeys.push( key )\n\t\t\t\tvals.push( val )\n\t\t\t} )\n\n\t\t\t$mol_assert_like( keys, [ [123] ] )\n\t\t\t$mol_assert_like( vals, [ 321 ] )\n\t\t\t\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'fresh'() {\n\t\t\t\n\t\t\tconst clock = new $hyoo_crowd_clock\n\t\t\tclock.see_peer( { lo: 11, hi: 111 }, 1 )\n\t\t\tclock.see_peer( { lo: 22, hi: 222 }, 2 )\n\t\t\t\n\t\t\t$mol_assert_ok( clock.fresh( { lo: 22, hi: 222 }, 3 ) )\n\t\t\t$mol_assert_ok( clock.fresh( { lo: 33, hi: 333 }, 1 ) )\n\t\t\t\n\t\t\t$mol_assert_not( clock.fresh( { lo: 22, hi: 222 }, 1 ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'fork'() {\n\t\t\t\n\t\t\tconst left = new $hyoo_crowd_clock\n\t\t\tleft.see_peer( { lo: 11, hi: 111 }, 1 )\n\t\t\tleft.see_peer( { lo: 22, hi: 222 }, 2 )\n\t\t\t\n\t\t\tconst right = new $hyoo_crowd_clock( left )\n\t\t\t\n\t\t\t$mol_assert_equal( right.last_time, 2 )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... right ],\n\t\t\t\t[\n\t\t\t\t\t[ { lo: 11, hi: 111 }, 1 ],\n\t\t\t\t\t[ { lo: 22, hi: 222 }, 2 ],\n\t\t\t\t],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'generate'() {\n\t\t\t\n\t\t\tconst clock = new $hyoo_crowd_clock\n\t\t\tclock.see_peer( { lo: 11, hi: 111 }, $mol_int62_min + 1 )\n\t\t\tclock.see_peer( { lo: 22, hi: 222 }, $mol_int62_min + 2 )\n\t\t\t\n\t\t\tconst now = clock.now() as number\n\t\t\t\n\t\t\tconst time1 = clock.tick( { lo: 11, hi: 111 } )\n\t\t\t$mol_assert_like( time1, now )\n\t\t\t$mol_assert_like( clock.last_time, now )\n\t\t\t\n\t\t\tclock.see_peer( { lo: 22, hi: 222 }, now + 10 )\n\t\t\t\n\t\t\tconst time2 = clock.tick( { lo: 22, hi: 222 } )\n\t\t\t$mol_assert_like( time2, now + 11 )\n\t\t\t$mol_assert_like( clock.last_time, now + 11 )\n\t\t\t\n\t\t},\n\t\t\n\t\t'ahead'() {\n\t\t\t\n\t\t\tconst clock1 = new $hyoo_crowd_clock\n\t\t\tclock1.see_peer( { lo: 11, hi: 111 }, 1 )\n\t\t\tclock1.see_peer( { lo: 22, hi: 222 }, 2 )\n\t\t\t\n\t\t\tconst clock2 = new $hyoo_crowd_clock\n\t\t\tclock2.see_peer( { lo: 11, hi: 111 }, 1 )\n\t\t\tclock2.see_peer( { lo: 33, hi: 333 }, 2 )\n\t\t\t\n\t\t\tconst clock3 = new $hyoo_crowd_clock\n\t\t\tclock3.see_peer( { lo: 11, hi: 111 }, 1 )\n\t\t\tclock3.see_peer( { lo: 22, hi: 222 }, 2 )\n\t\t\tclock3.see_peer( { lo: 33, hi: 333 }, 2 )\n\t\t\t\n\t\t\t$mol_assert_ok( clock1.ahead( clock2 ) )\n\t\t\t$mol_assert_ok( clock2.ahead( clock1 ) )\n\t\t\t\n\t\t\t$mol_assert_ok( clock3.ahead( clock1 ) )\n\t\t\t$mol_assert_ok( clock3.ahead( clock2 ) )\n\t\t\t\n\t\t\t$mol_assert_not( clock1.ahead( clock3 ) )\n\t\t\t$mol_assert_not( clock2.ahead( clock3 ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'bin'() {\n\t\t\t\n\t\t\tconst clocks1 = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t\tclocks1[ $hyoo_crowd_unit_group.auth ].see_peer( { lo: 11, hi: 111 }, 1 )\n\t\t\tclocks1[ $hyoo_crowd_unit_group.data ].see_peer( { lo: 11, hi: 111 }, 2 )\n\t\t\t\n\t\t\tconst bin = $hyoo_crowd_clock_bin.from( { lo: -11, hi: -111 }, clocks1 )\n\t\t\t\n\t\t\t$mol_assert_like( bin.land(), { lo: -11, hi: -111 } )\n\t\t\t\n\t\t\tconst clocks2 = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t\tclocks2[ $hyoo_crowd_unit_group.auth ].see_bin( bin, $hyoo_crowd_unit_group.auth )\n\t\t\tclocks2[ $hyoo_crowd_unit_group.data ].see_bin( bin, $hyoo_crowd_unit_group.data )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tclocks2.map( clock => new Map( clock ) ),\n\t\t\t\t[\n\t\t\t\t\tnew Map([\n\t\t\t\t\t\t[ { lo: 11, hi: 111 }, 1 ],\n\t\t\t\t\t]),\n\t\t\t\t\tnew Map([\n\t\t\t\t\t\t[ { lo: 11, hi: 111 }, 2 ],\n\t\t\t\t\t]),\n\t\t\t\t]\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","/** @jsx $mol_jsx */\n/** @jsxFrag $mol_jsx_frag */\nnamespace $ {\n\n\t$mol_test({\n\t\t\n\t\t'same list'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">b</p>\n\t\t\t\t<p data-rev=\"old\">c</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'abc',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\tupdate: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_dom( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">b</p>\n\t\t\t\t<p data-rev=\"old\">c</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'insert items'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">b</p>\n\t\t\t\t<p data-rev=\"old\">c</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 1,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'bXYc',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\tupdate: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_dom( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">b</p>\n\t\t\t\t<p data-rev=\"new\">X</p>\n\t\t\t\t<p data-rev=\"new\">Y</p>\n\t\t\t\t<p data-rev=\"old\">c</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'split item'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">bc</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'abcd',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\tupdate: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_dom( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"new\">b</p>\n\t\t\t\t<p data-rev=\"up\">c</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'drop items'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">A</p>\n\t\t\t\t<p data-rev=\"old\">B</p>\n\t\t\t\t<p data-rev=\"old\">x</p>\n\t\t\t\t<p data-rev=\"old\">y</p>\n\t\t\t\t<p data-rev=\"old\">C</p>\n\t\t\t\t<p data-rev=\"old\">D</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 1,\n\t\t\t\tto: 5,\n\t\t\t\tnext: 'BC',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\tupdate: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_dom( list, <body>\n\t\t\t\t<p data-rev=\"old\">A</p>\n\t\t\t\t<p data-rev=\"old\">B</p>\n\t\t\t\t<p data-rev=\"old\">C</p>\n\t\t\t\t<p data-rev=\"old\">D</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'update items'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">B</p>\n\t\t\t\t<p data-rev=\"old\">C</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 1,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'XY',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\tupdate: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_dom( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"up\">X</p>\n\t\t\t\t<p data-rev=\"up\">Y</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t\n\texport function $mol_reconcile< Prev, Next >( {\n\t\tprev,\n\t\tfrom,\n\t\tto,\n\t\tnext,\n\t\tequal,\n\t\tdrop,\n\t\tinsert,\n\t\tupdate,\n\t}: {\n\t\tprev: readonly Prev[],\n\t\tfrom: number,\n\t\tto: number,\n\t\tnext: ArrayLike<Next>,\n\t\tequal: ( next: Next, prev: Prev )=> boolean,\n\t\tdrop: ( prev: Prev, lead: Prev | null )=> Prev | null,\n\t\tinsert: ( next: Next, lead: Prev | null )=> Prev,\n\t\tupdate?: ( next: Next, prev: Prev, lead: Prev | null )=> Prev,\n\t} ) {\n\t\t\n\t\tif( !update ) update = ( next, prev, lead )=> insert( next, drop( prev, lead ) )\n\t\t\n\t\tlet p = from\n\t\tlet n = 0\n\t\tlet lead = p ? prev[ p - 1 ] : null\n\t\t\n\t\tif( to > prev.length ) $mol_fail( new RangeError( `To(${ to }) greater then length(${ prev.length })` ) )\n\t\tif( from > to ) $mol_fail( new RangeError( `From(${ to }) greater then to(${ to })` ) )\n\t\n\t\twhile( p < to || n < next.length ) {\n\t\t\t\n\t\t\tif( p < to && n < next.length && equal( next[n], prev[p] ) ) {\n\t\t\t\t\n\t\t\t\tlead = prev[p]\n\t\t\t\t++ p\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t} else if( next.length - n > to - p ) {\n\t\t\t\t\n\t\t\t\tlead = insert( next[n], lead )\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t} else if( next.length - n < to - p ) {\n\t\t\t\t\n\t\t\t\tlead = drop( prev[p], lead )\n\t\t\t\t++ p\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tlead = update( next[n], prev[p], lead )\n\t\t\t\t++ p\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport class $hyoo_crowd_reg extends $hyoo_crowd_node {\n\t\t\n\t\t/** Atomic value. */\n\t\tvalue( next?: unknown ) {\n\t\t\t\n\t\t\tconst units = this.units()\n\t\t\tlet last\n\t\t\t\n\t\t\tfor( const unit of units ) {\n\t\t\t\tif( !last || $hyoo_crowd_unit_compare( unit, last ) > 0 ) last = unit\n\t\t\t}\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\treturn last?.data ?? null\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif( last?.data === next ) return next\n\t\t\t\t\n\t\t\t\tfor( const unit of units ) {\n\t\t\t\t\tif( unit === last ) continue\n\t\t\t\t\tthis.land.wipe( unit )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst self = last?.self() ?? this.land.id_new()\n\t\t\t\t\n\t\t\t\tthis.land.put(\n\t\t\t\t\tthis.head,\n\t\t\t\t\tself,\n\t\t\t\t\t{ lo: 0, hi: 0 },\n\t\t\t\t\tnext,\n\t\t\t\t)\n\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Atomic string. */\n\t\tstr( next?: string ) {\n\t\t\treturn String( this.value( next ) ?? '' )\n\t\t}\n\t\t\n\t\t/** Atomic number. */\n\t\tnumb( next?: number ) {\n\t\t\treturn Number( this.value( next ) ?? 0 )\n\t\t}\n\t\t\n\t\t/** Atomic boolean. */\n\t\tbool( next?: boolean ) {\n\t\t\treturn Boolean( this.value( next ) ?? false )\n\t\t}\n\t\t\n\t\tyoke(\n\t\t\tking_level: $hyoo_crowd_peer_level,\n\t\t\tbase_level: $hyoo_crowd_peer_level,\n\t\t) {\n\t\t\t\n\t\t\tconst world = this.world()\n\t\t\t\n\t\t\tlet land_id = $mol_int62_from_string( this.value() as string ?? '0_0' )\n\t\t\tif( land_id.lo || land_id.hi ) return world.land_sync( land_id )\n\t\t\t\n\t\t\tconst land = $mol_wire_sync( world ).grab( king_level, base_level )\n\t\t\tthis.value( $mol_int62_to_string( land.id() ) )\n\t\t\t\n\t\t\treturn land\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\texport class $hyoo_crowd_list extends $hyoo_crowd_node {\n\t\t\n\t\t/** Data list representation. */\n\t\tlist( next?: readonly unknown[] ) {\n\t\t\t\n\t\t\tconst units = this.units()\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\treturn units.map( unit => unit.data )\n\t\t\t} else {\n\t\t\t\tthis.insert( next, 0, units.length )\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tset( next?: ReadonlySet< string | number | boolean | null > ) {\n\t\t\treturn new Set( this.list( next && [ ... next ] ) )\n\t\t}\n\t\t\n\t\tinsert(\n\t\t\tnext: readonly unknown[],\n\t\t\tfrom = this.units().length,\n\t\t\tto = from,\n\t\t) {\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: this.units(),\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\tnext,\n\t\t\t\tequal: ( next, prev )=> prev.data === next,\n\t\t\t\tdrop: ( prev, lead )=> this.land.wipe( prev ),\n\t\t\t\tinsert: ( next, lead )=> this.land.put(\n\t\t\t\t\tthis.head,\n\t\t\t\t\tthis.land.id_new(),\n\t\t\t\t\tlead?.self() ?? { lo: 0, hi: 0 },\n\t\t\t\t\tnext,\n\t\t\t\t),\n\t\t\t\tupdate: ( next, prev, lead )=> this.land.put(\n\t\t\t\t\tprev.head(),\n\t\t\t\t\tprev.self(),\n\t\t\t\t\tlead?.self() ?? { lo: 0, hi: 0 },\n\t\t\t\t\tnext,\n\t\t\t\t),\n\t\t\t})\n\t\t\t\n\t\t}\n\t\t\n\t\tmove(\n\t\t\tfrom: number,\n\t\t\tto: number,\n\t\t) {\n\t\t\t\n\t\t\tconst units = this.units()\n\t\t\tconst lead = to ? units[ to - 1 ] : null\n\t\t\t\n\t\t\treturn this.land.move( units[ from ], this.head, lead?.self() ?? { lo: 0, hi: 0 } )\n\t\t\t\n\t\t}\n\t\t\n\t\tcut( seat: number ) {\n\t\t\treturn this.land.wipe( this.units()[ seat ] )\n\t\t}\n\t\t\n\t\thas( val: string | number | boolean | null ) {\n\t\t\t\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\tif( unit.data === val ) return true \n\t\t\t}\n\t\t\t\n\t\t\treturn false\n\t\t}\n\t\t\n\t\tadd( val: string | number | boolean | null ) {\n\t\t\tif( this.has( val ) ) return\n\t\t\tthis.insert([ val ])\n\t\t}\n\t\t\n\t\tdrop( val: string | number | boolean | null ) {\n\t\t\t\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\tif( unit.data !== val ) continue\n\t\t\t\tthis.land.wipe( unit )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t$mol_test( { \n\t\t\n\t\t'const returns stored value'() {\n\t\t\n\t\t\tconst foo = { bar : $mol_const( Math.random() ) }\n\t\t\t\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar() )\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar['()'] )\n\t\t\t\n\t\t} ,\n\n\t} )\n}\n","namespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\tasync 'delta & apply'() {\n\t\t\t\n\t\t\tconst world1 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst world2 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\t\n\t\t\tconst land1 = await world1.grab()\n\t\t\tconst land2 = await world1.grab()\n\t\t\t\n\t\t\t// do changes\n\t\t\tland1.chief.as( $hyoo_crowd_list ).list([ 123, 456 ])\n\t\t\tland2.chief.as( $hyoo_crowd_list ).list([ 456, 789 ])\n\t\t\t\n\t\t\t// apply changes\n\t\t\tfor( const unit of await world1.delta() ) {\n\t\t\t\t$mol_assert_like( await world2.apply_unit( unit ), '' )\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tworld2.land( land1.id() ).chief.as( $hyoo_crowd_list ).list(),\n\t\t\t\t[ 123, 456 ],\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tworld2.land( land2.id() ).chief.as( $hyoo_crowd_list ).list(),\n\t\t\t\t[ 456, 789 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'ignore changes from far future'() {\n\t\t\t\n\t\t\tconst world1 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst world2 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst land = await world1.grab()\n\t\t\t\n\t\t\t// go to future\n\t\t\tconst clock = land.clock_data\n\t\t\tclock.see_time( clock.now() + 60 * 60 * 24 * 10 )\n\t\t\t\n\t\t\t// do changes\n\t\t\tland.chief.as( $hyoo_crowd_reg ).numb( 123 )\n\t\t\t\n\t\t\t// 1 ignored units\n\t\t\tconst broken = [] as string[]\n\t\t\tfor( const bin of await world1.delta() ) {\n\t\t\t\tbroken.push( await world2.apply_unit( bin ) )\n\t\t\t}\n\t\t\t$mol_assert_like( broken, [ '', '', '', 'Far future' ] )\n\t\t\t\n\t\t\t// only 3 grab units\n\t\t\t$mol_assert_like( world2.land( land.id() ).delta().length, 3 )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'ignore auth as another peer'() {\n\t\t\t\n\t\t\tconst world1 = new $hyoo_crowd_world( { ... await $hyoo_crowd_peer.generate(), id: { lo: 1, hi: 11 } } )\n\t\t\tconst world2 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst land = await world1.grab()\n\t\t\t\n\t\t\t// do changes\n\t\t\tland.chief.as( $hyoo_crowd_reg ).numb( 123 )\n\t\t\t\n\t\t\t// 2 ignored units\n\t\t\tconst broken = [] as string[]\n\t\t\tfor( const bin of await world1.delta() ) {\n\t\t\t\tbroken.push( await world2.apply_unit( bin ) )\n\t\t\t}\n\t\t\t$mol_assert_like( broken, [ '', '', 'Alien join key', 'No auth key' ] )\n\t\t\t\n\t\t\t// only 2 grab units\n\t\t\t$mol_assert_like( world2.land( land.id() ).delta().length, 2 )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'ignore auth without key'() {\n\t\t\t\n\t\t\tconst world1 = new $hyoo_crowd_world( { ... await $hyoo_crowd_peer.generate(), key_public_serial: [] as any } )\n\t\t\tconst world2 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst land = await world1.grab()\n\t\t\t\n\t\t\t// do changes\n\t\t\tworld1.land({ lo: 1, hi: 1 }).chief.as( $hyoo_crowd_reg ).numb( 123 )\n\t\t\t\n\t\t\t// 2 ignored units\n\t\t\tconst broken = [] as string[]\n\t\t\tfor( const bin of await world1.delta() ) {\n\t\t\t\tbroken.push( await world2.apply_unit( bin ) )\n\t\t\t}\n\t\t\t$mol_assert_like( broken, [ '', '', 'No join key', 'No king' ] )\n\t\t\t\n\t\t\t// only 2 grab units\n\t\t\t$mol_assert_like( world2.land( land.id() ).delta().length, 2 )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'ignore changes with wrong signs'() {\n\t\t\t\n\t\t\tconst world1 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst world2 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst land = await world1.grab()\n\t\t\t\n\t\t\t// 2 ignored units\n\t\t\tconst broken = [] as string[]\n\t\t\tfor( const unit of await world1.delta() ) {\n\t\t\t\tunit.bin!.setInt8( 16, ~ unit.bin!.getInt8( 16 ) ) // break sign\n\t\t\t\tbroken.push( await world2.apply_unit( unit ) )\n\t\t\t}\n\t\t\t$mol_assert_like( broken, [ 'Wrong join sign', 'No king' ] )\n\t\t\t\n\t\t\t// no applied units \n\t\t\t$mol_assert_like( world2.land( land.id() ).delta().length, 0 )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'ignore update auth'() {\n\t\t\t\n\t\t\tconst peer = await $hyoo_crowd_peer.generate()\n\t\t\tconst world1 = new $hyoo_crowd_world( peer )\n\t\t\tconst world2 = new $hyoo_crowd_world( peer )\n\t\t\tconst land = await world1.grab()\n\t\t\t\n\t\t\t// do changes\n\t\t\tland.chief.as( $hyoo_crowd_reg ).numb( 123 )\n\t\t\tworld2.land( land.id() ).chief.as( $hyoo_crowd_reg ).numb( 234 )\n\t\t\t\n\t\t\t// 1 ignored unit\n\t\t\tconst broken = [] as string[]\n\t\t\tfor( const bin of await world1.delta() ) {\n\t\t\t\tbroken.push( await world2.apply_unit( bin ) )\n\t\t\t}\n\t\t\t$mol_assert_like( broken, [ '', '', 'Already join', '' ] )\n\t\t\t\n\t\t\t// 5 units applied\n\t\t\t$mol_assert_like( world2.land( land.id() ).delta().length, 5 )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'levels'() {\n\t\t\t\n\t\t\tconst world1 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst world2 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\t\n\t\t\tconst peer = await $hyoo_crowd_peer.generate()\n\t\t\t\n\t\t\tconst land1 = await world1.grab() // +3 units\n\t\t\tconst land2 = world2.land( land1.id() )\n\t\t\t\n\t\t\t// do changes\n\t\t\tland1.chief.sub( 'foo', $hyoo_crowd_reg ).numb( 123 ) // +1 unit\n\t\t\t\n\t\t\tfor( const bin of await world1.delta() ) {\n\t\t\t\tawait world2.apply_unit( bin )\n\t\t\t}\n\t\t\tland2.chief.sub( 'foo', $hyoo_crowd_reg ).numb( 234 ) // 1 unit update +1 unit\n\t\t\tland2.chief.sub( 'bar', $hyoo_crowd_reg ).numb( 234 ) // +1 unit\n\t\t\tland2.level( peer.id, $hyoo_crowd_peer_level.law ) // +1 unit\n\t\t\t\n\t\t\t$mol_assert_like( land1.delta().length, 4 )\n\t\t\t\n\t\t\tlevel_get: {\n\t\t\t\t\n\t\t\t\tconst broken = [] as string[]\n\t\t\t\tfor( const bin of await world2.delta() ) {\n\t\t\t\t\tbroken.push( await world1.apply_unit( bin ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_assert_like( broken, [ 'Already join', '', 'Already join', '', 'Need law level', 'No rights', 'No rights' ] )\n\t\t\t\t$mol_assert_like( land1.delta().length, 5 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'foo', $hyoo_crowd_reg ).numb(), 123 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'bar', $hyoo_crowd_reg ).numb(), 0 )\n\t\t\t\t$mol_assert_like( land1.level( peer.id ), $hyoo_crowd_peer_level.get )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlevel_add: {\n\t\t\t\t\n\t\t\t\tland1.level( land2.peer().id, $hyoo_crowd_peer_level.add ) // +1 unit\n\t\t\t\t\n\t\t\t\tconst broken = [] as string[]\n\t\t\t\tfor( const bin of await world2.delta() ) {\n\t\t\t\t\tbroken.push( await world1.apply_unit( bin ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_assert_like( broken, [ 'Already join', '', 'Already join', 'Already join', 'Need law level', 'No rights', '' ] )\n\t\t\t\t$mol_assert_like( land1.delta().length, 7 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'foo', $hyoo_crowd_reg ).numb(), 123 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'bar', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.level( peer.id ), $hyoo_crowd_peer_level.get )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlevel_mod: {\n\t\t\t\t\n\t\t\t\tland1.level( land2.peer().id, $hyoo_crowd_peer_level.mod )\n\t\t\t\t\n\t\t\t\tconst broken = [] as string[]\n\t\t\t\tfor( const bin of await world2.delta() ) {\n\t\t\t\t\tbroken.push( await world1.apply_unit( bin ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_assert_like( broken, [ 'Already join', '', 'Already join', 'Already join', 'Need law level', '', '' ] )\n\t\t\t\t$mol_assert_like( land1.delta().length, 7 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'foo', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'bar', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.level( peer.id ), $hyoo_crowd_peer_level.get )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlevel_law: {\n\t\t\t\t\n\t\t\t\tland1.level( land2.peer().id, $hyoo_crowd_peer_level.law )\n\t\t\t\t\n\t\t\t\tconst broken = [] as string[]\n\t\t\t\tfor( const bin of await world2.delta() ) {\n\t\t\t\t\tbroken.push( await world1.apply_unit( bin ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_assert_like( broken, [ 'Already join', '', 'Already join', 'Already join', '', '', '' ] )\n\t\t\t\t$mol_assert_like( land1.delta().length, 8 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'foo', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'bar', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.level( peer.id ), $hyoo_crowd_peer_level.law )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'default level'() {\n\t\t\t\n\t\t\tconst world1 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\tconst world2 = new $hyoo_crowd_world( await $hyoo_crowd_peer.generate() )\n\t\t\t\n\t\t\tconst peer = await $hyoo_crowd_peer.generate()\n\t\t\t\n\t\t\tconst land1 = await world1.grab()\n\t\t\tconst land2 = world2.land( land1.id() )\n\t\t\t\n\t\t\t// do changes\n\t\t\tland1.chief.sub( 'foo', $hyoo_crowd_reg ).numb( 123 )\n\t\t\t\n\t\t\tfor( const bin of await world1.delta() ) {\n\t\t\t\tawait world2.apply_unit( bin )\n\t\t\t}\n\t\t\tland2.chief.sub( 'foo', $hyoo_crowd_reg ).numb( 234 )\n\t\t\tland2.chief.sub( 'bar', $hyoo_crowd_reg ).numb( 234 )\n\t\t\tland2.level( peer.id, $hyoo_crowd_peer_level.law ) \n\t\t\t\n\t\t\t$mol_assert_like( land1.delta().length, 4 )\n\t\t\t\n\t\t\tlevel_add: {\n\t\t\t\t\n\t\t\t\tland1.level_base( $hyoo_crowd_peer_level.add )\n\t\t\t\t\n\t\t\t\tconst broken = [] as string[]\n\t\t\t\tfor( const bin of await world2.delta() ) {\n\t\t\t\t\tbroken.push( await world1.apply_unit( bin ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_assert_like( broken, [ 'Already join', '', 'Already join', '', 'Need law level', 'No rights', '' ] )\n\t\t\t\t$mol_assert_like( land1.delta().length, 7 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'foo', $hyoo_crowd_reg ).numb(), 123 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'bar', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.level( peer.id ), $hyoo_crowd_peer_level.get )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlevel_mod: {\n\t\t\t\t\n\t\t\t\tland1.level_base( $hyoo_crowd_peer_level.mod )\n\t\t\t\t\n\t\t\t\tconst broken = [] as string[]\n\t\t\t\tfor( const bin of await world2.delta() ) {\n\t\t\t\t\tbroken.push( await world1.apply_unit( bin ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_assert_like( broken, [ 'Already join', '', 'Already join', 'Already join', 'Need law level', '', '' ] )\n\t\t\t\t$mol_assert_like( land1.delta().length, 7 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'foo', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'bar', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.level( peer.id ), $hyoo_crowd_peer_level.get )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// forbidden now\n\t\t\tlevel_law: {\n\t\t\t\t\n\t\t\t\tland1.level_base( $hyoo_crowd_peer_level.law )\n\t\t\t\t\n\t\t\t\tconst broken = [] as string[]\n\t\t\t\tfor( const bin of await world2.delta() ) {\n\t\t\t\t\tbroken.push( await world1.apply_unit( bin ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_assert_like( broken, [ 'Already join', '', 'Already join', 'Already join', 'Need law level', '', '' ] )\n\t\t\t\t$mol_assert_like( land1.delta().length, 7 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'foo', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.chief.sub( 'bar', $hyoo_crowd_reg ).numb(), 234 )\n\t\t\t\t$mol_assert_like( land1.level( peer.id ), $hyoo_crowd_peer_level.get )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'init with overload'() {\n\t\t\tclass X extends $mol_object {\n\t\t\t\tfoo() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = X.make({\n\t\t\t\tfoo : ()=> 2 ,\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo() , 2 )\n\t\t} ,\n\t\t\t\n\t} )\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'tree parsing'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\nbar\\n\" ).sub.length , 2 )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\nbar\\n\" ).sub[ 1 ].type , \"bar\" )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\n\\n\\n\" ).sub.length , 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"=foo\\n\\\\bar\\n\" ).sub.length , 2 )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"=foo\\n\\\\bar\\n\" ).sub[ 1 ].data , \"bar\" )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo bar \\\\pol\" ).sub[ 0 ].sub[ 0 ].sub[ 0 ].data , \"pol\" )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo bar\\n\\t\\\\pol\\n\\t\\\\men\" ).sub[ 0 ].sub[ 0 ].sub[ 1 ].data , \"men\" )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'foo bar \\\\text\\n' ).toString() , 'foo bar \\\\text\\n' )\n\t\t} ,\n\n\t\t'inserting'() {\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b c d' ).insert( new $mol_tree , 'a' , 'b' , 'c' ).toString() , 'a b \\\\\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b' ).insert( new $mol_tree , 'a' , 'b' , 'c' , 'd' ).toString() , 'a b c \\\\\\n' )\n\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b c d' ).insert( new $mol_tree , 0 , 0 , 0 ).toString() , 'a b \\\\\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b' ).insert( new $mol_tree , 0 , 0 , 0 , 0 ).toString() , 'a b \\\\\\n\\t\\\\\\n' )\n\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b c d' ).insert( new $mol_tree , null , null , null ).toString() , 'a b \\\\\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'a b' ).insert( new $mol_tree , null , null , null , null ).toString() , 'a b \\\\\\n\\t\\\\\\n' )\n\t\t} ,\n\n\t\t'fromJSON'() {\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON([]).toString() , '/\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON([ false , true ]).toString() , '/\\n\\tfalse\\n\\ttrue\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON([ 0 , 1 , 2.3 ]).toString() , '/\\n\\t0\\n\\t1\\n\\t2.3\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON([ '' , 'foo' , 'bar\\nbaz' ]).toString() , '/\\n\\t\\\\\\n\\t\\\\foo\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n' )\n\t\t\t$mol_assert_equal( $mol_tree.fromJSON({ 'foo' : false , 'bar\\nbaz' : 'lol' }).toString() , '*\\n\\tfoo false\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n\\t\\t\\\\lol\\n' )\n\t\t} ,\n\t\t\n\t\t'toJSON'() {\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '/\\n' ).sub[0] ) , '[]' )\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '/\\n\\tfalse\\n\\ttrue\\n' ).sub[0] ) , '[false,true]' )\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '/\\n\\t0\\n\\t1\\n\\t2.3\\n' ).sub[0] ) , '[0,1,2.3]' )\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '/\\n\\t\\\\\\n\\t\\\\foo\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n' ).sub[0] ) , '[\"\",\"foo\",\"bar\\\\nbaz\"]' )\n\t\t\t$mol_assert_equal( JSON.stringify( $mol_tree.fromString( '*\\n\\tfoo false\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n\\t\\t\\\\lol\\n' ).sub[0] ) , '{\"foo\":false,\"bar\\\\nbaz\":\"lol\"}' )\n\t\t} ,\n\t\t\n\t\t'hack'() {\n\n\t\t\tconst res = $mol_tree.fromString( `foo bar xxx` ).hack({\n\t\t\t\t'' : ( tree , context )=> [ tree.hack( context ) ] ,\n\t\t\t\t'bar' : ( tree , context )=> [ tree.hack( context ).clone({ type : '777' }) ] ,\n\t\t\t})\n\n\t\t\t$mol_assert_equal( res.toString() , new $mol_tree({ type : 'foo 777 xxx' }).toString() )\n\n\t\t} ,\n\n\t\t'errors handling'( $ ) {\n\n\t\t\tconst errors = [] as string[]\n\n\t\t\tclass Tree extends $mol_tree {\n\t\t\t\tstatic $ = $.$mol_ambient({\n\t\t\t\t\t$mol_fail: error => errors.push( error.message ) as never\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tTree.fromString( `\n\t\t\t\t\\t \\tfoo\n\t\t\t\tbar \\\\data\n\t\t\t` , 'test' )\n\n\t\t\t$mol_assert_like( errors , [ 'Syntax error at test:2\\n \\tfoo' ] )\n\n\t\t},\n\n\t} )\t\n}\n","namespace $ {\n\t\n\texport class $mol_wire_log extends $mol_object2 {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic watch( task?: ()=> any ) {\n\t\t\treturn task\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic track( fiber: $mol_wire_fiber< any, any, any > ) {\n\t\t\t\n\t\t\tconst prev = $mol_wire_probe( ()=> this.track( fiber ) )\n\t\t\tlet next: any\n\t\t\t\n\t\t\ttry {\n\t\t\t\tnext = fiber.sync()\n\t\t\t} finally {\n\t\t\t\t\n\t\t\t\tfor( const pub of fiber.pub_list ) {\n\t\t\t\t\tif( pub instanceof $mol_wire_fiber ) {\n\t\t\t\t\t\tthis.track( pub )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif( prev !== undefined && !$mol_compare_deep( prev, next ) ) {\n\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\tmessage: 'Changed',\n\t\t\t\t\tplace: fiber,\n\t\t\t\t})\n\t\t\t}\n\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic active() {\n\t\t\t\n\t\t\ttry {\n\t\t\t\tthis.watch()?.()\n\t\t\t} finally {\n\t\t\t\tfor( const pub of ( $mol_wire_auto() as $mol_wire_fiber< any, any, any > ).pub_list ) {\n\t\t\t\t\tif( pub instanceof $mol_wire_fiber ) {\n\t\t\t\t\t\tthis.track( pub )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t$mol_wire_log.active()\n\n}\n",null,null,null,null,null,null,"namespace $ {\n\n\t$mol_test({\n\n\t\t'escape' () {\n\n\t\t\tconst specials = $mol_regexp.from( '.*+?^${}()|[]\\\\' )\n\t\t\t$mol_assert_equal( specials.source , '\\\\.\\\\*\\\\+\\\\?\\\\^\\\\$\\\\{\\\\}\\\\(\\\\)\\\\|\\\\[\\\\]\\\\\\\\' )\n\n\t\t},\n\n\t\t'char code' () {\n\n\t\t\tconst space = $mol_regexp.from( 32 )\n\t\t\t$mol_assert_like( ' '.match( space ) , [ ' ' ] )\n\n\t\t},\n\n\t\t'repeat fixed'() {\n\n\t\t\tconst { repeat , decimal_only: digit } = $mol_regexp\n\n\t\t\tconst year = repeat( digit , 4 , 4 )\n\t\t\t$mol_assert_like( '#2020#'.match( year ) , [ '2020' ] )\n\n\t\t},\n\n\t\t'greedy repeat'() {\n\n\t\t\tconst { repeat , repeat_greedy , latin_only: letter } = $mol_regexp\n\n\t\t\t$mol_assert_like( 'abc'.match( repeat( letter, 1, 2 ) ) , [ 'a', 'b', 'c' ] )\n\t\t\t$mol_assert_like( 'abc'.match( repeat_greedy( letter, 1, 2 ) ) , [ 'ab', 'c' ] )\n\n\t\t},\n\n\t\t'repeat range'() {\n\n\t\t\tconst { repeat_greedy , decimal_only: digit } = $mol_regexp\n\n\t\t\tconst year = repeat_greedy( digit , 2 , 4 )\n\t\t\t\n\t\t\t$mol_assert_like( '#2#'.match( year ) , null )\n\t\t\t$mol_assert_like( '#20#'.match( year ) , [ '20' ] )\n\t\t\t$mol_assert_like( '#2020#'.match( year ) , [ '2020' ] )\n\t\t\t$mol_assert_like( '#20201#'.match( year ) , [ '2020' ] )\n\n\t\t},\n\n\t\t'repeat from'() {\n\n\t\t\tconst { repeat_greedy , latin_only: letter } = $mol_regexp\n\n\t\t\tconst name = repeat_greedy( letter , 2 )\n\n\t\t\t$mol_assert_like( '##'.match( name ) , null )\n\t\t\t$mol_assert_like( '#a#'.match( name ) , null )\n\t\t\t$mol_assert_like( '#ab#'.match( name ) , [ 'ab' ] )\n\t\t\t$mol_assert_like( '#abc#'.match( name ) , [ 'abc' ] )\n\n\t\t},\n\n\t\t'from string'() {\n\n\t\t\tconst regexp = $mol_regexp.from( '[\\\\d]' )\n\t\t\t\n\t\t\t$mol_assert_equal( regexp.source , '\\\\[\\\\\\\\d\\\\]' )\n\t\t\t$mol_assert_equal( regexp.flags , 'gsu' )\n\n\t\t},\n\n\t\t'from regexp'() {\n\t\t\t\n\t\t\tconst regexp = $mol_regexp.from( /[\\d]/i )\n\t\t\t\n\t\t\t$mol_assert_equal( regexp.source , '[\\\\d]' )\n\t\t\t$mol_assert_equal( regexp.flags , 'i' )\n\n\t\t},\n\n\t\t'split'() {\n\t\t\t\n\t\t\tconst regexp = $mol_regexp.from( ';' )\n\t\t\t\n\t\t\t$mol_assert_like( 'aaa;bbb;ccc'.split( regexp ) , [ 'aaa', ';', 'bbb', ';', 'ccc' ] )\n\t\t\t$mol_assert_like( 'aaa;;ccc'.split( regexp ) , [ 'aaa', ';', '', ';', 'ccc' ] )\n\t\t\t$mol_assert_like( 'aaa'.split( regexp ) , [ 'aaa' ] )\n\t\t\t$mol_assert_like( ''.split( regexp ) , [''] )\n\n\t\t},\n\n\t\t'test for matching'() {\n\t\t\t\n\t\t\tconst regexp = $mol_regexp.from( 'foo' )\n\t\t\t\n\t\t\t$mol_assert_like( regexp.test( '' ) , false )\n\t\t\t$mol_assert_like( regexp.test( 'fo' ) , false )\n\t\t\t$mol_assert_like( regexp.test( 'foo' ) , true )\n\t\t\t$mol_assert_like( regexp.test( 'foobar' ) , true )\n\t\t\t$mol_assert_like( regexp.test( 'barfoo' ) , true )\n\n\t\t},\n\n\t\t'case ignoring'() {\n\n\t\t\tconst xxx = $mol_regexp.from( 'x' , { ignoreCase : true } )\n\n\t\t\t$mol_assert_like( xxx.flags , 'gisu' )\n\t\t\t$mol_assert_like( xxx.exec( 'xx' )![0] , 'x' )\n\t\t\t$mol_assert_like( xxx.exec( 'XX' )![0] , 'X' )\n\n\t\t},\n\n\t\t'multiline mode'() {\n\n\t\t\tconst { end , from } = $mol_regexp\n\n\t\t\tconst xxx = from( [ 'x' , end ] , { multiline : true } )\n\n\t\t\t$mol_assert_like( xxx.exec( 'x\\ny' )![0] , 'x' )\n\t\t\t$mol_assert_like( xxx.flags , 'gmsu' )\n\n\t\t},\n\n\t\t'flags override'() {\n\n\t\t\tconst triplet = $mol_regexp.from(\n\t\t\t\t$mol_regexp.from(\n\t\t\t\t\t/.../,\n\t\t\t\t\t{ ignoreCase: true },\n\t\t\t\t),\n\t\t\t\t{ multiline: true },\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like( triplet.toString() , '/.../gmsu' )\n\n\t\t},\n\n\t\t'sequence'() {\n\n\t\t\tconst { begin , end , decimal_only: digit , repeat , from } = $mol_regexp\n\t\t\t\n\t\t\tconst year = repeat( digit , 4 , 4 )\n\t\t\tconst dash = '-'\n\t\t\tconst month = repeat( digit , 2 , 2 )\n\t\t\tconst day = repeat( digit , 2 , 2 )\n\n\t\t\tconst date = from([ begin , year , dash , month , dash , day , end ])\n\n\t\t\t$mol_assert_like( date.exec( '2020-01-02' )![0] , '2020-01-02' )\n\n\t\t},\n\n\t\t'optional'() {\n\n\t\t\tconst name = $mol_regexp.from([ 'A', ['4'] ])\n\n\t\t\t$mol_assert_equal( 'AB'.match( name )![0] , 'A' )\n\t\t\t$mol_assert_equal( 'A4'.match( name )![0] , 'A4' )\n\n\t\t},\n\n\t\t'anon variants'() {\n\n\t\t\tconst name = $mol_regexp.from([ 'A', $mol_regexp.vary([ '4', '5' ]) ])\n\n\t\t\t$mol_assert_equal( 'AB'.match( name ) , null )\n\t\t\t$mol_assert_equal( 'A4'.match( name )![0] , 'A4' )\n\t\t\t$mol_assert_equal( 'A5'.match( name )![0] , 'A5' )\n\n\t\t},\n\n\t\t'only groups'() {\n\n\t\t\tconst regexp = $mol_regexp.from({ dog : '@' })\n\n\t\t\t$mol_assert_like( [ ... '#'.matchAll( regexp ) ][0].groups , undefined )\n\t\t\t$mol_assert_like( [ ... '@'.matchAll( regexp ) ][0].groups , { dog : '@' } )\n\n\t\t},\n\n\t\t'catch skipped'() {\n\n\t\t\tconst regexp = $mol_regexp.from(/(@)(\\d?)/g)\n\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... '[[@]]'.matchAll( regexp ) ].map( f => [ ... f ] ) ,\n\t\t\t\t[\n\t\t\t\t\t[ '[[' ],\n\t\t\t\t\t[ '@', '@' , '' ],\n\t\t\t\t\t[ ']]' ],\n\t\t\t\t]\n\t\t\t)\n\n\t\t},\n\n\t\t'enum variants'() {\n\n\t\t\tenum Sex {\n\t\t\t\tmale = 'male',\n\t\t\t\tfemale = 'female',\n\t\t\t}\n\n\t\t\tconst sexism = $mol_regexp.from( Sex )\n\n\t\t\t$mol_assert_like( [ ... ''.matchAll( sexism ) ].length, 0 )\n\t\t\t$mol_assert_like( [ ... 'trans'.matchAll( sexism ) ][0].groups, undefined )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... 'male'.matchAll( sexism ) ][0].groups,\n\t\t\t\t{ male : 'male' , female : '' },\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... 'female'.matchAll( sexism ) ][0].groups,\n\t\t\t\t{ male : '' , female : 'female' },\n\t\t\t)\n\n\t\t},\n\n\t\t'recursive only groups'() {\n\n\t\t\tenum Sex {\n\t\t\t\tmale = 'male',\n\t\t\t\tfemale = 'female',\n\t\t\t}\n\n\t\t\tconst sexism = $mol_regexp.from({ Sex })\n\n\t\t\t$mol_assert_like( [ ... ''.matchAll( sexism ) ].length , 0 )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... 'male'.matchAll( sexism ) ][0].groups,\n\t\t\t\t{ Sex : 'male' , male : 'male' , female : '' },\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... 'female'.matchAll( sexism ) ][0].groups,\n\t\t\t\t{ Sex : 'female' , male : '' , female : 'female' },\n\t\t\t)\n\n\t\t},\n\n\t\t'sequence with groups'() {\n\n\t\t\tconst { begin , end , decimal_only: digit , repeat , from } = $mol_regexp\n\t\t\tconst year = repeat( digit , 4 , 4 )\n\t\t\tconst dash = '-'\n\t\t\tconst month = repeat( digit , 2 , 2 )\n\t\t\tconst day = repeat( digit , 2 , 2 )\n\n\t\t\tconst regexp = from([ begin , {year} , dash , {month} , dash , {day} , end ])\n\t\t\tconst found = [ ... '2020-01-02'.matchAll( regexp ) ]\n\n\t\t\t$mol_assert_like( found[0].groups , {\n\t\t\t\tyear : '2020' ,\n\t\t\t\tmonth : '01' ,\n\t\t\t\tday : '02' ,\n\t\t\t} )\n\n\t\t},\n\n\t\t'sequence with groups of mixed type'() {\n\n\t\t\tconst prefix = '/'\n\t\t\tconst postfix = '/'\n\n\t\t\tconst regexp = $mol_regexp.from([ {prefix} , /(\\w+)/ , {postfix} , /([gumi]*)/ ])\n\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... '/foo/mi'.matchAll( regexp ) ],\n\t\t\t\t[\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t[ \"/foo/mi\", \"/\", \"foo\", \"/\", \"mi\" ],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgroups: {\n\t\t\t\t\t\t\t\tprefix : '/' ,\n\t\t\t\t\t\t\t\tpostfix : '/' ,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tindex: 0,\n\t\t\t\t\t\t\tinput: \"/\",\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t)\n\n\t\t},\n\n\t\t'recursive sequence with groups'() {\n\n\t\t\tconst { begin , end , decimal_only: digit , repeat , from } = $mol_regexp\n\t\t\tconst year = repeat( digit , 4 , 4 )\n\t\t\tconst dash = '-'\n\t\t\tconst month = repeat( digit , 2 , 2 )\n\t\t\tconst day = repeat( digit , 2 , 2 )\n\n\t\t\tconst regexp = from([\n\t\t\t\tbegin , { date : [ {year} , dash , {month} ] } , dash , {day} , end\n\t\t\t])\n\t\t\t\n\t\t\tconst found = [ ... '2020-01-02'.matchAll( regexp ) ]\n\n\t\t\t$mol_assert_like( found[0].groups , {\n\t\t\t\tdate : '2020-01' ,\n\t\t\t\tyear : '2020' ,\n\t\t\t\tmonth : '01' ,\n\t\t\t\tday : '02' ,\n\t\t\t} )\n\n\t\t},\n\n\t\t'parse multiple'() {\n\n\t\t\tconst { decimal_only: digit , from } = $mol_regexp\n\n\t\t\tconst regexp = from({ digit })\n\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... '123'.matchAll( regexp ) ].map( f => f.groups ) ,\n\t\t\t\t[\n\t\t\t\t\t{ digit : '1' },\n\t\t\t\t\t{ digit : '2' },\n\t\t\t\t\t{ digit : '3' },\n\t\t\t\t]\n\t\t\t)\n\n\t\t},\n\n\t\t'named variants'() {\n\n\t\t\tconst { begin , or , end , from } = $mol_regexp\n\n\t\t\tconst sexism = from([\n\t\t\t\tbegin , 'sex = ' , { sex : [ 'male' , or , 'female' ] } , end\n\t\t\t])\n\n\t\t\t$mol_assert_like( [ ... 'sex = male'.matchAll( sexism ) ][0].groups , { sex : 'male' } )\n\t\t\t$mol_assert_like( [ ... 'sex = female'.matchAll( sexism ) ][0].groups , { sex : 'female' } )\n\t\t\t$mol_assert_like( [ ... 'sex = malefemale'.matchAll( sexism ) ][0].groups , undefined )\n\n\t\t},\n\n\t\t'force after'() {\n\n\t\t\tconst { latin_only: letter , force_after , from } = $mol_regexp\n\n\t\t\tconst regexp = from([ letter , force_after( '.' ) ])\n\n\t\t\t$mol_assert_like( 'x.'.match( regexp ) , [ 'x' ] )\n\t\t\t$mol_assert_like( 'x,'.match( regexp ) , null )\n\n\t\t},\n\n\t\t'forbid after'() {\n\n\t\t\tconst { latin_only: letter , forbid_after , from } = $mol_regexp\n\n\t\t\tconst regexp = from([ letter , forbid_after( '.' ) ])\n\n\t\t\t$mol_assert_like( 'x.'.match( regexp ) , null )\n\t\t\t$mol_assert_like( 'x,'.match( regexp ) , [ 'x' ] )\n\n\t\t},\n\n\t\t'char except'() {\n\n\t\t\tconst { char_except, latin_only, tab } = $mol_regexp\n\n\t\t\tconst name = char_except( latin_only, tab )\n\n\t\t\t$mol_assert_like( 'a'.match( name ) , null )\n\t\t\t$mol_assert_like( '\\t'.match( name ) , null )\n\t\t\t$mol_assert_like( '('.match( name ) , [ '(' ] )\n\n\t\t},\n\n\t\t'unicode only'() {\n\n\t\t\tconst { unicode_only, from } = $mol_regexp\n\n\t\t\tconst name = from([\n\t\t\t\tunicode_only( 'Script', 'Cyrillic' ),\n\t\t\t\tunicode_only( 'Hex_Digit' ),\n\t\t\t])\n\n\t\t\t$mol_assert_like( 'FF'.match( name ) , null )\n\t\t\t$mol_assert_like( 'ФG'.match( name ) , null )\n\t\t\t$mol_assert_like( 'ФF'.match( name ) , [ 'ФF' ] )\n\n\t\t},\n\n\t\t'generate by optional with inner group'() {\n\n\t\t\tconst { begin, end, from } = $mol_regexp\n\t\t\t\n\t\t\tconst animals = from([ begin, '#', [ '^', { dog : '@' } ], end ])\n\n\t\t\t$mol_assert_equal( animals.generate({}) , '#' )\n\t\t\t\n\t\t\t$mol_assert_equal( animals.generate({ dog: false }) , '#' )\n\t\t\t$mol_assert_equal( animals.generate({ dog: true }) , '#^@' )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> animals.generate({ dog: '$' }) , 'Wrong param: dog=$' )\n\n\t\t},\n\n\t\t'generate by optional with inner group with variants'() {\n\n\t\t\tconst { begin, end, from } = $mol_regexp\n\t\t\t\n\t\t\tconst animals = from([ begin, '#', [ '^', { animal: { dog : '@', fox: '&' } } ], end ])\n\n\t\t\t$mol_assert_equal( animals.generate({}) , '#' )\n\t\t\t\n\t\t\t$mol_assert_equal( animals.generate({ dog: true }) , '#^@' )\n\t\t\t$mol_assert_equal( animals.generate({ fox: true }) , '#^&' )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> animals.generate({ dog: '$' }) , 'Wrong param: dog=$' )\n\n\t\t},\n\t\t\n\t\t'complex example'() {\n\t\t\t\n\t\t\tconst {\n\t\t\t\tbegin, end,\n\t\t\t\tchar_only, char_range,\n\t\t\t\tlatin_only, slash_back,\n\t\t\t\trepeat_greedy, from,\n\t\t\t} = $mol_regexp\n\t\t\t\n\t\t\tconst atom_char = char_only( latin_only, \"!#$%&'*+/=?^`{|}~-\" )\n\t\t\tconst atom = repeat_greedy( atom_char, 1 )\n\t\t\tconst dot_atom = from([ atom, repeat_greedy([ '.', atom ]) ])\n\t\t\t\n\t\t\tconst name_letter = char_only(\n\t\t\t\tchar_range( 0x01, 0x08 ),\n\t\t\t\t0x0b, 0x0c,\n\t\t\t\tchar_range( 0x0e, 0x1f ),\n\t\t\t\t0x21,\n\t\t\t\tchar_range( 0x23, 0x5b ),\n\t\t\t\tchar_range( 0x5d, 0x7f ),\n\t\t\t)\n\t\t\t\n\t\t\tconst quoted_pair = from([\n\t\t\t\tslash_back,\n\t\t\t\tchar_only(\n\t\t\t\t\tchar_range( 0x01, 0x09 ),\n\t\t\t\t\t0x0b, 0x0c,\n\t\t\t\t\tchar_range( 0x0e, 0x7f ),\n\t\t\t\t)\n\t\t\t])\n\t\t\t\n\t\t\tconst name = repeat_greedy({ name_letter, quoted_pair })\n\t\t\tconst quoted_name = from([ '\"', {name}, '\"' ])\n\t\t\t\n\t\t\tconst local_part = from({ dot_atom, quoted_name })\n\t\t\tconst domain = dot_atom\n\t\t\t\n\t\t\tconst mail = from([ begin, local_part, '@', {domain}, end ])\n\t\t\t\n\t\t\t$mol_assert_equal( 'foo..bar@example.org'.match( mail ), null )\n\t\t\t$mol_assert_equal( 'foo..bar\"@example.org'.match( mail ), null )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... 'foo.bar@example.org'.matchAll( mail ) ][0].groups,\n\t\t\t\t{\n\t\t\t\t\tdomain: \"example.org\",\n\t\t\t\t\tdot_atom: \"foo.bar\",\n\t\t\t\t\tname: \"\",\n\t\t\t\t\tname_letter: \"\",\n\t\t\t\t\tquoted_name: \"\",\n\t\t\t\t\tquoted_pair: \"\",\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t[ ... '\"foo..bar\"@example.org'.matchAll( mail ) ][0].groups,\n\t\t\t\t{\n\t\t\t\t\tdot_atom: \"\",\n\t\t\t\t\tquoted_name: '\"foo..bar\"',\n\t\t\t\t\tname: \"foo..bar\",\n\t\t\t\t\tname_letter: \"r\",\n\t\t\t\t\tquoted_pair: \"\",\n\t\t\t\t\tdomain: \"example.org\",\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\tmail.generate({ dot_atom: 'foo.bar', domain: 'example.org' }),\n\t\t\t\t'foo.bar@example.org',\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\tmail.generate({ name: 'foo..bar', domain: 'example.org' }),\n\t\t\t\t'\"foo..bar\"@example.org',\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_fail(\n\t\t\t\t()=> mail.generate({ dot_atom: 'foo..bar', domain: 'example.org' }),\n\t\t\t\t'Wrong param: dot_atom=foo..bar',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t})\n\n}\n","interface String {\n\t\n\tmatch< RE extends RegExp >( regexp: RE ): ReturnType<\n\t\tRE[ typeof Symbol.match ]\n\t>\n\t\n    matchAll< RE extends RegExp >( regexp: RE ): ReturnType<\n\t\tRE[ typeof Symbol.matchAll ]\n\t>\n\t\n}\n\nnamespace $ {\n\t\n\ttype Groups_to_params<T> = {\n\t\t[P in keyof T]?: T[P] | boolean | undefined;\n\t};\t\n\n\texport type $mol_regexp_source =\n\t| number\n\t| string\n\t| RegExp\n\t| { [ key in string ] : $mol_regexp_source }\n\t| readonly[ $mol_regexp_source , ... $mol_regexp_source[] ]\n\n\texport type $mol_regexp_groups< Source extends $mol_regexp_source >\n\t\n\t\t= Source extends number\n\t\t? {}\n\t\t\n\t\t: Source extends string\n\t\t? {}\n\t\t\n\t\t: Source extends $mol_regexp_source[]\n\t\t? $mol_type_merge< $mol_type_intersect< {\n\t\t\t[ key in Extract< keyof Source , number > ] : $mol_regexp_groups< Source[ key ] >\n\t\t}[ Extract< keyof Source , number > ] > >\n\t\t\n\t\t: Source extends RegExp\n\t\t? Record< string, string > extends NonNullable< NonNullable< ReturnType< Source['exec'] > >[ 'groups' ] >\n\t\t\t? {}\n\t\t\t: NonNullable< NonNullable< ReturnType< Source['exec'] > >[ 'groups' ] >\n\t\t\n\t\t: Source extends { readonly [ key in string ] : $mol_regexp_source }\n\t\t? $mol_type_merge< $mol_type_intersect< {\n\t\t\t[ key in keyof Source ] :\n\t\t\t\t$mol_type_merge<\n\t\t\t\t\t& $mol_type_override<\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadonly [ k in Extract< keyof Source , string > ]: string\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadonly [ k in key ]:\n\t\t\t\t\t\t\t\tSource[ key ] extends string\n\t\t\t\t\t\t\t\t\t? Source[ key ]\n\t\t\t\t\t\t\t\t\t: string\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t& $mol_regexp_groups< Source[ key ] >\n\t\t\t\t>\n\t\t}[ keyof Source ] > >\n\n\t\t: never\n\t\t\n\t/** Type safe reguar expression builder */\n\texport class $mol_regexp< Groups extends Record< string , string > > extends RegExp {\n\t\t\n\t\t/** Prefer to use $mol_regexp.from */\n\t\tconstructor( source : string , flags : string = 'gsu' , readonly groups : ( Extract< keyof Groups , string > )[] = [] ) {\n\t\t\tsuper( source , flags )\n\t\t}\n\t\t\n\t\t*[Symbol.matchAll] (str:string): IterableIterator< $mol_type_override< RegExpExecArray, { groups?: { [ key in keyof Groups ] : string } } > > {\n\t\t\tconst index = this.lastIndex\n\t\t\tthis.lastIndex = 0\n\t\t\ttry {\n\t\t\t\twhile ( this.lastIndex < str.length ) {\n\t\t\t\t\tconst found = this.exec(str)\n\t\t\t\t\tif( !found ) break\n\t\t\t\t\tyield found\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.lastIndex = index\n\t\t\t}\n\t\t}\n\t\t\n\t\t/** Parses input and returns found capture groups or null */\n\t\t[ Symbol.match ]( str : string ): null | string[] {\n\t\t\tconst res = [ ... this[Symbol.matchAll]( str ) ].filter( r => r.groups ).map( r => r[0] )\n\t\t\tif( !res.length ) return null\n\t\t\treturn res\n\t\t}\n\t\t\n\t\t/** Splits string by regexp edges */\n\t\t[ Symbol.split ]( str : string ): string[] {\n\t\t\t\n\t\t\tconst res = [] as string[]\n\t\t\tlet token_last = null\n\t\t\t\n\t\t\tfor( let token of this[Symbol.matchAll]( str ) ) {\n\t\t\t\tif( token.groups && ( token_last ? token_last.groups : true ) ) res.push( '' )\n\t\t\t\tres.push( token[0] )\n\t\t\t\ttoken_last = token\n\t\t\t}\n\t\t\t\n\t\t\tif( !res.length ) res.push( '' )\n\t\t\t\n\t\t\treturn res\n\t\t}\n\t\t\n\t\ttest( str : string ): boolean {\n\t\t\treturn Boolean( str.match( this) )\n\t\t}\n\t\t\n\t\texec( str : string ): $mol_type_override< RegExpExecArray , { groups?: { [ key in keyof Groups ] : string } } > | null {\n\t\t\t\n\t\t\tconst from = this.lastIndex\n\t\t\tif( from >= str.length ) return null\n\t\t\t\n\t\t\tconst res = super.exec( str )\n\t\t\tif( res === null ) {\n\t\t\t\tthis.lastIndex = str.length\n\t\t\t\tif( !str ) return null\n\t\t\t\treturn Object.assign( [ str.slice( from ) ], {\n\t\t\t\t\tindex: from,\n\t\t\t\t\tinput: str,\n\t\t\t\t} )\n\t\t\t}\n\n\t\t\tif( from === this.lastIndex ) {\n\t\t\t\t$mol_fail( new Error( 'Captured empty substring' ) )\n\t\t\t}\n\n\t\t\ttype Token = { [ key in keyof Groups ] : string } & { [ key : number ] : string }\n\t\t\tconst groups = {} as Token\n\t\t\t\n\t\t\tconst skipped = str.slice( from , this.lastIndex - res[0].length )\n\t\t\tif( skipped ) {\n\t\t\t\tthis.lastIndex = this.lastIndex - res[0].length\n\t\t\t\treturn Object.assign( [ skipped ], {\n\t\t\t\t\tindex: from,\n\t\t\t\t\tinput: res.input,\n\t\t\t\t} )\n\t\t\t}\n\t\t\t\n\t\t\tfor( let i = 0 ; i < this.groups.length ; ++i ) {\n\t\t\t\tconst group = this.groups[ i ]\n\t\t\t\tgroups[ group ] = groups[ group ] || res[ i + 1 ] || '' as any\n\t\t\t}\n\n\t\t\treturn Object.assign( res, { groups } )\n\t\t}\n\t\t\n\t\tgenerate(\n\t\t\tparams: Groups_to_params< Groups >\n\t\t): string | null {\n\t\t\treturn null\n\t\t}\n\n\t\t/** Makes regexp that non-greedy repeats this pattern from min to max count */\n\t\tstatic repeat<\n\t\t\tSource extends $mol_regexp_source\n\t\t>(\n\t\t\tsource : Source ,\n\t\t\tmin = 0 ,\n\t\t\tmax = Number.POSITIVE_INFINITY ,\n\t\t) : $mol_regexp< $mol_regexp_groups< Source > > {\n\t\n\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\tconst upper = Number.isFinite( max ) ? max : ''\n\t\t\t\n\t\t\tconst str = `(?:${ regexp.source }){${ min },${ upper }}?`\n\t\t\tconst regexp2 =  new $mol_regexp( str , regexp.flags , regexp.groups )\n\t\t\t\n\t\t\tregexp2.generate = params => {\n\t\t\t\tconst res = regexp.generate( params )\n\t\t\t\tif( res ) return res\n\t\t\t\tif( min > 0 ) return res\n\t\t\t\treturn ''\n\t\t\t}\n\t\n\t\t\treturn regexp2\n\t\n\t\t}\n\n\t\t/** Makes regexp that greedy repeats this pattern from min to max count */\n\t\tstatic repeat_greedy<\n\t\t\tSource extends $mol_regexp_source\n\t\t>(\n\t\t\tsource : Source ,\n\t\t\tmin = 0 ,\n\t\t\tmax = Number.POSITIVE_INFINITY ,\n\t\t) : $mol_regexp< $mol_regexp_groups< Source > > {\n\t\n\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\tconst upper = Number.isFinite( max ) ? max : ''\n\t\t\t\n\t\t\tconst str = `(?:${ regexp.source }){${ min },${ upper }}`\n\t\t\tconst regexp2 =  new $mol_regexp( str , regexp.flags , regexp.groups )\n\t\t\t\n\t\t\tregexp2.generate = params => {\n\t\t\t\tconst res = regexp.generate( params )\n\t\t\t\tif( res ) return res\n\t\t\t\tif( min > 0 ) return res\n\t\t\t\treturn ''\n\t\t\t}\n\t\n\t\t\treturn regexp2\n\t\t}\n\n\t\t/** Makes regexp that match any of options */\n\t\tstatic vary<\n\t\t\tSources extends readonly $mol_regexp_source[]\n\t\t>(\n\t\t\tsources : Sources ,\n\t\t) {\n\t\t\t\n\t\t\tconst groups = [] as string[]\n\t\t\t\n\t\t\tconst chunks = sources.map( source => {\n\n\t\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\t\tgroups.push( ... regexp.groups )\n\t\t\t\t\n\t\t\t\treturn regexp.source\n\n\t\t\t} ) as any as readonly[ $mol_regexp_source , ... $mol_regexp_source[] ]\n\t\t\t\n\t\t\treturn new $mol_regexp< $mol_regexp_groups< Sources[number] > >(\n\t\t\t\t`(?:${ chunks.join('|') })` ,\n\t\t\t\t'' ,\n\t\t\t\tgroups as any[] ,\n\t\t\t)\n\t\t\t\n\t\t}\n\n\t\t/** Makes regexp that allow absent of this pattern */\n\t\tstatic optional<\n\t\t\tSource extends $mol_regexp_source\n\t\t>( source : Source ) {\n\t\t\treturn $mol_regexp.repeat_greedy( source , 0 , 1 )\n\t\t}\n\n\t\t/** Makes regexp that look ahead for pattern */\n\t\tstatic force_after( source : $mol_regexp_source ) {\n\n\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\t\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`(?=${ regexp.source })` ,\n\t\t\t\tregexp.flags ,\n\t\t\t\tregexp.groups ,\n\t\t\t)\n\n\t\t}\n\n\t\t/** Makes regexp that look ahead for pattern */\n\t\tstatic forbid_after( source : $mol_regexp_source ) {\n\n\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\t\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`(?!${ regexp.source })` ,\n\t\t\t\tregexp.flags ,\n\t\t\t\tregexp.groups ,\n\t\t\t)\n\n\t\t}\n\n\t\t/** Converts some js values to regexp */\n\t\tstatic from<\n\t\t\tSource extends $mol_regexp_source\n\t\t>(\n\t\t\tsource : Source ,\n\t\t\t{ ignoreCase , multiline } : Partial< Pick< RegExp , 'ignoreCase' | 'multiline' > > = {\n\t\t\t\tignoreCase : false ,\n\t\t\t\tmultiline : false ,\n\t\t\t} ,\n\t\t) : $mol_regexp< $mol_regexp_groups< Source > > {\n\n\t\t\tlet flags = 'gsu'\n\t\t\tif( multiline ) flags += 'm'\n\t\t\tif( ignoreCase ) flags += 'i'\n\n\t\t\tif( typeof source === 'number' ) {\n\n\t\t\t\tconst src = `\\\\u{${ source.toString(16) }}`\n\t\t\t\tconst regexp = new $mol_regexp< $mol_regexp_groups< Source > >( src , flags )\n\t\t\t\tregexp.generate = ()=> src\n\t\t\t\treturn regexp\n\n\t\t\t} if( typeof source === 'string' ) {\n\n\t\t\t\tconst src = source.replace( /[.*+?^${}()|[\\]\\\\]/g , '\\\\$&' ) \n\t\t\t\tconst regexp = new $mol_regexp< $mol_regexp_groups< Source > >( src , flags )\n\t\t\t\tregexp.generate = ()=> source\n\t\t\t\treturn regexp\n\n\t\t\t} else if( source instanceof $mol_regexp ) {\n\t\t\t\t\n\t\t\t\tconst regexp =  new $mol_regexp<any>( source.source, flags, source.groups )\n\t\t\t\tregexp.generate = params => source.generate( params )\n\t\t\t\treturn regexp\n\t\t\t\t\n\t\t\t} if( source instanceof RegExp ) {\n\n\n\t\t\t\tconst test = new RegExp( '|' + source.source )\n\t\t\t\tconst groups = Array.from(\n\t\t\t\t\t{ length : test.exec('')!.length - 1 } ,\n\t\t\t\t\t( _ , i )=> String( i + 1 ) ,\n\t\t\t\t)\n\n\t\t\t\tconst regexp = new $mol_regexp< $mol_regexp_groups< Source > >(\n\t\t\t\t\tsource.source ,\n\t\t\t\t\tsource.flags ,\n\t\t\t\t\tgroups as any ,\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tregexp.generate = ()=> ''\n\n\t\t\t\treturn regexp\n\n\t\t\t} if( Array.isArray( source ) ) {\n\n\t\t\t\tconst patterns = source.map( src => Array.isArray( src )\n\t\t\t\t\t? $mol_regexp.optional( src as any )\n\t\t\t\t\t: $mol_regexp.from( src )\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tconst chunks = patterns.map( pattern => pattern.source )\n\t\t\t\t\n\t\t\t\tconst groups = [] as ( Extract< keyof $mol_regexp_groups< Source > , string > )[]\n\n\t\t\t\tlet index = 0\n\t\t\n\t\t\t\tfor( const pattern of patterns ) {\n\t\t\t\t\t\n\t\t\t\t\tfor( let group of pattern.groups ) {\n\t\t\t\t\t\tif( Number( group ) >= 0 ) {\n\t\t\t\t\t\t\tgroups.push( String( index ++ ) as any )\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgroups.push( group )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst regexp = new $mol_regexp( chunks.join( '' ) , flags , groups )\n\t\t\t\t\n\t\t\t\tregexp.generate = params => {\n\t\t\t\t\tlet res = ''\n\t\t\t\t\tfor( const pattern of patterns ) {\n\t\t\t\t\t\tlet sub = pattern.generate( params )\n\t\t\t\t\t\tif( sub === null ) return ''\n\t\t\t\t\t\tres += sub\n\t\t\t\t\t}\n\t\t\t\t\treturn res\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn regexp\n\t\t\n\t\t\t} else {\n\n\t\t\t\tconst groups = [] as string[]\n\n\t\t\t\tconst chunks = Object.keys( source ).map( name => {\n\n\t\t\t\t\tgroups.push( name )\n\n\t\t\t\t\tconst regexp = $mol_regexp.from( source[ name ] )\n\t\t\t\t\tgroups.push( ... regexp.groups )\n\t\t\t\t\t\n\t\t\t\t\treturn `(${regexp.source})`\n\n\t\t\t\t} ) as any as readonly[ $mol_regexp_source , ... $mol_regexp_source[] ]\n\n\t\t\t\tconst regexp = new $mol_regexp< $mol_regexp_groups< Source > >(\n\t\t\t\t\t`(?:${ chunks.join('|') })` ,\n\t\t\t\t\tflags ,\n\t\t\t\t\tgroups as any[] ,\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tconst validator = new RegExp( '^' + regexp.source + '$', flags )\n\t\t\t\tregexp.generate = params => {\n\t\t\t\t\t\n\t\t\t\t\tfor( let option in source ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( option in params ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( typeof params[ option as any ] === 'boolean' ) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( !params[ option as any ] ) continue\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst str = String( params[ option as any ] )\n\t\t\t\t\t\t\t\tif( str.match( validator ) ) return str\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$mol_fail( new Error( `Wrong param: ${option}=${str}` ) )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif( typeof source[ option as any ] !== 'object' ) continue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst res = $mol_regexp.from( source[ option as any ] ).generate( params )\n\t\t\t\t\t\tif( res ) return res\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn regexp\n\n\t\t\t}\n\t\n\t\t}\n\n\t\t/** Makes regexp which includes only unicode category */\n\t\tstatic unicode_only( ... category: $mol_unicode_category ) {\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`\\\\p{${ category.join( '=' ) }}`\n\t\t\t)\n\t\t}\n\n\t\t/** Makes regexp which excludes unicode category */\n\t\tstatic unicode_except( ... category: $mol_unicode_category ) {\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`\\\\P{${ category.join( '=' ) }}`\n\t\t\t)\n\t\t}\n\n\t\tstatic char_range(\n\t\t\tfrom: number,\n\t\t\tto: number,\n\t\t): $mol_regexp<{}> {\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`${ $mol_regexp.from( from ).source }-${ $mol_regexp.from( to ).source }`\n\t\t\t)\n\t\t}\n\n\t\tstatic char_only(\n\t\t\t... allowed: readonly [ $mol_regexp_source, ... $mol_regexp_source[] ]\n\t\t): $mol_regexp<{}> {\n\t\t\tconst regexp = allowed.map( f => $mol_regexp.from( f ).source ).join('')\n\t\t\treturn new $mol_regexp( `[${ regexp }]` )\n\t\t}\n\n\t\tstatic char_except(\n\t\t\t... forbidden: readonly [ $mol_regexp_source, ... $mol_regexp_source[] ]\n\t\t): $mol_regexp<{}> {\n\t\t\tconst regexp = forbidden.map( f => $mol_regexp.from( f ).source ).join('')\n\t\t\treturn new $mol_regexp( `[^${ regexp }]` )\n\t\t}\n\t\t\n\t\tstatic decimal_only = $mol_regexp.from( /\\d/gsu )\n\t\tstatic decimal_except = $mol_regexp.from( /\\D/gsu )\n\t\t\n\t\tstatic latin_only = $mol_regexp.from( /\\w/gsu )\n\t\tstatic latin_except = $mol_regexp.from( /\\W/gsu )\n\t\t\n\t\tstatic space_only = $mol_regexp.from( /\\s/gsu )\n\t\tstatic space_except = $mol_regexp.from( /\\S/gsu )\n\t\t\n\t\tstatic word_break_only = $mol_regexp.from( /\\b/gsu )\n\t\tstatic word_break_except = $mol_regexp.from( /\\B/gsu )\n\t\t\n\t\tstatic tab = $mol_regexp.from( /\\t/gsu )\n\t\tstatic slash_back = $mol_regexp.from( /\\\\/gsu )\n\t\tstatic nul = $mol_regexp.from( /\\0/gsu )\n\t\t\n\t\tstatic char_any = $mol_regexp.from( /./gsu )\n\t\tstatic begin = $mol_regexp.from( /^/gsu )\n\t\tstatic end = $mol_regexp.from( /$/gsu )\n\t\tstatic or = $mol_regexp.from( /|/gsu )\n\t\t\n\t\tstatic line_end = $mol_regexp.from({\n\t\t\twin_end: [ [ '\\r' ], '\\n' ],\n\t\t\tmac_end: '\\r',\n\t\t})\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'empty string'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t''.match( $hyoo_crowd_tokenizer ),\n\t\t\t\tnull,\n\t\t\t)\n\t\t},\n\t\t\n\t\t'new lines'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'\\n\\r\\n'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ '\\n', '\\r\\n' ],\n\t\t\t)\n\t\t},\n\t\t\n\t\t'numbers'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'123'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ '123' ],\n\t\t\t)\n\t\t},\n\t\t\n\t\t'emoji'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'😀😁'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ '😀', '😁' ],\n\t\t\t)\n\t\t},\n\t\t\n\t\t'emoji with modifier'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'👩🏿👩🏿'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ '👩🏿', '👩🏿' ],\n\t\t\t)\n\t\t},\n\t\t\n\t\t'combo emoji with modifier'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'👩🏿‍🤝‍🧑🏿👩🏿‍🤝‍🧑🏿'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ '👩🏿‍🤝‍🧑🏿', '👩🏿‍🤝‍🧑🏿' ],\n\t\t\t)\n\t\t},\n\t\t\n\t\t'word with spaces'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'foo1  bar2'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ 'foo1', ' ', ' bar2' ],\n\t\t\t)\n\t\t},\n\t\t\n\t\t'word with diactric'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'Е́е́'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ 'Е́е́' ],\n\t\t\t)\n\t\t},\n\t\t\n\t\t'word with punctuation'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'foo--bar'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ 'foo', '--', 'bar' ],\n\t\t\t)\n\t\t},\n\t\t\n\t\t'CamelCase'() {\n\t\t\t$mol_assert_like(\n\t\t\t\t'Foo1BAR2'.match( $hyoo_crowd_tokenizer ),\n\t\t\t\t[ 'Foo1', 'BAR2' ],\n\t\t\t)\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t\n\tconst { unicode_only, line_end, tab, repeat_greedy, optional, forbid_after, char_only, char_except } = $mol_regexp \n\t\n\texport let $hyoo_crowd_tokenizer = $mol_regexp.from({\n\t\ttoken: {\n\t\t\t\n\t\t\t'line-break': line_end ,\n\t\t\t\n\t\t\t'indents': repeat_greedy( tab, 1 ),\n\t\t\t\n\t\t\t'emoji': [\n\t\t\t\t\n\t\t\t\tunicode_only( 'Extended_Pictographic' ),\n\t\t\t\toptional( unicode_only( 'Emoji_Modifier' ) ),\n\t\t\t\t\n\t\t\t\trepeat_greedy([\n\t\t\t\t\t\n\t\t\t\t\tunicode_only( 'Emoji_Component' ),\n\t\t\t\t\t\n\t\t\t\t\tunicode_only( 'Extended_Pictographic' ),\n\t\t\t\t\toptional( unicode_only( 'Emoji_Modifier' ) ),\n\t\t\t\t\t\n\t\t\t\t]),\n\t\t\t\t\n\t\t\t],\n\t\t\t\n\t\t\t'Word': [\n\t\t\t\t\n\t\t\t\t[\n\t\t\t\t\tforbid_after( line_end ),\n\t\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\t],\n\t\t\t\t\n\t\t\t\trepeat_greedy( char_only([\n\t\t\t\t\tunicode_only( 'General_Category', 'Uppercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t]), 1 ),\n\t\t\t\t\n\t\t\t\trepeat_greedy( char_only([\n\t\t\t\t\tunicode_only( 'General_Category', 'Lowercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t]) ),\n\t\t\t\t\n\t\t\t],\n\t\t\t\n\t\t\t'word': [\n\t\t\t\t[\n\t\t\t\t\tforbid_after( line_end ),\n\t\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\t],\n\t\t\t\trepeat_greedy( char_only([\n\t\t\t\t\tunicode_only( 'General_Category', 'Lowercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t]), 1 ),\n\t\t\t],\n\t\t\t\n\t\t\t'space': [\n\t\t\t\tforbid_after( line_end ),\n\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\tforbid_after([\n\t\t\t\t\tunicode_only( 'General_Category', 'Uppercase_Letter' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Lowercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t]),\n\t\t\t],\n\t\t\t\n\t\t\t'others': [\n\t\t\t\t\n\t\t\t\trepeat_greedy( char_except([\n\t\t\t\t\tunicode_only( 'General_Category', 'Uppercase_Letter' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Lowercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\t]), 1 ),\n\t\t\t\t\n\t\t\t],\n\t\t\t\n\t\t},\n\t} )\n\n}\n","namespace $ {\n\texport class $hyoo_crowd_text extends $hyoo_crowd_node {\n\t\t\n\t\t/** Text representation. Based on list of strings. */\n\t\ttext( next?: string ) {\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\treturn this.as( $hyoo_crowd_list ).list().filter( item => typeof item === 'string' ).join( '' )\n\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.write( next, 0, -1 )\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twrite(\n\t\t\tnext: string,\n\t\t\tstr_from = -1,\n\t\t\tstr_to = str_from,\n\t\t) {\n\t\t\t\n\t\t\tconst list = this.units()\n\t\t\t\n\t\t\tlet from = str_from < 0 ? list.length : 0\n\t\t\tlet word = ''\n\t\t\t\n\t\t\twhile( from < list.length ) {\n\t\t\t\t\n\t\t\t\tword = String( list[ from ].data )\n\t\t\t\t\n\t\t\t\tif( str_from <= word.length ) {\n\t\t\t\t\tnext = word.slice( 0, str_from ) + next\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstr_from -= word.length\n\t\t\t\tif( str_to > 0 ) str_to -= word.length\n\t\t\t\t\n\t\t\t\tfrom ++\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlet to = str_to < 0 ? list.length : from\n\t\t\t\n\t\t\twhile( to < list.length ) {\n\t\t\t\t\n\t\t\t\tword = String( list[ to ].data )\n\t\t\t\tto ++\n\t\t\t\t\n\t\t\t\tif( str_to < word.length ) {\n\t\t\t\t\tnext = next + word.slice( str_to )\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstr_to -= word.length\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif( from && from === list.length ) {\n\t\t\t\t-- from\n\t\t\t\tnext = String( list[ from ].data ) + next\n\t\t\t}\n\t\t\t\n\t\t\tconst words = [ ... next.matchAll( $hyoo_crowd_tokenizer ) ].map( token => token[0] )\n\t\t\tthis.as( $hyoo_crowd_list ).insert( words, from, to )\n\t\t\t\n\t\t\treturn this\n\t\t}\n\n\t\tpoint_by_offset( offset: number ) {\n\t\t\t\n\t\t\tlet off = offset\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\t\n\t\t\t\tconst len = String( unit.data ).length\n\t\t\t\t\n\t\t\t\tif( off < len ) return { self: unit.self(), offset: off }\n\t\t\t\telse off -= len\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn { self: this.head, offset: offset }\n\t\t}\n\t\t\n\t\toffset_by_point( point: { self: $mol_int62_pair, offset: number } ) {\n\t\t\t\n\t\t\tlet offset = 0\n\t\t\t\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\t\n\t\t\t\tif( unit.self_lo === point.self.lo && unit.self_hi === point.self.hi ) {\n\t\t\t\t\treturn offset + point.offset\n\t\t\t\t} else {\n\t\t\t\t\toffset += String( unit.data ).length\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn offset\n\t\t}\n\t\t\n\t\tselection( peer: $mol_int62_pair, next?: number[] ) {\n\t\t\t\n\t\t\tconst reg = this.land.world().land_sync( peer ).chief.sub( '$hyoo_crowd_text..selection', $hyoo_crowd_reg )\n\t\t\t\n\t\t\tif( next ) {\n\t\t\t\treg.value( next.map( offset => this.point_by_offset( offset ) ) )\n\t\t\t\treturn next\n\t\t\t} else {\n\t\t\t\treturn ( reg.value() as { self: $mol_int62_pair, offset: number }[] )\n\t\t\t\t\t?.map( point => this.offset_by_point( point ) ) ?? [ 0, 0 ]\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'run callback' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\t$mol_assert_equal( Plus1.run( ()=> 2 ) , 3 )\n\n\t\t} ,\n\n\t\t'wrap function' () {\n\t\t\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tconst obj = {\n\t\t\t\tlevel : 2 ,\n\t\t\t\tpow : Plus1.func( function( this : { level : number } , a ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t} )\n\t\t\t}\n\n\t\t\t$mol_assert_equal( obj.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate field getter' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\n\t\t\t\tstatic last = 0\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn Plus1.last = ( task.call( this , ... args ) || 0 ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo {\n\n\t\t\t\t@ Plus1.field\n\t\t\t\tstatic get two() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\tstatic set two( next : number ) {}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\t\t\t\n\t\t\tFoo.two = 3\n\t\t\t$mol_assert_equal( Plus1.last , 2 )\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\n\t\t} ,\n\n\t\t'decorate instance method' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo1 {\n\n\t\t\t\tlevel = 2\n\n\t\t\t\t@ Plus1.method\n\t\t\t\tpow( a : number ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst Foo2 = Foo1\n\t\t\tconst foo = new Foo2\n\n\t\t\t$mol_assert_equal( foo.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate static method' () {\n\t\t\t\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo {\n\n\t\t\t\tstatic level = 2\n\n\t\t\t\t@ Plus1.method\n\t\t\t\tstatic pow( a : number ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( Foo.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate class' () {\n\t\t\t\n\t\t\tclass BarInc extends $mol_wrapper {\n\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> Foo ) {\n\t\t\t\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\n\t\t\t\t\t\tconst foo = task.call( this , ...args )\n\t\t\t\t\t\tfoo.bar ++\n\t\t\t\t\t\treturn foo\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t@ BarInc.class\n\t\t\tclass Foo {\n\t\t\t\tconstructor( public bar : number ) {}\n\t\t\t}\n\n\t\t\t$mol_assert_equal( new Foo( 2 ).bar , 3 )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'memoize field' () {\n\n\t\t\tclass Foo {\n\n\t\t\t\tstatic one = 1\n\n\t\t\t\t@ $mol_memo.field\n\t\t\t\tstatic get two() {\n\t\t\t\t\treturn ++ this.one\n\t\t\t\t}\n\t\t\t\tstatic set two( next : number ) {} \n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\n\t\t\tFoo.two = 3\n\t\t\t\n\t\t\t$mol_assert_equal( Foo.two , 3 )\n\t\t\t$mol_assert_equal( Foo.two , 3 )\n\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\t\n\tasync function make_land( id = { lo: -1, hi: -11 } ) {\n\t\treturn $hyoo_crowd_land.make({\n\t\t\tid: $mol_const( id ),\n\t\t\tpeer: $mol_const( await $hyoo_crowd_peer.generate() ),\n\t\t})\n\t}\n\t\n\t$mol_test({\n\t\t\n\t\tasync 'Default state'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).value(), null )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).bool(), false )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).numb(), 0 )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).str(), '' )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [] )\n\t\t\t$mol_assert_like( store.delta(), [] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Serial changes'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tObject.assign( store.peer(), { key_public_serial: null } )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).value(), null )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [] )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).bool(), false )\n\t\t\tstore.chief.as( $hyoo_crowd_reg ).bool( true )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).value(), true )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ true ] )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).numb(), 1 )\n\t\t\tstore.chief.as( $hyoo_crowd_reg ).numb( 1 )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).value(), 1 )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 1 ] )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).str(), '1' )\n\t\t\tstore.chief.as( $hyoo_crowd_reg ).str( 'x' )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).value(), 'x' )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'x' ] )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_reg ).value( null )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).value(), null )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [] )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.delta().map( unit => unit.data ),\n\t\t\t\t[ null ]\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Name spaces'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t\n\t\t\tstore.chief.sub( 'foo', $hyoo_crowd_struct ).sub( 'bar', $hyoo_crowd_reg ).numb( 111 )\n\t\t\tstore.chief.sub( 'foo', $hyoo_crowd_struct ).sub( 'ton', $hyoo_crowd_reg ).numb( 222 )\n\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [] )\n\t\t\t$mol_assert_like( store.chief.sub( 'foo', $hyoo_crowd_list ).list(), [] )\n\t\t\t$mol_assert_like( store.chief.sub( 'foo', $hyoo_crowd_struct ).sub( 'bar', $hyoo_crowd_list ).list(), [ 111 ] )\n\t\t\t$mol_assert_like( store.chief.sub( 'foo', $hyoo_crowd_struct ).sub( 'ton', $hyoo_crowd_list ).list(), [ 222 ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Name spaces merging'() {\n\t\t\t\n\t\t\tconst left = await make_land()\n\t\t\tleft.chief.sub( 'foo', $hyoo_crowd_list ).list([ 111 ])\n\t\t\t\n\t\t\tconst right = await make_land({ lo: 2, hi: 22 })\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.chief.sub( 'foo', $hyoo_crowd_list ).list([ 222 ])\n\t\t\t\n\t\t\tconst left_delta = left.delta()\n\t\t\tconst right_delta = right.delta()\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.sub( 'foo', $hyoo_crowd_list ).list(),\n\t\t\t\tright.chief.sub( 'foo', $hyoo_crowd_list ).list(),\n\t\t\t\t[ 222, 111 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Ignore same changes'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_reg ).str( 'foo' )\n\t\t\tconst time = store.clock_data.last_time\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_reg ).str( 'foo' )\n\t\t\tstore.chief.as( $hyoo_crowd_list ).list( [ 'foo' ] )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.delta().map( unit => unit.time ),\n\t\t\t\t[ time, time ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Serial insert values'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_list ).insert([ 'foo' ])\n\t\t\tstore.chief.as( $hyoo_crowd_list ).insert([ 'bar' ])\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'foo', 'bar' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Concurent insert values'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_list ).insert( [ 'foo' ], 0 )\n\t\t\tstore.chief.as( $hyoo_crowd_list ).insert( [ 'bar' ], 0 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'bar', 'foo' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert value between others'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_list ).insert([ 'foo' ])\n\t\t\tstore.chief.as( $hyoo_crowd_list ).insert([ 'bar' ])\n\t\t\tstore.chief.as( $hyoo_crowd_list ).insert( [ 'lol' ], 1 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'foo', 'lol', 'bar' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert value inside other'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_list ).insert([ 'foo' ])\n\t\t\tstore.chief.nodes( $hyoo_crowd_list )[0].insert([ 'bar' ])\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'foo' ] )\n\t\t\t$mol_assert_like( store.chief.nodes( $hyoo_crowd_list )[0].list(), [ 'bar' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert before removed before changed'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tconst node = store.chief.as( $hyoo_crowd_list )\n\t\t\t\n\t\t\tnode.list([ 'foo', 'bar' ])\n\t\t\tnode.list([ 'xxx', 'foo', 'bar' ])\n\t\t\tnode.list([ 'xxx', 'bars' ])\n\t\t\t\n\t\t\t$mol_assert_like( node.list(), [ 'xxx', 'bars' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Move existen Unit'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'FooBarLol' )\n\t\t\tstore.chief.as( $hyoo_crowd_list ).move( 0, 2 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_text ).text(), 'BarFooLol' )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Deltas for different versions'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tObject.assign( store.peer(), { key_public_serial: null } )\n\t\t\t\n\t\t\tstore.clock_data.see_time( store.clock_data.now() + 60 )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_list ).list( [ 'foo', 'bar', 'lol' ] )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.delta([\n\t\t\t\t\tnew $hyoo_crowd_clock,\n\t\t\t\t\tnew $hyoo_crowd_clock([\n\t\t\t\t\t\t[ store.peer().id, store.clock_data.last_time - 3 ],\n\t\t\t\t\t])\n\t\t\t\t]).map( unit => unit.data ),\n\t\t\t\t[ 'foo', 'bar', 'lol' ],\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.delta([\n\t\t\t\t\tnew $hyoo_crowd_clock,\n\t\t\t\t\tnew $hyoo_crowd_clock([\n\t\t\t\t\t\t[ store.peer().id, store.clock_data.last_time - 2 ],\n\t\t\t\t\t])\n\t\t\t\t]).map( unit => unit.data ),\n\t\t\t\t[ 'bar', 'lol' ],\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.delta([\n\t\t\t\t\tnew $hyoo_crowd_clock,\n\t\t\t\t\tnew $hyoo_crowd_clock([\n\t\t\t\t\t\t[ store.peer().id, store.clock_data.last_time - 1 ],\n\t\t\t\t\t])\n\t\t\t\t]).map( unit => unit.data ),\n\t\t\t\t[ 'lol' ],\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.delta([\n\t\t\t\t\tnew $hyoo_crowd_clock,\n\t\t\t\t\tnew $hyoo_crowd_clock([\n\t\t\t\t\t\t[ store.peer().id, store.clock_data.last_time ],\n\t\t\t\t\t])\n\t\t\t\t]),\n\t\t\t\t[],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Delete with subtree and ignore inserted into deleted'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foo' )\n\t\t\t\n\t\t\tconst b2 = store.chief.nodes( $hyoo_crowd_text )[0]\n\t\t\tb2.text( 'bar' )\n\t\t\t\n\t\t\tconst b3 = b2.nodes( $hyoo_crowd_text )[0]\n\t\t\tb3.text( 'lol' )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).value(), 'foo' )\n\t\t\t$mol_assert_like( b2.as( $hyoo_crowd_reg ).value(), 'bar' )\n\t\t\t$mol_assert_like( b3.as( $hyoo_crowd_reg ).value(), 'lol' )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_list ).cut( 0 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_reg ).value(), null )\n\t\t\t$mol_assert_like( b2.as( $hyoo_crowd_reg ).value(), null )\n\t\t\t$mol_assert_like( b3.as( $hyoo_crowd_reg ).value(), null )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Put/get list'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [] )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_list ).list( [ 'foo', 'bar', 'foo' ] )\n\t\t\tconst first = store.chief.nodes( $hyoo_crowd_list )[0]\n\t\t\tfirst.list( [  'bar', 'foo', 'bar' ] )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'foo', 'bar', 'foo' ] )\n\t\t\t$mol_assert_like( first.list(), [ 'bar', 'foo', 'bar' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Put/get text'() {\n\t\t\t\n\t\t\tconst store1 = await make_land()\n\t\t\t\n\t\t\tstore1.chief.as( $hyoo_crowd_text ).text( 'foo bar foo' )\n\t\t\t$mol_assert_like( store1.chief.as( $hyoo_crowd_text ).text(), 'foo bar foo' )\n\t\t\t$mol_assert_like( store1.chief.as( $hyoo_crowd_list ).list(), [ 'foo', ' bar', ' foo' ] )\n\t\t\t\n\t\t\tconst store2 = store1.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tstore2.chief.as( $hyoo_crowd_text ).text( 'barFFFoo  bar' )\n\t\t\t$mol_assert_like( store2.chief.as( $hyoo_crowd_text ).text(), 'barFFFoo  bar' )\n\t\t\t$mol_assert_like( store2.chief.as( $hyoo_crowd_list ).list(), [ 'bar', 'FFFoo', ' ', ' bar' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Text modifications'() {\n\t\t\t\n\t\t\tconst store1 = await make_land()\n\t\t\tstore1.chief.as( $hyoo_crowd_text ).text( 'foo bar' )\n\t\t\t\n\t\t\tconst store2 = store1.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tstore2.chief.as( $hyoo_crowd_text ).text( 'foo  bar' )\n\t\t\t$mol_assert_like(\n\t\t\t\tstore1.chief.units().map( unit => unit.self ),\n\t\t\t\t[\n\t\t\t\t\tstore2.chief.units()[0].self,\n\t\t\t\t\tstore2.chief.units()[2].self,\n\t\t\t\t],\n\t\t\t)\n\t\t\t\n\t\t\tconst store3 = store2.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tstore3.chief.as( $hyoo_crowd_text ).text( 'foo ton bar' )\n\t\t\t$mol_assert_like(\n\t\t\t\tstore2.chief.units().map( unit => unit.self ),\n\t\t\t\t[\n\t\t\t\t\tstore3.chief.units()[0].self,\n\t\t\t\t\tstore3.chief.units()[1].self,\n\t\t\t\t\tstore3.chief.units()[2].self,\n\t\t\t\t],\n\t\t\t)\n\t\t\t\n\t\t\tconst store4 = store3.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tstore4.chief.as( $hyoo_crowd_text ).text( 'foo bar' )\n\t\t\t$mol_assert_like(\n\t\t\t\t[\n\t\t\t\t\tstore3.chief.units()[0].self,\n\t\t\t\t\tstore3.chief.units()[2].self,\n\t\t\t\t],\n\t\t\t\tstore4.chief.units().map( unit => unit.self ),\n\t\t\t)\n\t\t\t\n\t\t\tconst store5 = store3.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tstore5.chief.as( $hyoo_crowd_text ).text( 'foo ' )\n\t\t\t$mol_assert_like(\n\t\t\t\t[\n\t\t\t\t\tstore4.chief.units()[0].self,\n\t\t\t\t\tstore4.chief.units()[1].self,\n\t\t\t\t],\n\t\t\t\tstore5.chief.units().map( unit => unit.self ),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Change sequences'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_text ).text(), '' )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foo' )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_text ).text(), 'foo' )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foo bar' )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_text ).text(), 'foo bar' )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foo lol bar' )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_text ).text(), 'foo lol bar' )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'lol bar' )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_text ).text(), 'lol bar' )\n\t\t\t\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foo bar' )\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_text ).text(), 'foo bar' )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Merge different sequences'() {\n\t\t\t\n\t\t\tconst left = await make_land()\n\t\t\tleft.chief.as( $hyoo_crowd_text ).text( 'foo bar.' )\n\t\t\t\n\t\t\tconst right = await make_land({ lo: 2, hi: 22 })\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.chief.as( $hyoo_crowd_text ).text( 'xxx yyy.' )\n\t\t\t\n\t\t\tconst left_delta = left.delta()\n\t\t\tconst right_delta = right.delta()\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\tright.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\t'xxx yyy.foo bar.',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Merge different insertions to same place of same sequence'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\tbase.chief.as( $hyoo_crowd_text ).text( 'foo bar' )\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tleft.chief.as( $hyoo_crowd_text ).text( 'foo xxx bar' )\n\t\t\t\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.chief.as( $hyoo_crowd_text ).text( 'foo yyy bar' )\n\t\t\t\n\t\t\tconst left_delta = left.delta( base.clocks )\n\t\t\tconst right_delta = right.delta( base.clocks )\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\tright.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\t'foo yyy xxx bar',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert after moved'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\tbase.chief.as( $hyoo_crowd_text ).text( 'FooBarZak' )\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tleft.chief.as( $hyoo_crowd_text ).text( 'FooXxxBarZak' )\n\t\t\t\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.insert( right.chief.units()[0], { lo: 0, hi: 0 }, 2 )\n\t\t\t\n\t\t\tconst left_delta = left.delta( base.clocks )\n\t\t\tconst right_delta = right.delta( base.clocks )\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\tright.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\t'XxxBarFooZak',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert before moved left'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\tbase.chief.as( $hyoo_crowd_text ).text( 'fooBarZak' )\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tleft.chief.as( $hyoo_crowd_text ).text( 'FooXxxBarZak' )\n\t\t\t\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.insert( right.chief.units()[1], { lo: 0, hi: 0 }, 0 )\n\t\t\t\n\t\t\tconst left_delta = left.delta( base.clocks )\n\t\t\tconst right_delta = right.delta( base.clocks )\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\tright.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\t'BarFooXxxZak',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert before moved right'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\tbase.chief.as( $hyoo_crowd_text ).text( 'FooBarZak' )\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tleft.chief.as( $hyoo_crowd_text ).text( 'FooXxxBarZak' )\n\t\t\t\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.insert( right.chief.units()[1], { lo: 0, hi: 0 }, 3 )\n\t\t\t\n\t\t\tconst left_delta = left.delta( base.clocks )\n\t\t\tconst right_delta = right.delta( base.clocks )\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\tright.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\t'FooXxxZakBar',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert after removed'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\tbase.chief.as( $hyoo_crowd_text ).text( 'FooBar' )\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tleft.chief.as( $hyoo_crowd_text ).text( 'FooXxxBar' )\n\t\t\t\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.chief.as( $hyoo_crowd_text ).text( 'Bar' )\n\t\t\t\n\t\t\tconst left_delta = left.delta( base.clocks )\n\t\t\tconst right_delta = right.delta( base.clocks )\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\tright.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\t'XxxBar',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert after removed out'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\t$hyoo_crowd_text.for( base, { lo: 1, hi: 11 } ).text( 'FooBarZak' )\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\t$hyoo_crowd_text.for( left, { lo: 1, hi: 11 } ).text( 'FooBarXxxZak' )\n\t\t\t\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.insert( $hyoo_crowd_node.for( right, { lo: 1, hi: 11 } ).units()[1], { lo: 2, hi: 22 }, 0 )\n\t\t\t\n\t\t\tconst left_delta = left.delta( base.clocks )\n\t\t\tconst right_delta = right.delta( base.clocks )\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\t$hyoo_crowd_text.for( left, { lo: 1, hi: 11 } ).text(),\n\t\t\t\t$hyoo_crowd_text.for( right, { lo: 1, hi: 11 } ).text(),\n\t\t\t\t'FooXxxZak',\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t$hyoo_crowd_text.for( left, { lo: 2, hi: 22 } ).text(),\n\t\t\t\t$hyoo_crowd_text.for( right, { lo: 2, hi: 22 } ).text(),\n\t\t\t\t'Bar',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert before changed'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\tbase.chief.as( $hyoo_crowd_text ).text( 'XxxYyyZzz' )\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tleft.chief.as( $hyoo_crowd_text ).text( 'XxxFooYyyZzz' )\n\t\t\t\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.chief.as( $hyoo_crowd_text ).text( 'XxxBarZzz' )\n\t\t\t\n\t\t\tconst left_delta = left.delta( base.clocks )\n\t\t\tconst right_delta = right.delta( base.clocks )\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\tright.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\t'XxxBarFooZzz',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Insert between moved'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\tbase.chief.as( $hyoo_crowd_list ).list([ 111, 222, 333, 444, 555, 666 ])\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tleft.chief.as( $hyoo_crowd_list ).list([ 111, 222, 777, 333, 444, 555, 666 ])\n\t\t\t\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\tright.insert( right.chief.units()[1], { lo: 0, hi: 0 }, 5 )\n\t\t\tright.insert( right.chief.units()[1], { lo: 0, hi: 0 }, 5 )\n\t\t\t\n\t\t\tconst left_delta = left.delta( base.clocks )\n\t\t\tconst right_delta = right.delta( base.clocks )\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\t\n\t\t\t$mol_assert_like(\n\t\t\t\tleft.chief.as( $hyoo_crowd_list ).list(),\n\t\t\t\tright.chief.as( $hyoo_crowd_list ).list(),\n\t\t\t\t[ 111, 444, 555, 222, 333, 777, 666 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Merge text changes'() {\n\t\t\t\n\t\t\tconst base = await make_land()\n\t\t\tbase.chief.as( $hyoo_crowd_text ).text( 'Hello World and fun!' )\n\t\t\t\n\t\t\tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t\tright.clock_data.tick( right.peer().id )\n\t\t\t\n\t\t\tleft.chief.as( $hyoo_crowd_text ).text( 'Hello Alice and fun!' )\n\t\t\tright.chief.as( $hyoo_crowd_text ).text( 'Bye World and fun!' )\n\t\t\t\n\t\t\tconst left_delta = left.delta()\n\t\t\tconst right_delta = right.delta()\n\t\t\t\n\t\t\tleft.apply( right_delta )\n\t\t\tright.apply( left_delta )\n\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\tright.chief.as( $hyoo_crowd_text ).text(),\n\t\t\t\t'Bye Alice and fun!',\n\t\t\t)\n\n\t\t},\n\t\t\n\t\tasync 'Write into token'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foobar' )\n\t\t\tstore.chief.as( $hyoo_crowd_text ).write( 'xyz', 3 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'fooxyzbar' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Write into token with split'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foobar' )\n\t\t\tstore.chief.as( $hyoo_crowd_text ).write( 'XYZ', 2, 4 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'fo', 'XYZar' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Write over few tokens'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'xxx foo bar yyy' )\n\t\t\tstore.chief.as( $hyoo_crowd_text ).write( 'X Y Z', 6, 9 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'xxx', ' fo', 'X', ' Y', ' Zar', ' yyy' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Write whole token'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'xxxFoo yyy' )\n\t\t\tstore.chief.as( $hyoo_crowd_text ).write( 'bar', 3, 7 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'xxxbaryyy' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Write whole text'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foo bar' )\n\t\t\tstore.chief.as( $hyoo_crowd_text ).write( 'xxx', 0, 7 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'xxx' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Write at the end'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foo' )\n\t\t\tstore.chief.as( $hyoo_crowd_text ).write( 'bar' )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'foobar' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Write between tokens'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'foo bar' )\n\t\t\tstore.chief.as( $hyoo_crowd_text ).write( 'xxx', 4 )\n\t\t\t\n\t\t\t$mol_assert_like( store.chief.as( $hyoo_crowd_list ).list(), [ 'foo', ' xxxbar' ] )\n\t\t\t\n\t\t},\n\n\t\tasync 'Offset <=> Point'() {\n\t\t\t\n\t\t\tconst store = await make_land()\n\t\t\tstore.chief.as( $hyoo_crowd_text ).text( 'fooBar' )\n\t\t\tconst [ first, second ] = store.chief.units()\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.chief.as( $hyoo_crowd_text ).point_by_offset( 0 ),\n\t\t\t\t{ self: first.self(), offset: 0 },\n\t\t\t)\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.chief.as( $hyoo_crowd_text )\n\t\t\t\t\t.offset_by_point({ self: first.self(), offset: 0 }),\n\t\t\t\t0,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.chief.as( $hyoo_crowd_text ).point_by_offset( 3 ),\n\t\t\t\t{ self: second.self(), offset: 0 },\n\t\t\t)\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.chief.as( $hyoo_crowd_text )\n\t\t\t\t\t.offset_by_point({ self: second.self(), offset: 0 }),\n\t\t\t\t3,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.chief.as( $hyoo_crowd_text ).point_by_offset( 5 ),\n\t\t\t\t{ self: second.self(), offset: 2 },\n\t\t\t)\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.chief.as( $hyoo_crowd_text )\n\t\t\t\t\t.offset_by_point({ self: second.self(), offset: 2 }),\n\t\t\t\t5,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.chief.as( $hyoo_crowd_text ).point_by_offset( 6 ),\n\t\t\t\t{ self: store.chief.head, offset: 6 },\n\t\t\t)\n\t\t\t$mol_assert_like(\n\t\t\t\tstore.chief.as( $hyoo_crowd_text )\n\t\t\t\t\t.offset_by_point({ self: store.chief.head, offset: 6 }),\n\t\t\t\t6,\n\t\t\t)\n\t\t\t\n\t\t},\n\n\t})\n}\n"]}