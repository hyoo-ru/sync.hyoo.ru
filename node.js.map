{"version":3,"sources":["-","../../../../mam.ts","../../../../mam.jam.js","../../../hyoo.ts","../../-meta.tree/hyoo/sync/-meta.tree/revision.meta.tree.ts","../../../../mol/ambient/mol/ambient/ambient.ts","../../../../mol/delegate/mol/delegate/delegate.ts","../../../../mol/owning/mol/owning/owning.ts","../../../../mol/fail/mol/fail/fail.ts","../../../../mol/fail/hidden/mol/fail/hidden/hidden.ts","../../../../mol/type/writable/writable.ts","../../../../mol/object2/mol/object2/object2.ts","../../../../mol/wire/cursor/mol/wire/cursor/cursor.ts","../../../../mol/wire/pub/mol/wire/pub/pub.ts","../../../../mol/wire/sub/sub.ts","../../../../mol/wire/mol/wire/wire.ts","../../../../mol/dev/format/mol/dev/format/format.ts","../../../../mol/wire/pub/sub/mol/wire/pub/sub/sub.ts","../../../../mol/after/timeout/mol/after/timeout/timeout.ts","../../../../mol/after/frame/mol/after/frame/frame.node.ts","../../../../mol/wire/fiber/mol/wire/fiber/fiber.ts","../../../../mol/func/name/mol/func/name/name.ts","../../../../mol/guid/mol/guid/guid.ts","../../../../mol/key/mol/key/key.ts","../../../../mol/compare/deep/mol/compare/deep/deep.ts","../../../../mol/wire/task/mol/wire/task/task.ts","../../../../mol/wire/method/mol/wire/method/method.ts","../../../../mol/type/tail/tail.ts","../../../../mol/type/foot/foot.ts","../../../../mol/fail/catch/mol/fail/catch/catch.ts","../../../../mol/fail/log/mol/fail/log/log.ts","../../../../mol/wire/atom/mol/wire/atom/atom.ts","../../../../mol/wire/solo/mol/wire/solo/solo.ts","../../../../mol/wire/plex/mol/wire/plex/plex.ts","../../../../mol/mem/mol/mem/mem.ts","../../../../mol/wire/sync/mol/wire/sync/sync.ts","../../../../mol/object/mol/object/object.ts","../../../../mol/dom/context/mol/dom/context/context.ts","../../../../node/node.ts","../../../../node/node/node.node.ts","../../../../mol/log3/mol/log3/log3.ts","../../../../mol/tree/mol/tree/tree.ts","../../../../mol/term/color/mol/term/color/color.ts","../../../../mol/log3/mol/log3/log3.node.ts","../../../../mol/env/mol/env/env.ts","../../../../mol/env/mol/env/env.node.ts","../../../../mol/exec/mol/exec/exec.node.ts","../../../../mol/dom/context/mol/dom/context/context.node.ts","../../../../mol/state/local/mol/state/local/local.ts","../../../../mol/charset/encode/mol/charset/encode/encode.ts","../../../../mol/int62/mol/int62/int62.ts","../../../../mol/crypto/native/mol/crypto/native/native.node.ts","../../../../mol/crypto/auditor/mol/crypto/auditor/auditor.ts","../../../crowd/peer/hyoo/crowd/peer/peer.ts","../../peer/hyoo/sync/peer/peer.node.ts","../../../../mol/wrapper/mol/wrapper/wrapper.ts","../../../../mol/memo/mol/memo/memo.ts","../../../../mol/data/value/value.ts","../../../../mol/data/setup/mol/data/setup/setup.ts","../../../../mol/diff/path/mol/diff/path/path.ts","../../../../mol/error/mix/mol/error/mix/mix.ts","../../../../mol/data/error/mol/data/error/error.ts","../../../../mol/data/enum/mol/data/enum/enum.ts","../../../../mol/charset/encoding/encoding.ts","../../../../mol/charset/decode/mol/charset/decode/decode.ts","../../../crowd/unit/hyoo/crowd/unit/unit.ts","../../../crowd/time/hyoo/crowd/time/time.ts","../../../crowd/clock/hyoo/crowd/clock/clock.ts","../../../crowd/node/hyoo/crowd/node/node.ts","../../../crowd/reg/hyoo/crowd/reg/reg.ts","../../../crowd/struct/hyoo/crowd/struct/struct.ts","../../../../mol/const/mol/const/const.ts","../../../crowd/land/hyoo/crowd/land/land.ts","../../../../mol/action/mol/action/action.ts","../../../crowd/fund/hyoo/crowd/fund/fund.ts","../../../../mol/dict/mol/dict/dict.ts","../../../crowd/world/hyoo/crowd/world/world.ts","../../../../mol/wire/race/mol/wire/race/race.ts","../../../../mol/wire/solid/mol/wire/solid/solid.ts","../../masters/hyoo/sync/masters/masters.ts","../../../../mol/wire/async/mol/wire/async/async.ts","../../yard/hyoo/sync/yard/yard.ts","../../../../mol/syntax2/mol/syntax2/syntax2.ts","../../../harp/query/query.ts","../../../harp/from/string/hyoo/harp/from/string/string.ts","../../../../mol/state/arg/arg.ts","../../../../mol/state/arg/mol/state/arg/arg.node.ts","../../../../mol/reconcile/mol/reconcile/reconcile.ts","../../../crowd/list/hyoo/crowd/list/list.ts","../../../../mol/blob/mol/blob/blob.ts","../../../crowd/blob/hyoo/crowd/blob/blob.ts","../../../crowd/dict/hyoo/crowd/dict/dict.ts","../../../crowd/json/hyoo/crowd/json/json.ts","../../../../mol/type/equals/equals.ts","../../../../mol/type/merge/merge.ts","../../../../mol/type/intersect/intersect.ts","../../../../mol/type/override/override.ts","../../../../mol/unicode/unicode.ts","../../../../mol/regexp/mol/regexp/regexp.ts","../../../crowd/tokenizer/hyoo/crowd/tokenizer/tokenizer.ts","../../../crowd/text/hyoo/crowd/text/text.ts","../../../../mol/dom/render/children/mol/dom/render/children/children.ts","../../../../mol/type/partial/deep/deep.ts","../../../../mol/jsx/mol/jsx/jsx.ts","../../../marked/cut/hyoo/marked/cut/cut.ts","../../../marked/line/hyoo/marked/line/line.ts","../../../marked/header/hyoo/marked/header/header.ts","../../../marked/list/hyoo/marked/list/list.ts","../../../marked/quote/hyoo/marked/quote/quote.ts","../../../marked/table/hyoo/marked/table/table.ts","../../../marked/script/hyoo/marked/script/script.ts","../../../marked/paragraph/hyoo/marked/paragraph/paragraph.ts","../../../marked/flow/hyoo/marked/flow/flow.ts","../../../marked/to/dom/hyoo/marked/to/dom/dom.tsx","../../../marked/to/html/hyoo/marked/to/html/html.ts","../../../../mol/dom/serialize/mol/dom/serialize/serialize.ts","../../../../mol/dom/parse/mol/dom/parse/parse.ts","../../../crowd/dom/hyoo/crowd/dom/dom.tsx","../hyoo/sync/server/server.node.ts"],"names":[],"mappings":"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","file":"node.js","sourcesContent":[null,"Error.stackTraceLimit = 50;\n\ndeclare let _$_: { new(): {} } & typeof globalThis\ndeclare class $ extends _$_ {}\n\nnamespace $ {\n\texport type $ = typeof $$\n\texport declare class $$ extends $ {}\n\tnamespace $$ {\n\t\texport type $$ = $\n\t}\n}\n\nmodule.exports = $\n",null,null,"let $hyoo_sync_revision = \"7ca4736\"","namespace $ {\n\n\texport const $mol_ambient_ref : unique symbol = Symbol( '$mol_ambient_ref' )\n\n\t/** @deprecated use $ instead */\n\texport type $mol_ambient_context = $\n\n\texport function $mol_ambient( this : $ | void , overrides : Partial< $ > ) : $ {\n\t\treturn Object.setPrototypeOf( overrides , this || $ )\n\t}\n\n}\n","namespace $ {\n\n\tconst instances = new WeakSet< any >()\n\n\t/**\n\t * Proxy that delegates all to lazy returned target.\n\t * \n\t * \t$mol_delegate( Array.prototype , ()=> fetch_array() )\n\t */\n    export function $mol_delegate< Value extends object >(\n\t\tproto : Value ,\n\t\ttarget : ()=> Value ,\n\t) {\n\n\t\tconst proxy = new Proxy( proto , {\n\n\t\t\tget: ( _ , field )=> {\n\t\t\t\tconst obj = target()\n\t\t\t\tlet val = Reflect.get( obj , field )\n\t\t\t\tif( typeof val === 'function' ) {\n\t\t\t\t\tval = val.bind( obj )\n\t\t\t\t} \n\t\t\t\treturn val\n\t\t\t},\n\t\t\thas: ( _ , field )=> Reflect.has( target(), field ),\n\t\t\tset: ( _ , field , value )=> Reflect.set( target() , field , value ),\n\t\t\t\n\t\t\tgetOwnPropertyDescriptor: ( _ , field )=> Reflect.getOwnPropertyDescriptor( target() , field ),\n\t\t\townKeys: ()=> Reflect.ownKeys( target() ),\n\t\t\t\n\t\t\tgetPrototypeOf: ()=> Reflect.getPrototypeOf( target() ),\n\t\t\tsetPrototypeOf: ( _ , donor )=> Reflect.setPrototypeOf( target() , donor ),\n\t\t\t\n\t\t\tisExtensible: ()=> Reflect.isExtensible( target() ),\n\t\t\tpreventExtensions: ()=> Reflect.preventExtensions( target() ),\n\t\t\t\n\t\t\tapply: ( _ , self , args )=> Reflect.apply( target() as Function , self , args ),\n\t\t\tconstruct: ( _ , args , retarget )=> Reflect.construct( target() as Function , args , retarget ),\n\t\t\t\n\t\t\tdefineProperty: ( _ , field , descr )=> Reflect.defineProperty( target() , field , descr ),\n\t\t\tdeleteProperty: ( _ , field )=> Reflect.deleteProperty( target() , field ),\n\n\t\t} )\n\n\t\tinstances.add( proxy )\n\n\t\treturn proxy\n\n\t}\n\n\tReflect.defineProperty(\n\t\t$mol_delegate ,\n\t\tSymbol.hasInstance ,\n\t\t{\n\t\t\tvalue : ( obj : object )=> instances.has( obj ),\n\t\t},\n\t)\n\n}\n","namespace $ {\n\n\texport const $mol_owning_map = new WeakMap< any , any >()\n\n\texport function $mol_owning_allow< Having >(\n\t\thaving : Having ,\n\t) : having is Having & {\n\t\tdestructor() : void\n\t} {\n\t\ttry {\n\t\t\tif( !having ) return false\n\t\t\tif( typeof having !== 'object' ) return false\n\t\t\tif( having instanceof $mol_delegate ) return false\n\t\t\tif( typeof having['destructor'] !== 'function' ) return false\n\t\t\treturn true\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\texport function $mol_owning_get< Having , Owner extends object >( having : Having , Owner? : { new() : Owner } ) : Owner | null {\n\t\n\t\tif( !$mol_owning_allow( having ) ) return null\n\n\t\twhile( true ) {\n\n\t\t\tconst owner = $mol_owning_map.get( having )\n\t\t\tif( !owner ) return owner\n\t\t\tif( !Owner ) return owner\n\t\t\t\n\t\t\tif( owner instanceof Owner ) return owner\n\n\t\t\thaving = owner\n\t\t}\n\n\t}\n\t\n\texport function $mol_owning_check< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) : having is Having & { destructor() : void } {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) !== owner ) return false\n\t\treturn true\n\t}\n\t\n\texport function $mol_owning_catch< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) ) return false\n\n\t\t$mol_owning_map.set( having , owner )\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail( error : any ) : never {\n\t\tthrow error\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail_hidden( error : any ) : never {\n\t\tthrow error /// Use 'Never Pause Here' breakpoint in DevTools or simply blackbox this script\n\t}\n\n}\n",null,"namespace $ {\n\n\texport class $mol_object2 {\n\t\t\n\t\tstatic $ = $ as $\n\t\t\n\t\t[ $mol_ambient_ref ] = null as any as $\n\t\tget $() {\n\t\t\tif( this[ $mol_ambient_ref ] ) return this[ $mol_ambient_ref ]\n\t\t\tconst owner = $mol_owning_get( this ) as any\n\t\t\treturn this[ $mol_ambient_ref ] = owner?.$ || $mol_object2.$ as $\n\t\t}\n\t\tset $( next : $ ) {\n\t\t\tif( this[ $mol_ambient_ref ] ) $mol_fail_hidden( new Error( 'Context already defined' ) )\n\t\t\tthis[ $mol_ambient_ref ] = next\n\t\t}\n\n\t\tpublic static create< Instance >(\n\t\t\tthis : new( init? : ( instance : any )=> void )=> Instance ,\n\t\t\tinit? : ( instance : $mol_type_writable<Instance> )=> void\n\t\t) : Instance {\n\t\t\tconst obj = new this\n\t\t\tif( init ) init( obj )\n\t\t\treturn obj\n\t\t}\n\t\t\n\t\tstatic [ Symbol.toPrimitive ]() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\tstatic toString() {\n\t\t\tif( Symbol.toStringTag in this ) return this[ Symbol.toStringTag ] as string\n\t\t\treturn this.name\n\t\t}\n\t\t\n\t\tdestructor() { }\n\t\t\n\t\t//[ Symbol.toPrimitive ]( hint: string ) {\n\t\t//\treturn hint === 'number' ? this.valueOf() : this.toString()\n\t\t//}\n\t\t\n\t\ttoString(): string {\n\t\t\treturn this[ Symbol.toStringTag ] || this.constructor.name + '()'\n\t\t}\n\t\t\n\t\ttoJSON(): any {\n\t\t\treturn this.toString()\n\t\t}\n\n\t}\n}\n","namespace $ {\n\t\n\t/** Special status statuses. */\n\texport enum $mol_wire_cursor {\n\t\t\n\t\t/** Update required. */\n\t\tstale = -1,\n\t\t\n\t\t/** Some of (transitive) pub update required. */\n\t\tdoubt = -2,\n\t\t\n\t\t/** Actual state but may be dropped. */\n\t\tfresh = -3,\n\t\t\n\t\t/** State will never be changed. */\n\t\tfinal = -4,\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/**\n\t * Collects subscribers in compact array. 28B\n\t */\n\texport class $mol_wire_pub extends Object {\n\t\t\n\t\tdata = [] as unknown[]\n\t\t\n\t\t// Derived objects should be Arrays.\n\t\tstatic get [ Symbol.species ]() {\n\t\t\treturn Array\n\t\t}\n\t\t\n\t\t/**\n\t\t * Index of first subscriber.\n\t\t */\n\t\tprotected sub_from = 0 // 4B\n\t\t\n\t\t/**\n\t\t * All current subscribers.\n\t\t */\n\t\tget sub_list() {\n\t\t\tconst res = [] as $mol_wire_sub[]\n\t\t\tfor( let i = this.sub_from; i < this.data.length; i += 2 ) {\n\t\t\t\tres.push( this.data[i] as $mol_wire_sub )\n\t\t\t}\n\t\t\treturn res as readonly $mol_wire_sub[]\n\t\t}\n\t\t\n\t\t/**\n\t\t * Has any subscribers or not.\n\t\t */\n\t\tget sub_empty() {\n\t\t\treturn this.sub_from === this.data.length\n\t\t}\n\t\t\n\t\t/**\n\t\t * Subscribe subscriber to this publisher events and return position of subscriber that required to unsubscribe.\n\t\t */\n\t\tsub_on( sub: $mol_wire_pub, pub_pos: number ) {\n\t\t\tconst pos = this.data.length\n\t\t\tthis.data.push( sub, pub_pos )\n\t\t\treturn pos\n\t\t}\n\t\t\n\t\t/**\n\t\t * Unsubscribe subscriber from this publisher events by subscriber position provided by `on(pub)`.\n\t\t */\n\t\tsub_off( sub_pos: number ) {\n\t\t\t\n\t\t\tif(!( sub_pos < this.data.length )) {\n\t\t\t\t$mol_fail( new Error( `Wrong pos ${ sub_pos }` ) )\n\t\t\t}\n\t\t\t\n\t\t\tconst end = this.data.length - 2\n\t\t\tif( sub_pos !== end ) {\n\t\t\t\tthis.peer_move( end, sub_pos )\n\t\t\t}\n\t\t\t\n\t\t\tthis.data.pop()\n\t\t\tthis.data.pop()\n\t\t\t\n\t\t\tif( this.data.length === this.sub_from ) this.reap()\n\t\t\t\n\t\t}\n\t\t\n\t\t/**\n\t\t * Called when last sub was unsubscribed.\n\t\t **/\n\t\treap() { }\n\t\t\n\t\t/**\n\t\t * Autowire this publisher with current subscriber.\n\t\t **/\n\t\tpromote() {\n\t\t\t$mol_wire_auto()?.track_next( this )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Enforce actualization. Should not throw errors.\n\t\t */\n\t\tfresh() {}\n\t\t\n\t\t/**\n\t\t * Allow to put data to caches in the subtree.\n\t\t */\n\t\tcomplete() {}\n\t\t\n\t\t/**\n\t\t * Notify subscribers about self changes.\n\t\t */\n\t\temit( quant = $mol_wire_cursor.stale ) {\n\t\t\tfor( let i = this.sub_from; i < this.data.length; i += 2 ) {\n\t\t\t\t;( this.data[i] as $mol_wire_sub ).absorb( quant )\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Moves peer from one position to another. Doesn't clear data at old position!\n\t\t */\n\t\tpeer_move( from_pos: number, to_pos: number ) {\n\t\t\t\n\t\t\tconst peer = this.data[ from_pos ] as $mol_wire_pub\n\t\t\tconst self_pos = this.data[ from_pos + 1 ] as number\n\t\t\t\n\t\t\tthis.data[ to_pos ] = peer\n\t\t\tthis.data[ to_pos + 1 ] = self_pos\n\t\t\t\n\t\t\tpeer.peer_repos( self_pos, to_pos )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Updates self position in the peer.\n\t\t */\n\t\tpeer_repos( peer_pos: number, self_pos: number ) {\n\t\t\tthis.data[ peer_pos + 1 ] = self_pos\n\t\t}\n\t\t\n\t}\n\t\n}\n",null,"namespace $ {\n\t\n\tlet auto: $mol_wire_sub | null = null\n\t\n\t/**\n\t * When fulfilled, all publishers are promoted to this subscriber on access to its.\n\t */\n\texport function $mol_wire_auto( next = auto ) {\n\t\treturn auto = next\n\t}\n\t\n\t/**\n\t * Affection queue. Used to prevent accidental stack overflow on emit.\n\t */\n\texport const $mol_wire_affected = [] as ( $mol_wire_sub | number )[]\n\t\n}\n","namespace $ {\n\n\t// https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview#\n\t$['devtoolsFormatters'] = $['devtoolsFormatters'] || []\n\n\texport function $mol_dev_format_register( config : {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> false\n\t} | {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> boolean\n\t\tbody : ( val : any , config : any )=> any\n\t} ) {\n\t\t$['devtoolsFormatters'].push( config )\n\t}\n\n\texport let $mol_dev_format_head = Symbol( '$mol_dev_format_head' )\n\texport let $mol_dev_format_body = Symbol( '$mol_dev_format_body' )\n\n\t$mol_dev_format_register({\n\n\t\theader : ( val : any , config = false ) => {\n\t\t\t\n\t\t\tif( config ) return null\n\n\t\t\tif( !val ) return null\n\t\t\t\n\t\t\tif( $mol_dev_format_head in val ) {\n\t\t\t\treturn val[ $mol_dev_format_head ]()\n\t\t\t}\n\t\t\t\n\t\t\tif( typeof val === 'function' ) {\n\t\t\t\treturn $mol_dev_format_native( val )\n\t\t\t}\n\n\t\t\treturn null\n\t\t\t\n\t\t} ,\n\t\t\n\t\thasBody : val => val[ $mol_dev_format_body ] ,\n\n\t\tbody : val => val[ $mol_dev_format_body ]() ,\n\n\t})\n\n\texport function $mol_dev_format_native( obj : any ) {\n\t\t\n\t\tif( typeof obj === 'undefined' ) return $mol_dev_format_shade( 'undefined' )\n\t\tif( typeof obj !== 'object' && typeof obj !== 'function' ) return obj\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : true ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_auto( obj : any ) {\n\t\t\n\t\tif( obj == null ) return $mol_dev_format_shade( String( obj ) )\n\n\t\tif( typeof obj === 'object' && $mol_dev_format_head in obj ) {\n\t\t\treturn obj[ $mol_dev_format_head ]()\n\t\t}\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : false ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_element( element : string , style : object , ...content : any[] ) {\n\t\t\t\n\t\tconst styles = [] as string[]\n\t\t\n\t\tfor( let key in style ) styles.push( `${ key } : ${ style[key] }` )\n\t\t\n\t\treturn [\n\t\t\telement ,\n\t\t\t{\n\t\t\t\tstyle : styles.join( ' ; ' ) ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_span( style : object , ...content : any[] ) {\n\t\treturn $mol_dev_format_element(\n\t\t\t'span' ,\n\t\t\t{\n\t\t\t\t'vertical-align' : '8%',\n\t\t\t\t... style ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t)\n\t}\n\n\texport let $mol_dev_format_div = $mol_dev_format_element.bind( null , 'div' )\n\texport let $mol_dev_format_ol = $mol_dev_format_element.bind( null , 'ol' )\n\texport let $mol_dev_format_li = $mol_dev_format_element.bind( null , 'li' )\n\texport let $mol_dev_format_table = $mol_dev_format_element.bind( null , 'table' )\n\texport let $mol_dev_format_tr = $mol_dev_format_element.bind( null , 'tr' )\n\texport let $mol_dev_format_td = $mol_dev_format_element.bind( null , 'td' )\n\n\texport let $mol_dev_format_accent = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'magenta' ,\n\t} )\n\n\texport let $mol_dev_format_strong = $mol_dev_format_span.bind( null , {\n\t\t'font-weight' : 'bold' ,\n\t} )\n\n\texport let $mol_dev_format_string = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'green',\n\t} )\n\n\texport let $mol_dev_format_shade = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'gray',\n\t} )\n\n\texport let $mol_dev_format_indent = $mol_dev_format_div.bind( null , {\n\t\t'margin-left': '13px'\n\t} )\n\n}\n","namespace $ {\n\t\n\t/**\n\t * Publisher that can auto collect other publishers. 32B\n\t * \n\t * \tP1 P2 P3 P4 S1 S2 S3\n\t * \t^           ^\n\t * \tpubs_from   subs_from\n\t */\n\texport class $mol_wire_pub_sub extends $mol_wire_pub implements $mol_wire_sub {\n\t\t\n\t\tprotected pub_from = 0 // 4B\n\t\tprotected cursor = $mol_wire_cursor.stale // 4B\n\t\t\n\t\tget pub_list() {\n\t\t\tconst res = [] as $mol_wire_pub[]\n\t\t\tconst max = this.cursor >=0 ? this.cursor : this.sub_from\n\t\t\tfor( let i = this.pub_from; i < max; i += 2 ) {\n\t\t\t\tif( this.data[i] ) res.push( this.data[i] as $mol_wire_pub )\n\t\t\t}\n\t\t\treturn res\n\t\t}\n\t\t\n\t\ttrack_on() {\n\t\t\tthis.cursor = this.pub_from\n\t\t\tconst sub = $mol_wire_auto()\n\t\t\t$mol_wire_auto( this )\n\t\t\treturn sub\n\t\t}\n\t\t\n\t\tpromote() {\n\t\t\t\n\t\t\tif( this.cursor >= this.pub_from ) {\n\t\t\t\t$mol_fail( new Error( 'Circular subscription' ) )\n\t\t\t}\n\t\t\t\n\t\t\tsuper.promote()\n\t\t}\n\t\t\n\t\ttrack_next( pub?: $mol_wire_pub ): $mol_wire_pub | null {\n\t\t\t\n\t\t\tif( this.cursor < 0 ) $mol_fail( new Error( 'Promo to non begun sub' ) )\n\t\t\t\n\t\t\tif( this.cursor < this.sub_from ) {\n\t\t\t\n \t\t\t\tconst next = this.data[ this.cursor ] as $mol_wire_pub | undefined\n\t\t\t\tif( pub === undefined ) return next ?? null\n\t\t\t\t\n\t\t\t\tif( next === pub ) {\n\t\t\t\t\tthis.cursor += 2\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( next ) {\n\t\t\t\t\t\n\t\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\t\tthis.peer_move( this.sub_from, this.data.length )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.peer_move( this.cursor, this.sub_from )\n\t\t\t\t\tthis.sub_from += 2\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif( pub === undefined ) return null\n\t\t\t\t\n\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\tthis.peer_move( this.sub_from, this.data.length )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.sub_from += 2\n\t\t\t\t\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tthis.data[ this.cursor ] = pub\n\t\t\tthis.data[ this.cursor + 1 ] = pub.sub_on( this, this.cursor )\n\t\t\t\n\t\t\tthis.cursor += 2\n\t\t\t\n\t\t\treturn pub\n\t\t}\n\t\t\n\t\ttrack_off( sub: $mol_wire_sub | null ) {\n\t\t\t\n\t\t\t$mol_wire_auto( sub )\n\t\t\t\n\t\t\tif( this.cursor < 0 ) {\n\t\t\t\t$mol_fail( new Error( 'End of non begun sub' ) )\n\t\t\t}\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.pub_from;\n\t\t\t\tcursor < this.cursor;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub\n\t\t\t\tpub.fresh()\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\n\t\t}\n\t\t\n\t\tpub_off( sub_pos: number ) {\n\t\t\tthis.data[ sub_pos ] = undefined as any\n\t\t\tthis.data[ sub_pos + 1 ] = undefined as any \n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.data.length - 2;\n\t\t\t\tcursor >= this.sub_from;\n\t\t\t\tcursor -= 2\n\t\t\t) {\n\t\t\t\tconst sub = this.data[ cursor ] as $mol_wire_sub\n\t\t\t\tconst pos = this.data[ cursor + 1 ] as number\n\t\t\t\tsub.pub_off( pos )\n\t\t\t\tthis.data.pop()\n\t\t\t\tthis.data.pop()\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = this.pub_from\n\t\t\tthis.track_cut()\n\t\t\tthis.cursor = $mol_wire_cursor.final\n\t\t\t\n\t\t}\n\t\t\n\t\ttrack_cut() {\n\t\t\t\n\t\t\tif( this.cursor < this.pub_from ) {\n\t\t\t\t$mol_fail( new Error( 'Cut of non begun sub' ) )\n\t\t\t}\n\t\t\t\n\t\t\tlet tail = 0\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.cursor;\n\t\t\t\tcursor < this.sub_from;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\t\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub | undefined\n\t\t\t\tpub?.sub_off( this.data[ cursor + 1 ] as number )\n\t\t\t\t\n\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\tthis.peer_move( this.data.length - 2, cursor )\n\t\t\t\t\tthis.data.pop()\n\t\t\t\t\tthis.data.pop()\n\t\t\t\t} else {\n\t\t\t\t\t++ tail\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor(; tail; -- tail ) {\n\t\t\t\tthis.data.pop()\n\t\t\t\tthis.data.pop()\n\t\t\t}\n\t\t\t\n\t\t\tthis.sub_from = this.cursor\n\t\t\t\n\t\t}\n\t\t\n\t\tcomplete() { }\n\t\t\n\t\tcomplete_pubs() {\n\t\t\t\n\t\t\tconst limit = this.cursor < 0 ? this.sub_from : this.cursor \n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.pub_from;\n\t\t\t\tcursor < limit;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub\n\t\t\t\tpub?.complete()\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tabsorb( quant = $mol_wire_cursor.stale ) {\n\t\t\t\n\t\t\tif( this.cursor === $mol_wire_cursor.final ) return\n\t\t\tif( this.cursor >= quant ) return\n\t\t\t\n\t\t\tthis.cursor = quant\n\t\t\tthis.emit( $mol_wire_cursor.doubt )\n\t\t\t\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_native( this )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Is subscribed to any publisher or not.\n\t\t */\n\t\tget pub_empty() {\n\t\t\treturn this.sub_from === this.pub_from\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_after_timeout extends $mol_object2 {\n\n\t\tid : any\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.id = setTimeout( task , delay )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tclearTimeout( this.id )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_after_frame extends $mol_after_timeout {\n\n\t\tconstructor(\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper( 16 , task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t\n\tconst handled = new WeakSet< Promise< unknown > >()\n\t\n\t/**\n\t * Suspendable task with support both sync/async api.\n\t * \n\t * \tA1 A2 A3 A4 P1 P2 P3 P4 S1 S2 S3\n\t * \t^           ^           ^\n\t * \targs_from   pubs_from   subs_from\n\t **/\n\texport abstract class $mol_wire_fiber<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_pub_sub {\n\t\t\n\t\tstatic warm = true\n\t\t\n\t\tstatic planning = new Set< $mol_wire_fiber< any, any, any > >()\n\t\tstatic reaping = new Set< $mol_wire_fiber< any, any, any > >()\n\t\t\n\t\tstatic plan_task: $mol_after_frame | null = null\n\t\tstatic plan() {\n\t\t\t\n\t\t\tif( this.plan_task ) return\n\t\t\t\n\t\t\tthis.plan_task = new $mol_after_frame( ()=> {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tthis.sync()\n\t\t\t\t} finally {\n\t\t\t\t\t$mol_wire_fiber.plan_task = null\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t\n\t\t}\n\t\t\n\t\tstatic sync() {\n\t\t\t\n\t\t\t// Sync whole fiber graph\n\t\t\twhile( this.planning.size ) {\n\t\t\t\tfor( const fiber of this.planning ) {\n\t\t\t\t\tthis.planning.delete( fiber )\n\t\t\t\t\tif( fiber.cursor >= 0 ) continue\n\t\t\t\t\tif( fiber.cursor === $mol_wire_cursor.final ) continue\n\t\t\t\t\tfiber.fresh()\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Collect garbage\n\t\t\twhile( this.reaping.size ) {\n\t\t\t\t\n\t\t\t\tconst fibers = this.reaping\n\t\t\t\tthis.reaping = new Set\n\t\t\t\t\n\t\t\t\tfor( const fiber of fibers ) {\n\t\t\t\t\tif( !fiber.sub_empty ) continue\n\t\t\t\t\tfiber.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tpublic cache: Result | Error | Promise< Result | Error > = undefined as any\n\t\t\n\t\tget args() {\n\t\t\treturn this.data.slice( 0 , this.pub_from ) as any as Args\n\t\t}\n\t\t\n\t\tresult() {\n\t\t\tif( this.cache instanceof Promise ) return\n\t\t\tif( this.cache instanceof Error ) return\n\t\t\treturn this.cache\n\t\t}\n\t\t\n\t\tfield() {\n\t\t\treturn this.task.name + '()'\n\t\t}\n\t\t\n\t\tconstructor(\n\t\t\tid: string,\n\t\t\treadonly task: ( this : Host , ... args : Args )=> Result,\n\t\t\treadonly host?: Host,\n\t\t\targs?: Args\n\t\t) {\n\t\t\t\n\t\t\tsuper()\n\t\t\tif( args ) this.data.push( ... args )\n\t\t\tthis.pub_from = this.sub_from = args?.length ?? 0\n\t\t\tthis[ Symbol.toStringTag ] = id\n\t\t\t\n\t\t}\n\t\t\n\t\tplan() {\n\t\t\t$mol_wire_fiber.planning.add( this )\n\t\t\t$mol_wire_fiber.plan()\n\t\t}\n\t\t\n\t\treap() {\n\t\t\t$mol_wire_fiber.reaping.add( this )\n\t\t\t$mol_wire_fiber.plan()\n\t\t}\n\t\t\n\t\ttoString() {\n\t\t\treturn this[ Symbol.toStringTag ]\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this[ Symbol.toStringTag ]\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\t\n\t\t\tconst cursor = {\n\t\t\t\t[ $mol_wire_cursor.stale ]: '🔴',\n\t\t\t\t[ $mol_wire_cursor.doubt ]: '🟡',\n\t\t\t\t[ $mol_wire_cursor.fresh ]: '🟢',\n\t\t\t\t[ $mol_wire_cursor.final ]: '🔵',\n\t\t\t}[ this.cursor ] ?? this.cursor.toString()\n\t\t\t\n\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t$mol_dev_format_shade( cursor + ' ' ),\n\t\t\t\t$mol_dev_format_auto( this.cache ),\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\tget $() {\n\t\t\treturn ( this.host ?? this.task )['$']\n\t\t}\n\t\t\n\t\temit( quant = $mol_wire_cursor.stale ) {\n\t\t\tif( this.sub_empty ) this.plan()\n\t\t\telse super.emit( quant )\n\t\t}\n\t\t\n\t\tfresh() {\n\n\t\t\ttype Result = typeof this.cache\n\t\t\t\n\t\t\tif( this.cursor === $mol_wire_cursor.fresh ) return\n\t\t\tif( this.cursor === $mol_wire_cursor.final ) return\n\t\t\t\n\t\t\tcheck: if( this.cursor === $mol_wire_cursor.doubt ) {\n\t\t\t\t\n\t\t\t\tfor( let i = this.pub_from ; i < this.sub_from; i += 2 ) {\n\t\t\t\t\t;( this.data[i] as $mol_wire_pub )?.fresh()\n\t\t\t\t\tif( this.cursor !== $mol_wire_cursor.doubt ) break check\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\treturn\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst bu = this.track_on()\n\t\t\tlet result: typeof this.cache\n\n\t\t\ttry {\n\n\t\t\t\tswitch( this.pub_from ) {\n\t\t\t\t\tcase 0: result = (this.task as any).call( this.host! ); break\n\t\t\t\t\tcase 1: result = (this.task as any).call( this.host!, this.data[0] ); break\n\t\t\t\t\tdefault: result = (this.task as any).call( this.host!, ... this.args ); break\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( result instanceof Promise ) {\n\t\t\t\t\t\n\t\t\t\t\tconst put = ( res: Result )=> {\n\t\t\t\t\t\tif( this.cache === result ) this.put( res )\n\t\t\t\t\t\treturn res\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult = Object.assign( result.then( put, put ), {\n\t\t\t\t\t\tdestructor: result['destructor'] ?? (()=> {})\n\t\t\t\t\t} )\n\t\t\t\t\t\n\t\t\t\t\thandled.add( result )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch( error: any ) {\n\t\t\t\t\n\t\t\t\tif( error instanceof Error || error instanceof Promise ) {\n\t\t\t\t\tresult = error\n\t\t\t\t} else {\n\t\t\t\t\tresult = new Error( String( error ), { cause: error } )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( result instanceof Promise && !handled.has( result ) ) {\n\t\t\t\t\t\n\t\t\t\t\tresult = Object.assign( result.finally( ()=> {\n\t\t\t\t\t\tif( this.cache === result ) this.absorb()\n\t\t\t\t\t} ), {\n\t\t\t\t\t\tdestructor: result['destructor'] ?? (()=> {})\n\t\t\t\t\t} )\n\t\t\t\t\t\n\t\t\t\t\thandled.add( result )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif(!( result instanceof Promise )) {\n\t\t\t\tthis.track_cut()\n\t\t\t}\n\t\t\t\n\t\t\tthis.track_off( bu )\n\t\t\tthis.put( result )\n\n\t\t}\n\t\t\n\t\trefresh() {\n\t\t\tthis.cursor = $mol_wire_cursor.stale\n\t\t\tthis.fresh()\n\t\t}\n\t\t\n\t\tabstract put( next: Result | Error | Promise< Result | Error > ): Result | Error | Promise< Result | Error >\n\t\t\n\t\t/**\n\t\t * Synchronous execution. Throws Promise when waits async task (SuspenseAPI provider).\n\t\t * Should be called inside SuspenseAPI consumer (ie fiber).\n\t\t */\n\t\tsync() {\n\t\t\t\n\t\t\tif( !$mol_wire_fiber.warm ) {\n\t\t\t\treturn this.result() as Awaited< Result >\n\t\t\t}\n\t\t\t\n\t\t\tthis.promote()\n\t\t\tthis.fresh()\n\t\t\t\n\t\t\tif( this.cache instanceof Error ) {\n\t\t\t\treturn $mol_fail_hidden( this.cache )\n\t\t\t}\n\t\t\t\n\t\t\tif( this.cache instanceof Promise ) {\n\t\t\t\treturn $mol_fail_hidden( this.cache )\n\t\t\t}\n\t\t\t\n\t\t\treturn this.cache as Awaited< Result >\n\t\t}\n\n\t\t/**\n\t\t * Asynchronous execution.\n\t\t * It's SuspenseAPI consumer. So SuspenseAPI providers can be called inside.\n\t\t */\n\t\tasync async() {\n\t\t\t\n\t\t\twhile( true ) {\n\t\t\t\t\n\t\t\t\tthis.fresh()\n\t\t\t\t\n\t\t\t\tif( this.cache instanceof Error ) {\n\t\t\t\t\t$mol_fail_hidden( this.cache )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!( this.cache instanceof Promise )) return this.cache\n\t\t\t\t\t\n\t\t\t\tawait this.cache\n\t\t\t\t\t\n\t\t\t\tif( this.cursor === $mol_wire_cursor.final ) {\n\t\t\t\t\t// never ends on destructed fiber\n\t\t\t\t\tawait new Promise( ()=> {} )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\tconst named = new WeakSet< Function >()\n\t\n\texport function $mol_func_name( this : $ , func : Function ) : string {\n\t\t\n\t\tlet name = func.name\n\t\tif( name?.length > 1 ) return name\n\t\tif( named.has( func ) ) return name\n\n\t\tfor( let key in this ) {\n\t\t\ttry {\n\t\t\t\tif( this[ key ] !== func ) continue\n\t\t\t\tname = key\n\t\t\t\tObject.defineProperty( func , 'name' , { value : name } )\n\t\t\t\tbreak\n\t\t\t} catch {}\n\t\t}\n\n\t\tnamed.add( func )\n\t\treturn name\n\t\t\n\t}\n\n\texport function $mol_func_name_from< Target extends Function >( target : Target , source : Function ) {\n\t\tObject.defineProperty( target , 'name' , { value : source.name } )\n\t\treturn target\n\t}\n\n}\n","namespace $ {\n\n\t/** Generates unique identifier. */\n\texport function $mol_guid(\n\t\tlength = 8,\n\t\texists: ( id: string )=> boolean = ()=> false,\n\t) {\n\n\t\tfor(;;) {\n\n\t\t\tlet id = Math.random().toString( 36 ).substring( 2, length + 2 ).toUpperCase()\n\t\t\tif( exists( id ) ) continue\n\t\t\t\n\t\t\treturn id\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport const $mol_key_store = new WeakMap< object, string >()\n\n\texport function $mol_key< Value >( value : Value ) : string {\n\t\t\n\t\tif( !value ) return JSON.stringify( value )\n\t\tif( typeof value !== 'object' && typeof value !== 'function' ) return JSON.stringify( value )\n\t\t\n\t\treturn JSON.stringify( value, ( field, value )=> {\n\t\t\t\n\t\t\tif( !value ) return value\n\t\t\tif( typeof value !== 'object' && typeof value !== 'function' ) return value\n\t\t\tif( Array.isArray( value ) ) return value\n\t\t\t\n\t\t\tconst proto = Reflect.getPrototypeOf( value )\n\t\t\tif( !proto ) return value\n\t\t\tif( Reflect.getPrototypeOf( proto ) === null ) return value\n\t\t\t\n\t\t\tif( 'toJSON' in value ) return value\n\t\t\tif( value instanceof RegExp ) return value.toString()\n\t\t\t\n\t\t\tlet key = $mol_key_store.get( value )\n\t\t\tif( key ) return key\n\t\t\t\n\t\t\tkey = $mol_guid()\n\t\t\t$mol_key_store.set( value, key )\n\t\t\t\n\t\t\treturn key\n\t\t} )\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport let $mol_compare_deep_cache = new WeakMap< any , WeakMap< any , boolean > >()\n\t\n\t/**\n\t * Deeply compares two values. Returns true if equal.\n\t * Define `Symbol.toPrimitive` to customize.\n\t */\n\texport function $mol_compare_deep< Value >( left: Value, right: Value ): boolean {\n\n\t\tif( Object.is( left , right ) ) return true\n\n\t\tif( left === null ) return false\n\t\tif( right === null ) return false\n\n\t\tif( typeof left !== 'object' ) return false\n\t\tif( typeof right !== 'object' ) return false\n\n\t\tconst left_proto = Reflect.getPrototypeOf( left as any )\n\t\tconst right_proto = Reflect.getPrototypeOf( right as any )\n\t\t\n\t\tif( left_proto !== right_proto ) return false\n\n\t\tif( left instanceof Boolean ) return Object.is( left.valueOf(), right['valueOf']() )\n\t\tif( left instanceof Number ) return Object.is( left.valueOf(), right['valueOf']() )\n\t\tif( left instanceof String ) return Object.is( left.valueOf(), right['valueOf']() )\n\t\tif( left instanceof Date ) return Object.is( left.valueOf(), right['valueOf']() )\n\t\tif( left instanceof RegExp ) return left.source === right['source'] && left.flags === right['flags']\n\t\tif( left instanceof Error ) return left.message === right['message'] && left.stack === right['stack']\n\n\t\tlet left_cache = $mol_compare_deep_cache.get( left )\n\t\tif( left_cache ) {\n\n\t\t\tconst right_cache = left_cache.get( right )\n\t\t\tif( typeof right_cache === 'boolean' ) return right_cache\n\n\t\t} else {\n\t\t\t\n\t\t\tleft_cache = new WeakMap< any , boolean >([[ right, true ]])\n\t\t\t$mol_compare_deep_cache.set( left , left_cache )\n\n\t\t}\n\n\t\tlet result!: boolean\n\n\t\ttry {\n\t\t\t\n\t\t\tif( left_proto && !Reflect.getPrototypeOf( left_proto ) ) result = compare_pojo( left, right as any )\n\t\t\telse if( Array.isArray( left ) ) result = compare_array( left, right as any )\n\t\t\telse if( left instanceof Set ) result = compare_set( left, right as any )\n\t\t\telse if( left instanceof Map ) result = compare_map( left, right as any )\n\t\t\telse if( ArrayBuffer.isView( left ) ) result = compare_buffer( left, right as any )\n\t\t\telse if( Symbol.toPrimitive in left ) result = compare_primitive( left, right )\n\t\t\telse result = false\n\n\t\t} finally {\n\t\t\tleft_cache.set( right , result )\n\t\t}\n\t\t\n\t\treturn result\n\t}\n\n\tfunction compare_array< Value extends any[] >( left: Value, right: Value ): boolean {\n\t\t\n\t\tconst len = left.length\n\t\tif( len !== right.length ) return false\n\t\t\n\t\tfor( let i = 0; i < len; ++i ) {\n\t\t\tif( !$mol_compare_deep( left[i] , right[i] ) ) return false\n\t\t}\n\t\t\n\t\treturn true\n\t}\n\t\n\tfunction compare_buffer( left: ArrayBufferView, right: ArrayBufferView ): boolean {\n\t\t\n\t\tconst len = left.byteLength\n\t\tif( len !== right.byteLength ) return false\n\t\t\n\t\tfor( let i = 0; i < len; ++i ) {\n\t\t\tif( left[i] !== right[i] ) return false\n\t\t}\n\t\t\n\t\treturn true\n\t}\n\t\n\tfunction compare_iterator< Value extends IterableIterator<any> >(\n\t\tleft: Value,\n\t\tright: Value,\n\t): boolean {\n\t\t\n\t\twhile( true ) {\n\n\t\t\tconst left_next = left.next()\n\t\t\tconst right_next = right.next()\n\n\t\t\tif( left_next.done !== right_next.done ) return false\n\t\t\tif( left_next.done ) break\n\n\t\t\tif( !$mol_compare_deep( left_next.value , right_next.value ) ) return false\n\n\t\t}\n\n\t\treturn true\n\n\t}\n\t\n\tfunction compare_set< Value extends Set<any> >( left: Value, right: Value ): boolean {\n\t\tif( left.size !== right.size ) return false\n\t\treturn compare_iterator( left.values(), right.values() )\n\t}\n\t\n\tfunction compare_map< Key, Value >( left: Map< Key, Value > , right: Map< Key, Value > ): boolean {\n\t\tif( left.size !== right.size ) return false\n\t\treturn compare_iterator( left.keys(), right.keys() )\n\t\t\t&& compare_iterator( left.values(), right.values() )\n\t}\n\t\n\tfunction compare_pojo( left: {}, right: {} ): boolean {\n\t\t\n\t\tconst left_keys = Object.getOwnPropertyNames( left )\n\t\tconst right_keys = Object.getOwnPropertyNames( right )\n\t\t\n\t\tif( left_keys.length !== right_keys.length ) return false\n\n\t\tfor( let key of left_keys ) {\n\t\t\tif( !$mol_compare_deep( left[ key ], Reflect.get( right, key ) ) ) return false\n\t\t}\n\n\t\treturn true\n\t}\n\t\n\tfunction compare_primitive( left: {}, right: {} ): boolean {\n\t\treturn Object.is(\n\t\t\tleft[ Symbol.toPrimitive ]( 'default' ),\n\t\t\tright[ Symbol.toPrimitive ]( 'default' ),\n\t\t)\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_wire_task<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_fiber< Host, Args, Result > {\n\t\t\n\t\tstatic getter<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\ttask: ( this : Host , ... args : Args )=> Result,\n\t\t): ( host: Host, args: Args )=> $mol_wire_task< Host, [ ... Args ], Result > {\n\t\t\t\n\t\t\treturn function $mol_wire_task_get( host: Host, args: Args ) {\n\t\t\t\t\n\t\t\t\tconst sub = $mol_wire_auto()\n\t\t\t\tconst existen = sub?.track_next()\n\t\t\t\n\t\t\t\treuse: if( existen ) {\n\t\t\t\t\t\n\t\t\t\t\tif(!( existen instanceof $mol_wire_task )) break reuse\n\t\t\t\t\n\t\t\t\t\tif( existen.host !== host ) break reuse\n\t\t\t\t\tif( existen.task !== task ) break reuse\n\t\t\t\t\tif( !$mol_compare_deep( existen.args, args ) ) break reuse\n\t\t\t\t\t\n\t\t\t\t\treturn existen\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Disabled because non-idempotency is required for try-catch\n\t\t\t\t// if( existen && sub instanceof $mol_wire_task ) {\n\t\t\t\t// \t$mol_fail( new Error( `$mol_wire_task detects nonidempotency\\n${existen}` ) )\n\t\t\t\t// }\n\t\t\t\t\n\t\t\t\treturn new $mol_wire_task( `${ host?.[ Symbol.toStringTag ] ?? host }.${ task.name }(#)`, task, host, args )\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tcomplete() {\n\t\t\tif( this.cache instanceof Promise ) return\n\t\t\tthis.destructor()\n\t\t}\n\t\t\n\t\tput( next: Result | Error | Promise< Result | Error > ) {\n\t\t\t\n\t\t\tconst prev = this.cache\n\t\t\tthis.cache = next\n\t\t\t\n\t\t\tif( next instanceof Promise ) {\n\t\t\t\t\n\t\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\tif( next !== prev ) this.emit()\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_wire_cursor.final\n\t\t\t\n\t\t\tif( this.sub_empty ) this.destructor()\n\t\t\telse if( next !== prev ) this.emit()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_wire_method<\n\t\tHost extends object,\n\t\tArgs extends readonly any[],\n\t>(\n\t\thost : Host,\n\t\tfield : PropertyKey,\n\t\tdescr? : TypedPropertyDescriptor< ( ... args: Args )=> any >,\n\t) {\n\t\t\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field ) as any\n\t\tconst orig = descr?.value! ?? host[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\t\n\t\tif( typeof sup[ field as any ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : sup[ field as any ].name } )\n\t\t}\n\t\t\n\t\tconst temp = $mol_wire_task.getter( orig )\n\t\tconst value = function( this: Host, ... args: Args ) {\n\t\t\tconst fiber = temp( this ?? null as any, args )\n\t\t\treturn fiber.sync()\n\t\t}\n\t\t\n\t\tObject.defineProperty( value , 'name' , { value : orig.name + ' ' } )\n\t\t\n\t\tObject.assign( value, { orig } )\n\t\tconst descr2 = { ... descr, value }\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2\n\t\t\n\t}\n\t\n}\n",null,null,"namespace $ {\n\n\tconst catched = new WeakMap< any , boolean >()\n\n\texport function $mol_fail_catch( error: unknown ) {\n\t\t\n\t\tif( typeof error !== 'object' ) return false\n\t\tif( error instanceof Promise ) $mol_fail_hidden( error )\n\t\tif( catched.get( error ) ) return false\n\t\t\n\t\tcatched.set( error , true )\n\t\treturn true\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_fail_log( error: unknown ) {\n\t\t\n\t\tif( error instanceof Promise ) return false\n\t\tif( !$mol_fail_catch( error ) ) return false\n\t\t\n\t\tconsole.error( error )\n\t\treturn true\n\t\t\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_wire_atom<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_fiber< Host, Args, Result > {\n\n\t\tstatic solo<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\thost: Host,\n\t\t\ttask: ( this: Host, ... args: Args )=> Result,\n\t\t): $mol_wire_atom< Host, Args, Result > {\n\t\t\t\n\t\t\tconst field = task.name + '()'\n\t\t\t\n\t\t\tconst existen = Object.getOwnPropertyDescriptor( host ?? task, field )?.value\n\t\t\tif( existen ) return existen\n\t\t\t\n\t\t\tconst prefix = host?.[ Symbol.toStringTag ] ?? ( host instanceof Function ? $$.$mol_func_name( host ) : host )\n\t\t\tconst key = `${ prefix }.${ field }`\n\t\t\t\n\t\t\tconst fiber = new $mol_wire_atom( key, task, host, [] as any as Args )\n\t\t\t;( host ?? task )[ field ] = fiber\n\t\t\t\n\t\t\treturn fiber\n\t\t}\n\t\t\n\t\tstatic plex<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\thost: Host,\n\t\t\ttask: ( this: Host , ... args: Args )=> Result,\n\t\t\tkey: Args[0],\n\t\t): $mol_wire_atom< Host, Args, Result > {\n\t\t\t\n\t\t\tconst field = task.name + '()'\n\t\t\tlet dict = Object.getOwnPropertyDescriptor( host ?? task, field )?.value\n\t\t\tconst prefix = host?.[ Symbol.toStringTag ] ?? ( host instanceof Function ? $$.$mol_func_name( host ) : host )\n\t\t\tconst id = `${ prefix }.${ task.name }(${ $mol_key( key ) })`\n\t\t\t\n\t\t\tif( dict ) {\n\t\t\t\tconst existen = dict.get( id )\n\t\t\t\tif( existen ) return existen\n\t\t\t} else {\n\t\t\t\tdict = ( host ?? task )[ field ] = new Map<any,any>()\n\t\t\t}\n\t\t\t\n\t\t\tconst fiber = new $mol_wire_atom( id, task, host, [ key ] as any as Args )\n\t\t\tdict.set( id, fiber )\n\t\t\t\n\t\t\treturn fiber\n\t\t}\n\t\t\n\t\tstatic watching = new Set< $mol_wire_atom< any, any, any > >()\n\t\tstatic watcher = null as $mol_after_frame | null\n\t\t\n\t\tstatic watch() {\n\t\t\n\t\t\t$mol_wire_atom.watcher = new $mol_after_frame( $mol_wire_atom.watch )\n\t\t\t\n\t\t\tfor( const atom of $mol_wire_atom.watching ) {\n\t\t\t\t\n\t\t\t\tif( atom.cursor === $mol_wire_cursor.final ) {\n\t\t\t\t\t$mol_wire_atom.watching.delete( atom )\n\t\t\t\t} else {\n\t\t\t\t\tatom.cursor = $mol_wire_cursor.stale\n\t\t\t\t\tatom.fresh()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twatch() {\n\t\t\t\n\t\t\tif( !$mol_wire_atom.watcher ) {\n\t\t\t\t$mol_wire_atom.watcher = new $mol_after_frame( $mol_wire_atom.watch )\n\t\t\t}\n\t\t\t\n\t\t\t$mol_wire_atom.watching.add( this )\n\t\t\t\n\t\t}\n\t\t\n\t\t/**\n\t\t * Update fiber value through another temp fiber.\n\t\t */\n\t\t@ $mol_wire_method\n\t\tresync( args: Args ) {\n\t\t\treturn this.put( this.task.call( this.host!, ... args ) )\n\t\t}\n\t\t\n\t\t@ $mol_wire_method\n\t\tonce() {\n\t\t\treturn this.sync()\n\t\t}\n\t\t\n\t\tchannel() {\n\t\t\treturn Object.assign( ( next?: $mol_type_foot< Args > )=> {\n\t\t\t\t\t\n\t\t\t\tif( next !== undefined ) return this.resync( [ ... this.args, next ] as any ) as never\n\t\t\t\tif( !$mol_wire_fiber.warm ) return this.result() as never\n\t\t\t\t\n\t\t\t\tif( $mol_wire_auto() instanceof $mol_wire_task ) {\n\t\t\t\t\treturn this.once()\n\t\t\t\t} else {\n\t\t\t\t\treturn this.sync()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}, { atom: this as $mol_wire_atom< Host, Args, Result > } )\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t\n\t\t\tsuper.destructor()\n\t\t\t\n\t\t\tconst prev = this.cache\n\t\t\tif( $mol_owning_check( this, prev ) ) {\n\t\t\t\tprev.destructor()\n\t\t\t}\n\t\t\t\n\t\t\tif( this.pub_from === 0 ) {\n\t\t\t\t;( this.host ?? this.task )[ this.field() ] = null\n\t\t\t} else {\n\t\t\t\t;( this.host ?? this.task )[ this.field() ].delete( this[ Symbol.toStringTag ] )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tput( next: Result | Error | Promise< Result | Error > ) {\n\t\t\t\n\t\t\tconst prev = this.cache\n\t\t\t\n\t\t\tupdate: if( next !== prev ) {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tif( $mol_compare_deep( prev, next ) ) break update\n\t\t\t\t} catch( error: any ) {\n\t\t\t\t\t$mol_fail_log( error )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( $mol_owning_check( this, prev ) ) {\n\t\t\t\t\tprev.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( $mol_owning_catch( this, next ) ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tnext[ Symbol.toStringTag ] = this[ Symbol.toStringTag ]\n\t\t\t\t\t} catch { // Promises throws in strict mode\n\t\t\t\t\t\tObject.defineProperty( next, Symbol.toStringTag, { value: this[ Symbol.toStringTag ] } )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( !this.sub_empty ) this.emit()\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.cache = next\n\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\n\t\t\tif( next instanceof Promise ) return next\n\t\t\t\n\t\t\tthis.complete_pubs()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t}\n\t\n\t// $mol_wire_atom.watch()\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_wire_solo< Args extends any[] >(\n\t\thost: object,\n\t\tfield: string,\n\t\tdescr?: TypedPropertyDescriptor< ( ... args: Args )=> any >\n\t) {\n\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field )\n\t\tconst orig = descr?.value! ?? host[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\n\t\tif( typeof sup[ field ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : sup[ field ].name } )\n\t\t}\n\t\t\n\t\tconst descr2 = {\n\t\t\t... descr,\n\t\t\tvalue: function( this: typeof host, ... args: Args ){\n\t\t\t\n\t\t\t\tlet atom = $mol_wire_atom.solo( this, orig )\n\t\t\t\t\n\t\t\t\tif(( args.length === 0 )||( args[0] === undefined )) {\n\t\t\t\t\t\n\t\t\t\t\tif( !$mol_wire_fiber.warm ) return atom.result()\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_wire_auto() instanceof $mol_wire_task ) {\n\t\t\t\t\t\treturn atom.once()\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn atom.sync()\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn atom.resync( args )\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tReflect.defineProperty( descr2.value , 'name' , { value : orig.name + ' ' } )\n\t\tObject.assign( descr2.value, { orig } )\n\t\t\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2 as any as TypedPropertyDescriptor< ( ... args: First_optional< Args > )=> any >\n\t}\n\n\ttype First_optional< Args extends any[] > =  Args extends []\n\t\t? []\n\t\t: [ Args[0] | undefined, ... $mol_type_tail< Args > ]\n\n}\n","namespace $ {\n\t\n\texport function $mol_wire_plex< Args extends [ any, ... any[] ] >(\n\t\thost: object,\n\t\tfield: string,\n\t\tdescr?: TypedPropertyDescriptor< ( ... args: Args )=> any >\n\t) {\n\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field )\n\t\tconst orig = descr?.value! ?? host[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\n\t\tif( typeof sup[ field ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : sup[ field ].name } )\n\t\t}\n\t\t\n\t\tconst descr2 = {\n\t\t\t... descr,\n\t\t\tvalue: function( this: typeof host, ... args: Args ) {\n\t\t\t\n\t\t\t\tlet atom = $mol_wire_atom.plex( this, orig, args[0] )\n\t\t\t\t\n\t\t\t\tif(( args.length === 1 )||( args[1] === undefined )) {\n\t\t\t\t\t\n\t\t\t\t\tif( !$mol_wire_fiber.warm ) return atom.result()\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_wire_auto() instanceof $mol_wire_task ) {\n\t\t\t\t\t\treturn atom.once()\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn atom.sync()\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn atom.resync( args )\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tReflect.defineProperty( descr2.value , 'name' , { value : orig.name + ' ' } )\n\t\tObject.assign( descr2.value, { orig } )\n\t\t\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2\n\t}\n\t\n}\n","namespace $ {\n\texport let $mol_mem = $mol_wire_solo\n\texport let $mol_mem_key = $mol_wire_plex\n}\n","namespace $ {\n\t\n\texport function $mol_wire_sync< Host extends object >( obj: Host ) {\n\t\treturn new Proxy( obj, {\n\t\t\t\n\t\t\tget( obj, field ) {\n\t\t\t\t\n\t\t\t\tconst val = obj[ field ]\n\t\t\t\tif( typeof val !== 'function' ) return val\n\t\t\t\t\n\t\t\t\tconst temp = $mol_wire_task.getter( val )\n\t\t\t\treturn function $mol_wire_sync( this: Host, ... args: any[] ) {\n\t\t\t\t\tconst fiber = temp( obj, args )\n\t\t\t\t\treturn fiber.sync()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tapply( obj, self, args ) {\n\t\t\t\tconst temp = $mol_wire_task.getter( obj as ( ... args: any[] )=> any )\n\t\t\t\tconst fiber = temp( self, args )\n\t\t\t\treturn fiber.sync()\n\t\t\t},\n\t\t\t\n\t\t} ) as any as (\n\t\t\tHost extends ( ... args: infer Args )=> infer Res\n\t\t\t\t? Res extends Promise< infer Res2 >\n\t\t\t\t\t? ( ... args: Args )=> Res2\n\t\t\t\t\t: Host\n\t\t\t\t: {}\n\t\t) & {\n\t\t\t[ key in keyof Host ]: Host[ key ] extends ( ... args: infer Args )=> Promise< infer Res >\n\t\t\t\t? ( ... args: Args )=> Res\n\t\t\t\t: Host[ key ]\n\t\t}\n\t}\n\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\n\texport const $mol_object_field = Symbol( '$mol_object_field' )\n\t\n\texport class $mol_object extends $mol_object2 {\n\t\t\n\t\tpublic static make< Instance >( this : { new() : Instance } , config : Partial< Instance > ) : Instance {\n\t\t\treturn super.create( obj => {\n\t\t\t\tfor( let key in config ) ( obj as any )[ key ] = config[ key ]!\n\t\t\t} ) as any\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\texport var $mol_dom_context : typeof globalThis\n\t\n}\n",null,"interface $node {\n\t[key:string]: any\n}\n\nvar $node = new Proxy( { require } as any , {\n\t\n\tget( target , name : string , wrapper ) {\n\n\t\tif( target[ name ] ) return target[ name ]\n\n\t\tconst mod = target.require( 'module' ) as typeof import( 'module' )\n\t\t\n\t\tif( mod.builtinModules.indexOf( name ) >= 0 ) return target.require( name )\n\t\tif( name[0] === '.' ) return target.require( name )\n\t\t\n\t\tconst path = target.require( 'path' ) as typeof import( 'path' )\n\t\tconst fs = target.require( 'fs' ) as typeof import( 'fs' )\n\n\t\tlet dir = path.resolve( '.' )\n\t\tconst suffix = `./node_modules/${ name }`\n\n\t\tconst $$ = ( $ as any )\n\t\t\n\t\twhile( !fs.existsSync( path.join( dir , suffix ) ) ) {\n\n\t\t\tconst parent = path.resolve( dir , '..' )\n\n\t\t\tif( parent === dir ) {\n\n\t\t\t\t$$.$mol_exec( '.' , 'npm' , 'install' , '--omit=dev', name )\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t$$.$mol_exec( '.' , 'npm' , 'install' , '--omit=dev', '@types/' + name )\n\t\t\t\t} catch {}\n\n\t\t\t\tbreak\n\n\t\t\t} else {\n\n\t\t\t\tdir = parent\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\treturn target.require( name )\n\n\t},\n\n\tset( target , name : string , value ) {\n\t\ttarget[ name ] = value\n\t\treturn true\n\t},\n\n} ) as $node\n\nrequire = ( req =>\n\tObject.assign( function require( name : string ) {\n\t\treturn $node[ name ]\n\t} , req )\n)( require )\n\n","namespace $ {\n\n\t/** Logger event data */\n\texport type $mol_log3_event< Fields > = {\n\t\t[ key in string ] : unknown\n\t} & {\n\t\t\n\t\t/** Time of event creation */\n\t\ttime? : string\n\n\t\t/** Place of event creation */\n\t\tplace : unknown\n\n\t\t/** Short description of event */\n\t\tmessage : string\n\n\t} & Fields\n\n\t/** Logger function */\n\texport type $mol_log3_logger< Fields , Res = void > = (\n\t\tthis : $ ,\n\t\tevent : $mol_log3_event< Fields > ,\n\t)=> Res\n\n\t/** Log begin of some task */\n\texport declare let $mol_log3_come : $mol_log3_logger<{}>\n\t\n\t/** Log end of some task */\n\texport declare let $mol_log3_done : $mol_log3_logger<{}>\n\t\n\t/** Log error */\n\texport declare let $mol_log3_fail : $mol_log3_logger<{}>\n\t\n\t/** Log warning message */\n\texport declare let $mol_log3_warn : $mol_log3_logger<{ hint : string }>\n\t\n\t/** Log some generic event */\n\texport declare let $mol_log3_rise : $mol_log3_logger<{}>\n\n\t/** Log begin of log group, returns func to close group */\n\texport declare let $mol_log3_area : $mol_log3_logger< {} , ()=> void >\n\n\t/** Log begin of collapsed group only when some logged inside, returns func to close group */\n\texport function $mol_log3_area_lazy(\n\t\tthis : $ ,\n\t\tevent : $mol_log3_event<{}> ,\n\t) {\n\n\t\tconst self = this\n\t\tconst stack = self.$mol_log3_stack\n\n\t\tconst deep = stack.length\n\t\tlet logged = false\n\n\t\tstack.push( ()=> {\n\t\t\tlogged = true\n\t\t\tself.$mol_log3_area.call( self , event )\n\t\t} )\n\n\t\treturn ()=> {\n\t\t\tif( logged ) self.console.groupEnd()\n\t\t\tif( stack.length > deep ) stack.length = deep\n\t\t}\n\n\t}\n\n\texport let $mol_log3_stack = [] as ( ()=> void )[]\n\n}\n","namespace $ {\n\n\texport const $mol_tree_convert : unique symbol = Symbol( '$mol_tree_convert' )\n\texport type $mol_tree_path = Array< string | number | null >\n\n\texport type $mol_tree_hack = ( input : $mol_tree , context : $mol_tree_context )=> readonly $mol_tree[]\n\texport type $mol_tree_context = Record< string , $mol_tree_hack >\n\texport type $mol_tree_library = Record< string , $mol_tree_context >\n\t\n\t/**\n\t * Abstract Syntax Tree with human readable serialization.\n\t * @see https://github.com/nin-jin/tree.d\n\t */\n\texport class $mol_tree extends $mol_object2 {\n\t\t\n\t\treadonly type : string\n\t\treadonly data : string\n\t\treadonly sub : readonly $mol_tree[]\n\t\treadonly baseUri : string\n\t\treadonly row : number\n\t\treadonly col : number\n\t\treadonly length : number\n\t\t\n\t\tconstructor( config : Partial<$mol_tree> = {} ) {\n\n\t\t\tsuper()\n\n\t\t\tthis.type = config.type || ''\n\t\t\t\n\t\t\tif( config.value !== undefined ) {\n\n\t\t\t\tvar sub = $mol_tree.values( config.value )\n\t\t\t\t\n\t\t\t\tif( config.type || sub.length > 1 ) {\n\n\t\t\t\t\tthis.sub = [ ... sub , ...( config.sub || [] ) ]\n\t\t\t\t\tthis.data = config.data || ''\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.data = sub[ 0 ].data\n\t\t\t\t\tthis.sub = config.sub || []\n\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.data = config.data || ''\n\t\t\t\tthis.sub = config.sub || []\n\n\t\t\t}\n\t\t\t\n\t\t\tthis.baseUri = config.baseUri || ''\n\t\t\tthis.row = config.row || 0\n\t\t\tthis.col = config.col || 0\n\t\t\tthis.length = config.length || 0\n\n\t\t}\n\t\t\n\t\tstatic values( str : string , baseUri? : string ) {\n\n\t\t\treturn str.split( '\\n' ).map( ( data , index ) => new $mol_tree( {\n\t\t\t\tdata : data ,\n\t\t\t\tbaseUri : baseUri ,\n\t\t\t\trow : index + 1 ,\n\t\t\t\tlength : data.length ,\n\t\t\t} ) )\n\n\t\t}\n\t\t\n\t\t/** Cloning node with overrides. */\n\t\tclone( config : Partial<$mol_tree> = {} ) {\n\n\t\t\treturn new $mol_tree({\n\t\t\t\ttype : ( 'type' in config ) ? config.type : this.type ,\n\t\t\t\tdata : ( 'data' in config ) ? config.data : this.data ,\n\t\t\t\tsub : ( 'sub' in config ) ? config.sub : this.sub ,\n\t\t\t\tbaseUri : ( 'baseUri' in config ) ? config.baseUri : this.baseUri ,\n\t\t\t\trow : ( 'row' in config ) ? config.row : this.row ,\n\t\t\t\tcol : ( 'col' in config ) ? config.col : this.col ,\n\t\t\t\tlength : ( 'length' in config ) ? config.length : this.length ,\n\t\t\t\tvalue : config.value\n\t\t\t})\n\n\t\t}\n\t\t\n\t\t/** Makes new derived node. */\n\t\tmake( config : Partial<$mol_tree> ) {\n\n\t\t\treturn new $mol_tree({\n\t\t\t\tbaseUri : this.baseUri ,\n\t\t\t\trow : this.row ,\n\t\t\t\tcol : this.col ,\n\t\t\t\tlength : this.length ,\n\t\t\t\t... config ,\n\t\t\t})\n\n\t\t}\n\t\t\n\t\t/** Makes new derived data node. */\n\t\tmake_data( value : string , sub? : readonly $mol_tree[] ) {\n\t\t\treturn this.make({ value , sub })\n\t\t}\n\t\t\n\t\t/** Makes new derived structural node. */\n\t\tmake_struct( type : string , sub? : readonly $mol_tree[] ) {\n\t\t\treturn this.make({ type , sub })\n\t\t}\n\t\t\n\t\t/** Parses tree format to AST. */\n\t\tstatic fromString( str : string , baseUri? : string ) {\n\t\t\t\n\t\t\tvar root = new $mol_tree( { baseUri : baseUri } )\n\t\t\tvar stack = [ root ]\n\t\t\t\n\t\t\tvar row = 0\n\t\t\tvar prefix = str.replace( /^\\n?(\\t*)[\\s\\S]*/ , '$1' )\n\t\t\tvar lines = str.replace( new RegExp( '^\\\\t{0,' + prefix.length + '}' , 'mg' ) , '' ).split( '\\n' )\n\n\t\t\tlines.forEach( line => {\n\n\t\t\t\t++row\n\t\t\t\t\n\t\t\t\tvar chunks = /^(\\t*)((?:[^\\n\\t\\\\ ]+ *)*)(\\\\[^\\n]*)?(.*?)(?:$|\\n)/m.exec( line )\n\t\t\t\tif( !chunks || chunks[4] ) return this.$.$mol_fail( new Error( `Syntax error at ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\n\t\t\t\tvar indent = chunks[ 1 ]\n\t\t\t\tvar path = chunks[ 2 ]\n\t\t\t\tvar data = chunks[ 3 ]\n\t\t\t\t\n\t\t\t\tvar deep = indent.length\n\t\t\t\tvar types = path ? path.replace( / $/ , '' ).split( / +/ ) : []\n\t\t\t\t\n\t\t\t\tif( stack.length <= deep ) return this.$.$mol_fail( new Error( `Too many tabs at ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\n\t\t\t\tstack.length = deep + 1\n\t\t\t\tvar parent = stack[ deep ];\n\t\t\t\t\n\t\t\t\tlet col = deep\n\t\t\t\ttypes.forEach( type => {\n\t\t\t\t\tif( !type ) return this.$.$mol_fail( new Error( `Unexpected space symbol ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\tvar next = new $mol_tree({ type , baseUri , row , col , length : type.length })\n\t\t\t\t\tconst parent_sub = parent.sub as $mol_tree[]\n\t\t\t\t\tparent_sub.push( next )\t\n\t\t\t\t\tparent = next\n\t\t\t\t\tcol += type.length + 1\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tif( data ) {\n\t\t\t\t\tvar next = new $mol_tree({ data : data.substring( 1 ) , baseUri , row , col , length : data.length })\n\t\t\t\t\tconst parent_sub = parent.sub as $mol_tree[]\n\t\t\t\t\tparent_sub.push( next )\n\t\t\t\t\tparent = next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstack.push( parent )\n\t\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\treturn root\n\t\t}\n\t\t\n\t\t/**\n\t\t * Parses json.tree lang to AST.\n\t\t * @todo Move to $mol_tree_json_from\n\t\t */\n\t\tstatic fromJSON( json : any , baseUri = '' ) : $mol_tree {\n\n\t\t\tswitch( true ) {\n\n\t\t\t\tcase typeof json === 'boolean' :\n\t\t\t\tcase typeof json === 'number' :\n\t\t\t\tcase json === null :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : String( json ) ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t\tcase typeof json === 'string' :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\tvalue : json ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\n\t\t\t\tcase Array.isArray( json ) :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : \"/\" ,\n\t\t\t\t\t\tsub : ( json as any[] ).map( json => $mol_tree.fromJSON( json , baseUri ) )\n\t\t\t\t\t})\n\n\t\t\t\tcase json instanceof Date :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\tvalue : json.toISOString() ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t\tdefault :\n\n\t\t\t\t\tif( typeof json[ $mol_tree_convert ] === 'function' ) {\n\t\t\t\t\t\treturn json[ $mol_tree_convert ]()\n\t\t\t\t\t}\n\n\t\t\t\t\tif( typeof json.toJSON === 'function' ) {\n\t\t\t\t\t\treturn $mol_tree.fromJSON( json.toJSON() )\n\t\t\t\t\t}\n\n\t\t\t\t\tif( json instanceof Error ) {\n\t\t\t\t\t\tconst { name , message , stack } = json\n\t\t\t\t\t\tjson = { ... json , name , message ,  stack }\n\t\t\t\t\t}\n\n\t\t\t\t\tvar sub : $mol_tree[] = []\n\t\t\t\t\t\n\t\t\t\t\tfor( var key in json ) {\n\n\t\t\t\t\t\tif( json[ key ] === undefined ) continue\n\n\t\t\t\t\t\tconst subsub = $mol_tree.fromJSON( json[ key ] , baseUri )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( /^[^\\n\\t\\\\ ]+$/.test( key ) ) {\n\n\t\t\t\t\t\t\tvar child = new $mol_tree({\n\t\t\t\t\t\t\t\ttype : key ,\n\t\t\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\t\t\tsub : [ subsub ] ,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar child = new $mol_tree({\n\t\t\t\t\t\t\t\tvalue : key ,\n\t\t\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\t\t\tsub : [ subsub ] ,\n\t\t\t\t\t\t\t} )\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsub.push( child )\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : \"*\" ,\n\t\t\t\t\t\tsub : sub ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tget uri() {\n\t\t\treturn this.baseUri + '#' + this.row + ':' + this.col\n\t\t}\n\t\t\n\t\t/** Serializas to tree format. */\n\t\ttoString( prefix = '' ) : string {\n\t\t\tvar output = ''\n\t\t\t\n\t\t\tif( this.type.length ) {\n\t\t\t\tif( !prefix.length ) {\n\t\t\t\t\tprefix = \"\\t\";\n\t\t\t\t}\n\t\t\t\toutput += this.type\n\t\t\t\tif( this.sub.length == 1 ) {\n\t\t\t\t\treturn output + ' ' + this.sub[ 0 ].toString( prefix )\n\t\t\t\t}\n\t\t\t\toutput += \"\\n\"\n\t\t\t} else if( this.data.length || prefix.length ) {\n\t\t\t\toutput += \"\\\\\" + this.data + \"\\n\"\n\t\t\t}\n\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\toutput += prefix\n\t\t\t\toutput += child.toString( prefix + \"\\t\" )\n\t\t\t}\n\t\t\t\n\t\t\treturn output\n\t\t}\n\t\t\n\t\t/**\n\t\t * Serializes AST to json.tree lang.\n\t\t * @todo Move to $mol_tree_json_to\n\t\t */\n\t\ttoJSON() : any {\n\t\t\tif( !this.type ) return this.value\n\t\t\t\n\t\t\tif( this.type === 'true' ) return true\n\t\t\tif( this.type === 'false' ) return false\n\t\t\tif( this.type === 'null' ) return null\n\t\t\t\n\t\t\tif( this.type === '*' ) {\n\t\t\t\tvar obj = {}\n\t\t\t\tfor( var child of this.sub ) {\n\t\t\t\t\tif( child.type === '-' ) continue\n\t\t\t\t\tvar key = child.type || child.clone({ sub : child.sub.slice( 0 , child.sub.length - 1 ) }).value\n\t\t\t\t\tvar val = child.sub[ child.sub.length - 1 ].toJSON()\n\t\t\t\t\tif( val !== undefined ) ( obj as any )[ key ] = val\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === '/' ) {\n\t\t\t\tvar res : any[] = []\n\t\t\t\tthis.sub.forEach(\n\t\t\t\t\tchild => {\n\t\t\t\t\t\tif( child.type === '-' ) return\n\t\t\t\t\t\tvar val = child.toJSON()\n\t\t\t\t\t\tif( val !== undefined ) res.push( val )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\treturn res\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === 'time' ) {\n\t\t\t\treturn new Date( this.value )\n\t\t\t}\n\t\t\t\n\t\t\tconst numb = Number( this.type ) \n\t\t\tif( !Number.isNaN( numb ) || this.type === 'NaN' ) return numb\n\t\t\t\n\t\t\tthrow new Error( `Unknown type (${this.type}) at ${this.uri}` )\n\t\t}\n\t\t\n\t\tget value() {\n\t\t\tvar values : string[] = []\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\tif( child.type ) continue\n\t\t\t\tvalues.push( child.value )\n\t\t\t}\n\t\t\treturn this.data + values.join( \"\\n\" )\n\t\t}\n\t\t\n\t\t/** Makes new tree with node overrided by path. */\n\t\tinsert( value : $mol_tree , ...path : $mol_tree_path ) : $mol_tree {\n\t\t\tif( path.length === 0 ) return value\n\t\t\t\n\t\t\tconst type = path[0]\n\t\t\tif( typeof type === 'string' ) {\n\n\t\t\t\tlet replaced = false\n\t\t\t\tconst sub = this.sub.map( ( item , index )=> {\n\t\t\t\t\tif( item.type !== type ) return item\n\t\t\t\t\treplaced = true\n\t\t\t\t\treturn item.insert( value , ... path.slice( 1 ) )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tif( !replaced ) sub.push( new $mol_tree({ type }).insert( value , ... path.slice( 1 ) ) )\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub })\n\n\t\t\t} else if( typeof type === 'number' ) {\n\t\t\t\t\n\t\t\t\tconst sub = this.sub.slice()\n\t\t\t\tsub[ type ] = ( sub[ type ] || new $mol_tree ).insert( value , ... path.slice( 1 ) )\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub })\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub : ( ( this.sub.length === 0 ) ? [ new $mol_tree() ] : this.sub ).map( item => item.insert( value , ... path.slice( 1 ) ) ) })\n\n\t\t\t}\n\t\t}\n\n\t\t/** Query nodes by path. */\n\t\tselect( ...path : $mol_tree_path ) {\n\t\t\tvar next = [ this as $mol_tree ]\n\t\t\tfor( var type of path ) {\n\t\t\t\tif( !next.length ) break\n\t\t\t\tvar prev = next\n\t\t\t\tnext = []\n\n\t\t\t\tfor( var item of prev ) {\n\n\t\t\t\t\tswitch( typeof( type ) ) {\n\n\t\t\t\t\t\tcase 'string' :\n\t\t\t\t\t\t\tfor( var child of item.sub ) {\n\t\t\t\t\t\t\t\tif( !type || ( child.type == type ) ) {\n\t\t\t\t\t\t\t\t\tnext.push( child )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 'number' :\n\t\t\t\t\t\t\tif( type < item.sub.length ) next.push( item.sub[ type ] )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault : next.push( ... item.sub )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new $mol_tree( { sub : next } )\n\t\t}\n\t\t\n\t\t/** Filter subnodes by path or value. */\n\t\tfilter( path : string[] , value? : string ) {\n\t\t\tvar sub = this.sub.filter(\n\t\t\t\tfunction( item ) {\n\t\t\t\t\t\n\t\t\t\t\tvar found = item.select( ...path )\n\t\t\t\t\t\n\t\t\t\t\tif( value == null ) {\n\t\t\t\t\t\treturn Boolean( found.sub.length )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn found.sub.some( child => child.value == value )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn new $mol_tree( { sub : sub } )\n\t\t}\n\n\t\t/** @deprecated Use $mol_tree:hack */\n\t\ttransform( visit : ( stack : $mol_tree[] , sub : ()=> $mol_tree[] )=> $mol_tree | null , stack : $mol_tree[] = [] ) : $mol_tree | null {\n\t\t\tconst sub_stack = [ this , ...stack ]\n\t\t\treturn visit( sub_stack , ()=> this.sub.map( node => node.transform( visit , sub_stack ) ).filter( n => n ) as $mol_tree[] )\n\t\t}\n\n\t\t/** Transform tree through context with transformers */\n\t\thack( context : $mol_tree_context ) : $mol_tree {\n\t\t\t\n\t\t\tconst sub = ( [] as $mol_tree[] ).concat( ... this.sub.map( child => {\n\n\t\t\t\tconst handle = context[ child.type ] || context[ '' ]\n\t\t\t\tif( !handle ) $mol_fail( child.error( 'Handler not defined' ) )\n\t\t\t\t\n\t\t\t\treturn handle( child , context )\n\n\t\t\t} ) )\n\n\t\t\treturn this.clone({ sub })\n\t\t}\n\n\t\t/** Makes Error with node coordinates. */\n\t\terror( message : string ) {\n\t\t\treturn new Error( `${message}:\\n${ this } ${this.baseUri}:${this.row}:${this.col}` )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_term_color {\n\t\t\n\t\tstatic reset = this.ansi( 0, 0 )\n\t\tstatic bold = this.ansi( 1, 22 )\n\t\tstatic italic = this.ansi( 3, 23 )\n\t\tstatic underline = this.ansi( 4, 24 )\n\t\tstatic inverse = this.ansi( 7, 27 )\n\t\tstatic hidden = this.ansi( 8, 28 )\n\t\tstatic strike = this.ansi( 9, 29 )\n\t\t\n\t\tstatic gray = this.ansi( 90, 39 )\n\t\tstatic red = this.ansi( 91, 39 )\n\t\tstatic green = this.ansi( 92, 39 )\n\t\tstatic yellow = this.ansi( 93, 39 )\n\t\tstatic blue = this.ansi( 94, 39 )\n\t\tstatic magenta = this.ansi( 95, 39 )\n\t\tstatic cyan = this.ansi( 96, 39 )\n\t\t\n\t\tstatic Gray = ( str: string )=> this.inverse( this.gray( str ) )\n\t\tstatic Red = ( str: string )=> this.inverse( this.red( str ) )\n\t\tstatic Green = ( str: string )=> this.inverse( this.green( str ) )\n\t\tstatic Yellow = ( str: string )=> this.inverse( this.yellow( str ) )\n\t\tstatic Blue = ( str: string )=> this.inverse( this.blue( str ) )\n\t\tstatic Magenta = ( str: string )=> this.inverse( this.magenta( str ) )\n\t\tstatic Cyan = ( str: string )=> this.inverse( this.cyan( str ) )\n\t\t\n\t\tstatic ansi( open: number, close: number ) {\n\t\n\t\t\tif( typeof process === 'undefined' ) return String\n\t\t\tif( !process.stdout.isTTY ) return String\n\t\t\n\t\t\tconst prefix = `\\x1b[${open}m`\n\t\t\tconst postfix = `\\x1b[${close}m`\n\t\t\t\n\t\t\tconst suffix_regexp = new RegExp( postfix.replace( '[', '\\\\[' ), 'g' )\n\t\t\n\t\t\treturn function colorer( str: string ) {\n\t\t\n\t\t\t\tstr = String( str )\n\t\t\t\tif( str === '' ) return str\n\t\t\n\t\t\t\tconst suffix = str.replace( suffix_regexp, prefix )\n\t\t\t\treturn prefix + suffix + postfix\n\t\t\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_log3_node_make(\n\t\tlevel : keyof Console ,\n\t\toutput : 'stdout' | 'stderr',\n\t\ttype : string ,\n\t\tcolor: ( str: string )=> string ,\n\t) {\n\n\t\treturn function $mol_log3_logger(\n\t\t\tthis : $ ,\n\t\t\tevent : $mol_log3_event<{}> ,\n\t\t) {\n\n\t\t\tif( !event.time ) event = { time : new Date().toISOString() , ... event }\n\n\t\t\tconst tree = this.$mol_tree.fromJSON( event ).clone({ type })\n\t\t\tlet str = color( tree.toString() )\n\n\t\t\t;( this.console[ level ] as any )( str )\n\t\n\t\t\tconst self = this\n\t\t\treturn ()=> self.console.groupEnd()\n\n\t\t}\n\n\t}\n\n\t$.$mol_log3_come = $mol_log3_node_make( 'info' , 'stdout' , 'come' , $mol_term_color.blue )\n\t$.$mol_log3_done = $mol_log3_node_make( 'info' , 'stdout' , 'done' , $mol_term_color.green )\n\t$.$mol_log3_fail = $mol_log3_node_make( 'error' , 'stderr' , 'fail' , $mol_term_color.red )\n\t$.$mol_log3_warn = $mol_log3_node_make( 'warn' , 'stderr' , 'warn' , $mol_term_color.yellow )\n\t$.$mol_log3_rise = $mol_log3_node_make( 'log' , 'stdout' , 'rise' , $mol_term_color.magenta )\n\t$.$mol_log3_area = $mol_log3_node_make( 'log' , 'stdout' , 'area' , $mol_term_color.cyan )\n\n}\n","namespace $ {\n\texport function $mol_env() {\n\t\treturn {} as Record< string, string | undefined >\n\t}\n}\n","namespace $ {\n\t$.$mol_env = function $mol_env() {\n\t\treturn this.process.env\n\t}\n}\n","namespace $ {\n\texport function $mol_exec(\n\t\tthis : $ ,\n\t\tdir : string ,\n\t\tcommand : string ,\n\t\t...args : string[]\n\t) {\n\n\t\tlet [ app , ... args0 ] = command.split( ' ' )\n\t\targs = [ ... args0 , ... args ]\n\n\t\tthis.$mol_log3_come({\n\t\t\tplace: '$mol_exec' ,\n\t\t\tdir: $node.path.relative( '' , dir ) ,\n\t\t\tmessage: 'Run',\n\t\t\tcommand: `${app} ${ args.join(' ') }` ,\n\t\t})\n\n\t\tvar res = $node['child_process'].spawnSync(\n\t\t\tapp ,\n\t\t\targs,\n\t\t\t{\n\t\t\t\tcwd : $node.path.resolve( dir ) ,\n\t\t\t\tshell : true ,\n\t\t\t\tenv: this.$mol_env(),\n\t\t\t}\n\t\t)\n\t\t\n\t\tif( res.status || res.error ) return $mol_fail( res.error || new Error( res.stderr.toString() ) )\n\t\tif( !res.stdout ) res.stdout = Buffer.from([])\n\n\t\treturn res\n\t}\n}\n","namespace $ {\n\t\n\t$.$mol_dom_context = new $node.jsdom.JSDOM( '' , { url : 'https://localhost/' } ).window as any\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_state_local< Value > extends $mol_object {\n\t\t\n\t\tstatic 'native()' : Pick< Storage , 'getItem'|'setItem'|'removeItem' >\n\t\tstatic native() {\n\t\t\tif( this['native()'] ) return this['native()']\n\n\t\t\tcheck : try {\n\t\t\t\tconst native = $mol_dom_context.localStorage\n\t\t\t\tif( !native ) break check\n\t\t\t\t\n\t\t\t\tnative.setItem( '' , '' )\n\t\t\t\tnative.removeItem( '' )\n\t\t\t\treturn this['native()'] = native\n\t\t\t} catch( error: any ) {\n\t\t\t\tconsole.warn( error )\n\t\t\t}\n\n\t\t\treturn this['native()'] = {\n\t\t\t\tgetItem( key : string ) {\n\t\t\t\t\treturn this[ ':' + key ]\n\t\t\t\t} ,\n\t\t\t\tsetItem( key : string , value : string ) {\n\t\t\t\t\tthis[ ':' + key ] = value\n\t\t\t\t} ,\n\t\t\t\tremoveItem( key : string ) {\n\t\t\t\t\tthis[ ':' + key ] = void 0\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic changes( next?: StorageEvent ) { return next }\n\n\t\t@ $mol_mem_key\n\t\tstatic value< Value >(\n\t\t\tkey : string ,\n\t\t\tnext? : Value | null ,\n\t\t) : Value | null {\n\t\t\t\n\t\t\tthis.changes()\n\t\t\t\n\t\t\tif( next === void 0 ) return JSON.parse( this.native().getItem( key ) || 'null' )\n\t\t\t\n\t\t\tif( next === null ) this.native().removeItem( key )\n\t\t\telse this.native().setItem( key , JSON.stringify( next ) )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tprefix() { return '' }\n\t\t\n\t\tvalue( key : string , next? : Value ) {\n\t\t\treturn $mol_state_local.value( this.prefix() + '.' + key , next )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\tconst TextEncoder = globalThis.TextEncoder ?? $node.util.TextEncoder\n\n\tconst encoder = new TextEncoder()\n\n\texport function $mol_charset_encode(value: string) {\n\t\treturn encoder.encode(value)\n\t}\n\n}\n","namespace $ {\n\t\n\texport type $mol_int62_string = `${string}_${string}`\n\t\n\texport function $mol_int62_string_ensure( str: unknown ) {\n\t\tif( typeof str !== 'string' ) return null\n\t\treturn $mol_int62_from_string( str ) && str as $mol_int62_string\n\t}\n\t\n\texport type $mol_int62_pair = {\n\t\treadonly lo: number,\n\t\treadonly hi: number,\n\t}\n\t\n\texport const $mol_int62_max = ( 2 ** 30 ) - 1\n\texport const $mol_int62_min = - ( 2 ** 30 )\n\texport const $mol_int62_range = $mol_int62_max - $mol_int62_min + 1\n\t\n\texport function $mol_int62_to_string( { lo, hi }: $mol_int62_pair ) {\n\t\tlo = ( lo + $mol_int62_range ) % $mol_int62_range\n\t\thi = ( hi + $mol_int62_range ) % $mol_int62_range\n\t\treturn lo.toString(36) + '_' + hi.toString(36) as $mol_int62_string\n\t}\n\n\texport function $mol_int62_from_string( str: string ): null | $mol_int62_pair {\n\t\t\n\t\tconst [ str_lo, str_hi ] = str.split( '_' )\n\t\t\n\t\tconst int_lo = parseInt( str_lo, 36 )\n\t\tconst int_hi = parseInt( str_hi, 36 )\n\t\t\n\t\tif( int_lo.toString( 36 ) !== str_lo || int_hi.toString( 36 ) !== str_hi ) {\n\t\t\treturn null\n\t\t}\n\t\t\n\t\treturn {\n\t\t\tlo: ( int_lo - $mol_int62_min ) % $mol_int62_range + $mol_int62_min,\n\t\t\thi: ( int_hi - $mol_int62_min ) % $mol_int62_range + $mol_int62_min,\n\t\t} as const\n\t\t\n\t}\n\n\texport function $mol_int62_compare(\n\t\tleft_lo: number,\n\t\tleft_hi: number,\n\t\tright_lo: number,\n\t\tright_hi: number,\n\t) {\n\t\treturn ( right_hi - left_hi ) || ( right_lo - left_lo )\n\t}\n\n\texport function $mol_int62_inc(\n\t\tlo: number,\n\t\thi: number,\n\t\tmax = $mol_int62_max,\n\t): $mol_int62_pair {\n\t\tif( lo === max ) {\n\t\t\treturn { lo: -max, hi: hi + 1 }\n\t\t} else {\n\t\t\treturn { lo: lo + 1, hi }\n\t\t}\n\t}\n\n\texport function $mol_int62_random(): $mol_int62_pair {\n\t\treturn {\n\t\t\tlo: Math.floor( Math.random() * $mol_int62_range + $mol_int62_min ),\n\t\t\thi: Math.floor( Math.random() * $mol_int62_range + $mol_int62_min ),\n\t\t}\n\t}\n\n\texport function $mol_int62_hash_string( str: string ) {\n\t\treturn $mol_int62_to_string(\n\t\t\t$mol_int62_hash_buffer(\n\t\t\t\t$mol_charset_encode( str ),\n\t\t\t)\n\t\t)\n\t}\n\t\n\texport function $mol_int62_hash_buffer( buf: Uint8Array, seed = { lo: 0, hi: 0 } ): $mol_int62_pair {\n\t\t\n\t\tlet h1 = 0xdeadbeef ^ seed.lo\n\t\tlet h2 = 0x41c6ce57 ^ seed.hi\n\t\t\n\t\tfor( const byte of buf ) {\n\t\t\th1 = Math.imul( h1 ^ byte, 2654435761 )\n\t\t\th2 = Math.imul( h2 ^ byte, 1597334677 )\n\t\t}\n\t\t\n\t\th1 = Math.imul( h1 ^ ( h1 >>> 16 ), 2246822507 ) ^ Math.imul( h2 ^ ( h2 >>> 13 ), 3266489909 )\n\t\th2 = Math.imul( h2 ^ ( h2 >>> 16 ), 2246822507 ) ^ Math.imul( h1 ^ ( h1 >>> 13 ), 3266489909 )\n\t\t\n\t\treturn { lo: h1 << 1 >> 1, hi: h2 << 1 >> 1 }\n\t}\n\t\n}\n","namespace $ {\n\texport var $mol_crypto_native = $node.crypto.webcrypto\n}\n","namespace $ {\n\n\t/** @FIXME Need polyfill for Safari and Node (https://github.com/microsoft/MSR-JavaScript-Crypto/) */\n\tconst algorithm = {\n\t\tname: 'ECDSA',\n\t\thash: 'SHA-256',\n\t\tnamedCurve: \"P-256\",\n\t}\n\t\n\t/** Asymmetric signing pair with shortest payload */\n\texport async function $mol_crypto_auditor_pair( this: $ ) {\n\t\t\n\t\tconst pair = await $mol_crypto_native.subtle.generateKey(\n\t\t\talgorithm,\n\t\t\ttrue,\n\t\t\t[ 'sign', 'verify' ]\n\t\t)\n\t\t\n\t\treturn {\n\t\t\t\n\t\t\tpublic: new $mol_crypto_auditor_public(\n\t\t\t\tpair.publicKey as CryptoKey & { type: 'public' }\n\t\t\t),\n\t\t\t\n\t\t\tprivate: new $mol_crypto_auditor_private(\n\t\t\t\tpair.privateKey as CryptoKey & { type: 'private' }\n\t\t\t),\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t/** Asymmetric signing public key wrapper with shortest payload */\n\texport class $mol_crypto_auditor_public extends Object {\n\t\t\n\t\t/** Key size in bytes. */\n\t\tstatic size = 86\n\t\t\n\t\tconstructor(\n\t\t\treadonly native: CryptoKey & { type: 'public' }\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tstatic async from( serial: string ) {\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.importKey(\n\t\t\t\t\t'jwk',\n\t\t\t\t\t{\n\t\t\t\t\t\tcrv: \"P-256\",\n\t\t\t\t\t\text: true,\n\t\t\t\t\t\tkey_ops: ['verify'],\n\t\t\t\t\t\tkty: \"EC\",\n\t\t\t\t\t\tx: serial.slice( 0, 43 ),\n\t\t\t\t\t\ty: serial.slice( 43, 86 ),\n\t\t\t\t\t},\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'verify' ],\n\t\t\t\t) as CryptoKey & { type: 'public' }\n\t\t\t)\n\t\t}\n\t\t\n\t\t/** 62 bytes */\n\t\tasync serial(): Promise< string > {\n\t\t\tconst { x, y } = await $mol_crypto_native.subtle.exportKey(\n\t\t\t\t'jwk',\n\t\t\t\tthis.native,\n\t\t\t)\n\t\t\treturn x! + y!\n\t\t}\n\t\t\n\t\tasync verify( data: BufferSource, sign: BufferSource ) {\n\t\t\treturn await $mol_crypto_native.subtle.verify(\n\t\t\t\talgorithm,\n\t\t\t\tthis.native,\n\t\t\t\tsign,\n\t\t\t\tdata,\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\t/** Asymmetric signing private key wrapper with shortest payload */\n\texport class $mol_crypto_auditor_private extends Object {\n\t\t\n\t\t/** Key size in bytes. */\n\t\tstatic size = 129\n\t\t\n\t\tconstructor(\n\t\t\treadonly native: CryptoKey & { type: 'private' }\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\n\t\tstatic async from( serial: string ) {\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.importKey(\n\t\t\t\t\t'jwk',\n\t\t\t\t\t{\n\t\t\t\t\t\tcrv: \"P-256\",\n\t\t\t\t\t\text: true,\n\t\t\t\t\t\tkey_ops: ['sign'],\n\t\t\t\t\t\tkty: \"EC\",\n\t\t\t\t\t\tx: serial.slice( 0, 43 ),\n\t\t\t\t\t\ty: serial.slice( 43, 86 ),\n\t\t\t\t\t\td: serial.slice( 86, 129 ),\n\t\t\t\t\t},\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'sign' ],\n\t\t\t\t) as CryptoKey & { type: 'private' }\n\t\t\t)\n\t\t}\n\t\t\n\t\t/** 129 bytes */\n\t\tasync serial(): Promise< string > {\n\t\t\tconst { x, y, d } = await $mol_crypto_native.subtle.exportKey(\n\t\t\t\t'jwk',\n\t\t\t\tthis.native,\n\t\t\t)\n\t\t\treturn x! + y! + d!\n\t\t}\n\t\t\n\t\t/** 64 bytes */\n\t\tasync sign( data: BufferSource ) {\n\t\t\t\n\t\t\treturn await $mol_crypto_native.subtle.sign(\n\t\t\t\talgorithm,\n\t\t\t\tthis.native,\n\t\t\t\tdata\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Makes public key from private */\n\t\tasync public() {\n\t\t\treturn await $mol_crypto_auditor_public.from(\n\t\t\t\t$mol_crypto_auditor_private_to_public( await this.serial() )\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\t/** Sign size in bytes. */\n\texport const $mol_crypto_auditor_sign_size = 64\n\t\n\texport function $mol_crypto_auditor_private_to_public( serial: string ) {\n\t\treturn serial.slice( 0, 86 )\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport enum $hyoo_crowd_peer_level {\n\t\tget = 0,\n\t\tadd = 1,\n\t\tmod = 2,\n\t\tlaw = 3,\n\t}\n\t\n\texport class $hyoo_crowd_peer extends Object {\n\t\t\n\t\tid: $mol_int62_string\n\t\t\n\t\tconstructor(\n\t\t\treadonly key_public: $mol_crypto_auditor_public,\n\t\t\treadonly key_public_serial: string,\n\t\t\treadonly key_private: $mol_crypto_auditor_private,\n\t\t\treadonly key_private_serial: string,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.id = $mol_int62_hash_string( this.key_public_serial )\n\t\t}\n\t\t\n\t\tstatic async generate() {\n\t\t\t\n\t\t\tconst pair = await $$.$mol_crypto_auditor_pair()\n\t\t\tconst serial = await pair.private.serial()\n\t\t\t\n\t\t\treturn new this(\n\t\t\t\tpair.public,\n\t\t\t\t$mol_crypto_auditor_private_to_public( serial ),\n\t\t\t\tpair.private,\n\t\t\t\tserial,\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\tstatic async restore(\n\t\t\tserial: string,\n\t\t) {\n\t\t\t\n\t\t\treturn new this(\n\t\t\t\tawait $$.$mol_crypto_auditor_public.from( serial ),\n\t\t\t\t$mol_crypto_auditor_private_to_public( serial ),\n\t\t\t\tawait $$.$mol_crypto_auditor_private.from( serial ),\n\t\t\t\tserial,\n\t\t\t)\n\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport async function $hyoo_sync_peer( path: string ) {\n\t\t\n\t\tlet serial = $mol_state_local.value( '$hyoo_sync_peer' ) as string | null\n\t\tif( typeof serial === 'string' ) {\n\t\t\treturn await $hyoo_crowd_peer.restore( serial )\n\t\t}\n\t\t\n\t\tconst peer = await $hyoo_crowd_peer.generate()\n\t\t$mol_state_local.value( '$hyoo_sync_peer', peer.key_private_serial )\n\t\treturn peer\n\t\t\n\t}\n\n\t\n}\n","namespace $ {\n\n\texport class $mol_wrapper extends $mol_object2 {\n\n\t\tstatic wrap : ( task : ( ... ags : any[] )=> any )=> ( ... ags : any[] )=> any\n\t\t\n\t\tstatic run< Result >( task : ()=> Result ) : Result {\n\t\t\treturn this.func( task )()\n\t\t}\n\t\n\t\tstatic func< Args extends any[] , Result , Host = void >(\n\t\t\tfunc : ( this : Host , ... args : Args )=> Result\n\t\t) : ( this : Host , ... args : Args )=> Result {\n\t\t\treturn this.wrap( func )\n\t\t}\n\n\t\tstatic get class() {\n\n\t\t\treturn < Class extends new ( ... args : any[] )=> any >(\n\t\t\t\tClass : Class\n\t\t\t) => {\n\n\t\t\t\ttype Args = ConstructorParameters< Class >\n\t\t\t\ttype Result = InstanceType< Class >\n\n\t\t\t\tconst construct = ( target : new ( ... args : Args )=> Result , args : Args )=> new Class( ... args )\n\n\t\t\t\tconst handler = {\n\t\t\t\t\tconstruct : this.func( construct )\n\t\t\t\t}\n\n\t\t\t\thandler[ Symbol.toStringTag ] = Class.name + '#'\n\n\t\t\t\treturn new Proxy( Class , handler )\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tstatic get method() {\n\t\t\t\n\t\t\treturn (\n\t\t\t\tobj : object,\n\t\t\t\tname : PropertyKey,\n\t\t\t\tdescr : PropertyDescriptor,\n\t\t\t) => {\n\t\t\t\tdescr.value = this.func( descr.value! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tstatic get field() {\n\t\t\t\n\t\t\treturn <\n\t\t\t\tHost ,\n\t\t\t\tField extends keyof Host ,\n\t\t\t\tArgs extends any[] ,\n\t\t\t\tResult ,\n\t\t\t>(\n\t\t\t\tobj : Host ,\n\t\t\t\tname : Field ,\n\t\t\t\tdescr : TypedPropertyDescriptor< Result >\n\t\t\t) => {\n\t\t\t\tdescr.get = descr.set = this.func( descr.get! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_memo extends $mol_wrapper {\n\t\t\n\t\tstatic wrap< This extends object , Value >( task : ( this : This , next? : Value )=> Value ) {\n\n\t\t\tconst store = new WeakMap< This , Value >()\n\n\t\t\treturn function( this : This , next? : Value ) {\n\n\t\t\t\tif( next === undefined && store.has( this ) ) return store.get( this )\n\t\t\t\t\n\t\t\t\tconst val = task.call( this , next ) ?? next\n\t\t\t\t\n\t\t\t\tstore.set( this , val! )\n\t\t\t\t\n\t\t\t\treturn val\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t}\n\n}\n",null,"namespace $ {\n\n\texport function $mol_data_setup<\n\t\tValue extends $mol_data_value ,\n\t\tConfig = never\n\t>(\n\t\tvalue : Value ,\n\t\tconfig : Config ,\n\t) {\n\t\t\n\t\treturn Object.assign( value , {\n\t\t\tconfig ,\n\t\t\tValue : null as any as ReturnType< Value >\n\t\t} )\n\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_diff_path< Item >( ... paths : Item[][] ) {\n\n\t\tconst limit = Math.min( ... paths.map( path => path.length ) )\n\n\t\tlookup: for( var i = 0 ; i < limit ; ++i ) {\n\n\t\t\tconst first = paths[0][i]\n\n\t\t\tfor( let j = 1 ; j < paths.length ; ++j ) {\n\t\t\t\tif( paths[j][i] !== first ) break lookup\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tprefix : paths[0].slice( 0 , i ) ,\n\t\t\tsuffix : paths.map( path => path.slice( i ) ) ,\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_error_mix extends Error {\n\n\t\terrors : Error[]\n\n\t\tconstructor( message : string , ... errors : Error[] ) {\n\n\t\t\tsuper( message )\n\t\t\t\n\t\t\tthis.errors = errors\n\n\t\t\tif( errors.length ) {\n\n\t\t\t\tconst stacks = [ ... errors.map( error => error.stack ) , this.stack ]\n\t\t\t\t\n\t\t\t\tconst diff = $mol_diff_path( ... stacks.map( stack => {\n\t\t\t\t\tif( !stack ) return []\n\t\t\t\t\treturn stack.split( '\\n' ).reverse()\n\t\t\t\t} ) )\n\t\t\t\t\n\t\t\t\tconst head = diff.prefix.reverse().join( '\\n' )\n\t\t\t\tconst tails = diff.suffix.map( path => path.reverse().map( line => line.replace( /^(?!\\s+at)/ , '\\tat (.) ' ) ).join( '\\n' ) ).join( '\\n\\tat (.) -----\\n' )\n\n\t\t\t\tthis.stack = `Error: ${ this.constructor.name }\\n\\tat (.) /\"\"\"\\\\\\n${ tails }\\n\\tat (.) \\\\___/\\n${ head }`\n\t\t\t\tthis.message += errors.map( error => '\\n' + error.message ).join( '' )\n\n\t\t\t}\n\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.message\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_data_error extends $mol_error_mix {}\n\n}\n","namespace $ {\n\n\texport function $mol_data_enum<\n\t\tDict extends Record< number | string , number | string >\n\t>( name : string , dict : Dict ) {\n\n\t\ttype Value = Dict[ keyof Dict ]\n\n\t\tconst index = {} as Record< Value , keyof Dict >\n\n\t\tfor( let key in dict ) {\n\t\t\tif( Number.isNaN( Number( key ) ) ) {\n\t\t\t\tindex[ dict[ key ] ] = key\n\t\t\t}\n\t\t}\n\n\t\treturn $mol_data_setup( ( value : Value ) => {\n\n\t\t\tif ( typeof index[ value ] !== 'string' ) {\n\t\t\t\treturn $mol_fail( new $mol_data_error( `${value} is not value of ${name} enum` ) )\n\t\t\t}\n\n\t\t\treturn value\n\n\t\t} , { name , dict } )\n\n\t}\n\t\n}\n",null,"namespace $ {\n\n\tconst decoders = {} as { [ key in $mol_charset_encoding ]?: TextDecoder }\n\n\texport function $mol_charset_decode(\n\t\tbuffer: BufferSource,\n\t\tencoding: $mol_charset_encoding = 'utf8',\n\t) {\n\t\t\n\t\tlet decoder = decoders[ encoding ]\n\t\tif( !decoder ) decoder = decoders[ encoding ] = new TextDecoder( encoding )\n\t\t\n\t\treturn decoder.decode( buffer )\n\t}\n\n}\n","namespace $ {\n\t\n\texport type $hyoo_crowd_unit_id = `${ $mol_int62_string }!${ $mol_int62_string }`\n\t\n\tconst level = $mol_data_enum( 'level', $hyoo_crowd_peer_level )\n\t\n\texport enum $hyoo_crowd_unit_kind {\n\t\t\n\t\t/** Grab Land by King */\n\t\tgrab,\n\t\t\n\t\t/** Join Peer to Land */\n\t\tjoin,\n\t\t\n\t\t/* Give Level for Peer for Land */\n\t\tgive,\n\t\t\n\t\t/** Add Data to Land by joined Peer with right Level */\n\t\tdata,\n\t\t\n\t}\n\t\n\texport enum $hyoo_crowd_unit_group {\n\t\t\n\t\t/** Join and Give units */\n\t\tauth = 0,\n\t\t\n\t\t/** Data units */\n\t\tdata = 1,\n\t\t\n\t}\n\t\n\t/** Independent part of data. */\n\texport class $hyoo_crowd_unit extends Object {\n\t\t\n\t\tconstructor(\n\t\n\t\t\t/** Identifier of land. */\n\t\t\treadonly land: $mol_int62_string,\n\t\t\t\n\t\t\t/** Identifier of auth. */\n\t\t\treadonly auth: $mol_int62_string,\n\t\t\t\n\t\t\t\n\t\t\t/** Identifier of head node. */\n\t\t\treadonly head: $mol_int62_string,\n\t\t\t\n\t\t\t/** Self identifier inside head after prev before next. */\n\t\t\treadonly self: $mol_int62_string,\n\t\t\t\n\t\t\t\n\t\t\t/** Identifier of next node. */\n\t\t\treadonly next: $mol_int62_string,\n\t\t\t\n\t\t\t/** Identifier of prev node. */\n\t\t\treadonly prev: $mol_int62_string,\n\t\t\t\n\t\t\t\n\t\t\t/** Monotonic real clock. 4B / info = 31b */\n\t\t\treadonly time: number,\n\t\t\t\n\t\t\t/** type-size = bin<0 | null=0 | json>0 */\n\t\t\t/** Associated atomic data. mem = 4B+ / bin = (0|8B)+ / type-size-info = 16b */\n\t\t\treadonly data: unknown,\n\t\t\t\n\t\t\tpublic bin: $hyoo_crowd_unit_bin | null\n\t\t\t\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tkind() {\n\t\t\t\n\t\t\tif( this.head === this.self && this.auth === this.self ) {\n\t\t\t\tif( this.head === this.land ) {\n\t\t\t\t\treturn $hyoo_crowd_unit_kind.grab\n\t\t\t\t} else {\n\t\t\t\t\treturn $hyoo_crowd_unit_kind.join\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif( this.head === this.land ) {\n\t\t\t\treturn  $hyoo_crowd_unit_kind.give\n\t\t\t}\n\t\t\t\n\t\t\treturn $hyoo_crowd_unit_kind.data\n\t\t}\n\t\t\n\t\tgroup() {\n\t\t\treturn this.kind() === $hyoo_crowd_unit_kind.data\n\t\t\t\t? $hyoo_crowd_unit_group.data\n\t\t\t\t: $hyoo_crowd_unit_group.auth\n\t\t}\n\t\t\n\t\tlevel() {\n\t\t\tswitch( this.kind() ) {\n\t\t\t\tcase $hyoo_crowd_unit_kind.grab: return $hyoo_crowd_peer_level.law\n\t\t\t\tcase $hyoo_crowd_unit_kind.give: return level( this.data as any )\n\t\t\t\tdefault: $mol_fail( new Error( `Wrong unit kind for getting level: ${ this.kind() }` ) )\n\t\t\t}\n\t\t}\n\t\t\n\t\t[Symbol.toPrimitive]() {\n\t\t\treturn JSON.stringify( this )\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\t\n\t\t\tswitch( this.kind() ) {\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.grab:\n\t\t\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t\t\t' 👑',\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.join:\n\t\t\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t\t\t$mol_dev_format_shade(\n\t\t\t\t\t\t\t' 🔑 ',\n\t\t\t\t\t\t\tthis.self,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.give:\n\t\t\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t\t\t$mol_dev_format_shade(\n\t\t\t\t\t\t\t' 🏅 ',\n\t\t\t\t\t\t\tthis.self,\n\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$mol_dev_format_native( $hyoo_crowd_peer_level[ this.data as number ] ?? this.data ),\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t\tcase $hyoo_crowd_unit_kind.data:\n\t\t\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t\t\t$mol_dev_format_shade(\n\t\t\t\t\t\t\t' 📦 ',\n\t\t\t\t\t\t\tthis.head,\n\t\t\t\t\t\t\t'!',\n\t\t\t\t\t\t\tthis.self,\n\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$mol_dev_format_native( this.data ),\n\t\t\t\t\t)\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tconst offset = {\n\t\t\n\t\tland_lo: 0,\n\t\tland_hi: 4,\n\t\tauth_lo: 8,\n\t\tauth_hi: 12,\n\t\t\n\t\thead_lo: 16,\n\t\thead_hi: 20,\n\t\tself_lo: 24,\n\t\tself_hi: 28,\n\t\t\n\t\tnext_lo: 32,\n\t\tnext_hi: 36,\n\t\tprev_lo: 40,\n\t\tprev_hi: 44,\n\t\t\n\t\ttime: 48,\n\t\tsize: 54,\n\t\tdata: 56,\n\t\t\n\t} as const\n\t\n\texport class $hyoo_crowd_unit_bin extends DataView {\n\t\t\n\t\tstatic from_buffer( buffer: Int16Array ) {\n\t\t\tconst size = Math.ceil( Math.abs( buffer[ offset.size / 2 ] ) / 8 ) * 8 + offset.data + $mol_crypto_auditor_sign_size\n\t\t\treturn new this( buffer.slice( 0, size / 2 ).buffer )\n\t\t}\n\t\t\n\t\tstatic from_unit( unit: $hyoo_crowd_unit ) {\n\t\t\t\n\t\t\tif( unit.bin ) return unit.bin\n\t\t\t\n\t\t\tconst type = unit.data === null\n\t\t\t\t? 0\n\t\t\t\t: unit.data instanceof Uint8Array\n\t\t\t\t\t? -1\n\t\t\t\t\t: 1\n\t\t\t\n\t\t\tconst buff = type === 0 ? null\n\t\t\t\t: type > 0 ? $mol_charset_encode( JSON.stringify( unit.data ) )\n\t\t\t\t: unit.data as Uint8Array\n\t\t\t\n\t\t\tconst size = buff?.byteLength ?? 0\n\t\t\tif( type > 0 && size > 2**15 - 1 ) throw new Error( `Too large json data: ${size} > ${ 2**15 - 1 }` )\n\t\t\tif( type < 0 && size > 2**15 ) throw new Error( `Too large binary data: ${size} > ${ 2**15 }` )\n\t\t\t\n\t\t\tconst total = offset.data + Math.ceil( size / 8 ) * 8 + $mol_crypto_auditor_sign_size\n\t\t\t\n\t\t\tconst mem = new Uint8Array( total )\n\t\t\tconst bin = new $hyoo_crowd_unit_bin( mem.buffer )\n\t\t\t\n\t\t\tconst land = $mol_int62_from_string( unit.land )!\n\t\t\tbin.setInt32( offset.land_lo, land.lo, true )\n\t\t\tbin.setInt32( offset.land_hi, land.hi, true )\n\t\t\tconst auth = $mol_int62_from_string( unit.auth )!\n\t\t\tbin.setInt32( offset.auth_lo, auth.lo, true )\n\t\t\tbin.setInt32( offset.auth_hi, auth.hi, true )\n\t\t\t\n\t\t\tconst head = $mol_int62_from_string( unit.head )!\n\t\t\tbin.setInt32( offset.head_lo, head.lo, true )\n\t\t\tbin.setInt32( offset.head_hi, head.hi, true )\n\t\t\tconst self = $mol_int62_from_string( unit.self )!\n\t\t\tbin.setInt32( offset.self_lo, self.lo, true )\n\t\t\tbin.setInt32( offset.self_hi, self.hi, true )\n\t\t\t\n\t\t\tconst next = $mol_int62_from_string( unit.next )!\n\t\t\tbin.setInt32( offset.next_lo, next.lo, true )\n\t\t\tbin.setInt32( offset.next_hi, next.hi, true )\n\t\t\tconst prev = $mol_int62_from_string( unit.prev )!\n\t\t\tbin.setInt32( offset.prev_lo, prev.lo, true )\n\t\t\tbin.setInt32( offset.prev_hi, prev.hi, true )\n\t\t\t\n\t\t\tbin.setInt32( offset.time, unit.time, true )\n\t\t\tbin.setInt16( offset.size, type * size, true )\n\t\t\t\n\t\t\tif( buff ) mem.set( buff, offset.data )\n\t\t\t\n\t\t\treturn bin\n\t\t}\n\t\t\n\t\tsign( next?: Uint8Array ) {\n\t\t\t\n\t\t\tconst sign_offset = this.byteOffset + this.byteLength - $mol_crypto_auditor_sign_size\n\t\t\t\n\t\t\tconst buff = new Uint8Array(\n\t\t\t\tthis.buffer,\n\t\t\t\tsign_offset,\n\t\t\t\t$mol_crypto_auditor_sign_size,\n\t\t\t)\n\t\t\t\n\t\t\tif( !next ) return buff\n\t\t\t\n\t\t\tbuff.set( next )\n\t\t\treturn buff\n\t\t\t\n\t\t}\n\t\t\n\t\t// land( next?: $mol_int62_pair ) {\n\t\t\t\n\t\t// \tif( next ) {\n\t\t\t\t\n\t\t// \t\tthis.setInt32( offset.land_lo, next.lo, true )\n\t\t// \t\tthis.setInt32( offset.land_hi, next.hi, true )\n\t\t// \t\treturn next\n\t\t\t\t\n\t\t// \t} else {\n\t\t\t\t\n\t\t// \t\treturn {\n\t\t// \t\t\tlo: this.getInt32( offset.land_lo, true ),\n\t\t// \t\t\thi: this.getInt32( offset.land_hi, true ),\n\t\t// \t\t}\n\t\t\t\t\n\t\t// \t}\n\n\t\t// }\n\t\t\n\t\tsize() {\n\t\t\treturn Math.ceil( Math.abs( this.getInt16( offset.size, true ) ) / 8 ) * 8 + offset.data + $mol_crypto_auditor_sign_size\n\t\t}\n\t\t\n\t\t// data() {\n\t\t// \tconst info = this.getUint16( offset.data )\n\t\t// \tconst size = Math.abs( info )\n\t\t// \tconst buf = new Uint8Array( this.buffer, this.byteOffset + offset.sens, size )\n\t\t// \tconst data = info > 0 ? JSON.parse( $mol_charset_decode( buf ) ) : info < 0 ? buf : null\n\t\t// \treturn data\n\t\t// }\n\t\t\n\t\tsens() {\n\t\t\treturn new Uint8Array(\n\t\t\t\tthis.buffer,\n\t\t\t\tthis.byteOffset,\n\t\t\t\tthis.size() - $mol_crypto_auditor_sign_size,\n\t\t\t)\n\t\t}\n\t\t\n\t\tunit(): $hyoo_crowd_unit {\n\t\t\t\n\t\t\tconst land = $mol_int62_to_string({\n\t\t\t\tlo: this.getInt32( offset.land_lo, true ) << 1 >> 1,\n\t\t\t\thi: this.getInt32( offset.land_hi, true ) << 1 >> 1,\n\t\t\t})\n\t\t\tconst auth = $mol_int62_to_string({\n\t\t\t\tlo: this.getInt32( offset.auth_lo, true ) << 1 >> 1,\n\t\t\t\thi: this.getInt32( offset.auth_hi, true ) << 1 >> 1,\n\t\t\t})\n\t\t\t\n\t\t\tconst head = $mol_int62_to_string({\n\t\t\t\tlo: this.getInt32( offset.head_lo, true ) << 1 >> 1,\n\t\t\t\thi: this.getInt32( offset.head_hi, true ) << 1 >> 1,\n\t\t\t})\n\t\t\tconst self = $mol_int62_to_string({\n\t\t\t\tlo: this.getInt32( offset.self_lo, true ) << 1 >> 1,\n\t\t\t\thi: this.getInt32( offset.self_hi, true ) << 1 >> 1,\n\t\t\t})\n\t\t\t\n\t\t\tconst next = $mol_int62_to_string({\n\t\t\t\tlo: this.getInt32( offset.next_lo, true ) << 1 >> 1,\n\t\t\t\thi: this.getInt32( offset.next_hi, true ) << 1 >> 1,\n\t\t\t})\n\t\t\tconst prev = $mol_int62_to_string({\n\t\t\t\tlo: this.getInt32( offset.prev_lo, true ) << 1 >> 1,\n\t\t\t\thi: this.getInt32( offset.prev_hi, true ) << 1 >> 1,\n\t\t\t})\n\t\t\t\n\t\t\tconst time = this.getInt32( offset.time, true ) << 1 >> 1\n\t\t\tconst type_size = this.getInt16( offset.size, true )\n\t\t\t\n\t\t\tlet data = null as unknown\n\t\t\t\n\t\t\tif( type_size ) {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tvar buff = new Uint8Array( this.buffer, this.byteOffset + offset.data, Math.abs( type_size ) )\n\t\t\t\t} catch( error: any ) {\n\t\t\t\t\terror['message'] += `\\nhead=${head};self=${self}`\n\t\t\t\t\t$mol_fail_hidden( error )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( type_size < 0 ) data = buff\n\t\t\t\telse data = JSON.parse( $mol_charset_decode( buff ) )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn new $hyoo_crowd_unit(\n\t\t\t\tland, auth,\n\t\t\t\thead, self,\n\t\t\t\tnext, prev,\n\t\t\t\ttime, data,\n\t\t\t\tthis,\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\texport function $hyoo_crowd_unit_compare(\n\t\tleft: $hyoo_crowd_unit,\n\t\tright: $hyoo_crowd_unit,\n\t) {\n\t\treturn ( left.group() - right.group() )\n\t\t\t|| ( left.time - right.time )\n\t\t\t\n\t\t\t|| ( ( left.auth > right.auth ) ? 1 : ( left.auth < right.auth ) ? -1 : 0 )\n\t\t\t|| ( ( left.self > right.self ) ? 1 : ( left.self < right.self ) ? -1 : 0 )\n\t\t\t|| ( ( left.head > right.head ) ? 1 : ( left.head < right.head ) ? -1 : 0 )\n\t\t\t|| ( ( left.prev > right.prev ) ? 1 : ( left.prev < right.prev ) ? -1 : 0 )\n\t\t\t|| ( ( left.next > right.next ) ? 1 : ( left.next < right.next ) ? -1 : 0 )\n\t\t\t|| ( ( left.land > right.land ) ? 1 : ( left.land < right.land ) ? -1 : 0 )\n\t\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** Internal int31 representation of current time. */\n\texport function $hyoo_crowd_time_now() {\n\t\treturn Math.floor( Date.now() / 100 ) - 1767e7\n\t}\n\t\n\t/** Returns unix timestamp for internal time representation. */\n\texport function $hyoo_crowd_time_stamp( time: number ) {\n\t\treturn 1767e9 + time * 100\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** Vector clock. Stores real timestamps. */\n\texport class $hyoo_crowd_clock extends Map<\n\t\t$mol_int62_string,\n\t\tnumber\n\t> {\n\t\t\n\t\tstatic begin = -1 * 2**30\n\t\t\n\t\t/** Maximum time for all peers. */\n\t\tlast_time = $hyoo_crowd_clock.begin\n\t\t\n\t\tconstructor(\n\t\t\tentries?: Iterable<\n\t\t\t\treadonly [ $mol_int62_string, number ]\n\t\t\t>\n\t\t) {\n\t\t\t\n\t\t\tsuper( entries )\n\t\t\tif( !entries ) return\n\t\t\t\n\t\t\tfor( const [ peer, time ] of entries ) {\n\t\t\t\tthis.see_time( time )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Synchronize this cloc with another. */\n\t\tsync( right: $hyoo_crowd_clock ) {\n\t\t\tfor( const [ peer, time ] of right ) {\n\t\t\t\tthis.see_peer( peer, time )\n\t\t\t}\n\t\t}\n\t\t\n\t\t/** Increase `last` to latest. */\n\t\tsee_time( time: number ) {\n\t\t\tif( time < this.last_time ) return\n\t\t\tthis.last_time = time\n\t\t}\n\t\t\n\t\t/** Add new `time` for `peer` and increase `last`. */\n\t\tsee_peer(\n\t\t\tpeer: $mol_int62_string,\n\t\t\ttime: number,\n\t\t) {\n\t\t\t\n\t\t\tif( !this.fresh( peer, time ) ) return\n\t\t\t\n\t\t\tthis.set( peer, time )\n\t\t\tthis.see_time( time )\n\t\t\t\n\t\t}\n\t\t\n\t\tsee_bin( bin: $hyoo_crowd_clock_bin, group: $hyoo_crowd_unit_group ) {\n\t\t\t\n\t\t\tfor( let cursor = offset.clocks; cursor < bin.byteLength; cursor += 16 ) {\n\t\t\t\t\n\t\t\t\tthis.see_peer(\n\t\t\t\t\t$mol_int62_to_string({\n\t\t\t\t\t\tlo: bin.getInt32( cursor + 0, true ) << 1 >> 1,\n\t\t\t\t\t\thi: bin.getInt32( cursor + 4, true ) << 1 >> 1,\n\t\t\t\t\t}),\n\t\t\t\t\tbin.getInt32( cursor + 8 + 4 * group, true )\n\t\t\t\t)\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t/** Checks if time from future. */\n\t\tfresh(\n\t\t\tpeer: $mol_int62_string,\n\t\t\ttime: number,\n\t\t) {\n\t\t\treturn time > this.time( peer )\n\t\t}\n\t\t\n\t\t/** Checks if this clock from future of another. */\n\t\tahead( clock: $hyoo_crowd_clock ) {\n\t\t\t\n\t\t\tfor( const [ peer, time ] of this ) {\n\t\t\t\tif( clock.fresh( peer, time ) ) return true\n\t\t\t}\n\t\t\t\n\t\t\treturn false\n\t\t}\n\t\t\n\t\ttime( peer: $mol_int62_string ) {\n\t\t\treturn this.get( peer ) ?? $hyoo_crowd_clock.begin\n\t\t}\n\t\t\n\t\tnow() {\n\t\t\treturn $hyoo_crowd_time_now()\n\t\t}\n\t\t\n\t\tlast_stamp() {\n\t\t\treturn $hyoo_crowd_time_stamp( this.last_time )\n\t\t}\n\t\t\n\t\t/** Gererates new time for peer that greater then other seen. */\n\t\ttick( peer: $mol_int62_string ) {\n\t\t\t\n\t\t\tlet time = this.now()\n\t\t\t\n\t\t\tif( time <= this.last_time ) {\n\t\t\t\ttime = this.last_time + 1\n\t\t\t}\n\t\t\t\n\t\t\tthis.see_peer( peer, time )\n\t\t\t\n\t\t\treturn time\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t$mol_dev_format_shade( ' ' + new Date( this.last_stamp() ).toISOString().replace( 'T', ' ' ) ) ,\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\tconst offset = {\n\t\t\n\t\tland_lo: 0,\n\t\tland_hi: 4,\n\t\t\n\t\tclocks: 8,\n\t\t\n\t} as const\n\t\n\texport class $hyoo_crowd_clock_bin extends DataView {\n\t\t\n\t\tstatic from(\n\t\t\tland_id: $mol_int62_string,\n\t\t\tclocks: readonly[ $hyoo_crowd_clock, $hyoo_crowd_clock ]\n\t\t) {\n\t\t\t\n\t\t\tconst size = offset.clocks + clocks[0].size * 16\n\t\t\tconst mem = new Uint8Array( size )\n\t\t\tconst bin = new $hyoo_crowd_clock_bin( mem.buffer )\n\t\t\t\n\t\t\tconst land = $mol_int62_from_string( land_id )!\n\t\t\tbin.setInt32( offset.land_lo, land.lo ^ ( 1 << 31 ), true )\n\t\t\tbin.setInt32( offset.land_hi, land.hi, true )\n\t\t\t\n\t\t\tlet cursor = offset.clocks\n\t\t\tfor( const [ peer_id, time ] of clocks[0] ) {\n\t\t\t\t\n\t\t\t\tconst peer = $mol_int62_from_string( peer_id )!\n\t\t\t\t\n\t\t\t\tbin.setInt32( cursor + 0, peer.lo, true )\n\t\t\t\tbin.setInt32( cursor + 4, peer.hi, true )\n\t\t\t\tbin.setInt32( cursor + 8, time, true )\n\t\t\t\tbin.setInt32( cursor + 12, clocks[1].get( peer_id ) ?? $hyoo_crowd_clock.begin, true )\n\t\t\t\t\n\t\t\t\tcursor += 16\n\t\t\t}\n\t\t\t\n\t\t\treturn bin\n\t\t}\n\t\t\n\t\tland() {\n\t\t\treturn $mol_int62_to_string({\n\t\t\t\tlo: this.getInt32( offset.land_lo, true ) << 1 >> 1,\n\t\t\t\thi: this.getInt32( offset.land_hi, true ) << 1 >> 1,\n\t\t\t})\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** Stateless non-unique adapter to CROWD Tree for given Head. */\n\texport class $hyoo_crowd_node extends $mol_object2 {\n\t\t\n\t\tconstructor(\n\t\t\treadonly land = new $hyoo_crowd_land,\n\t\t\treadonly head: $mol_int62_string = '0_0',\n\t\t) { super() }\n\t\t\n\t\tstatic for< Node extends typeof $hyoo_crowd_node >(\n\t\t\tthis: Node,\n\t\t\tland: $hyoo_crowd_land,\n\t\t\thead: $mol_int62_string,\n\t\t) {\n\t\t\treturn new this( land, head ) as InstanceType< Node >\n\t\t}\n\t\t\n\t\tid() {\n\t\t\treturn this.head === '0_0'\n\t\t\t\t? this.land.id()\n\t\t\t\t: `${ this.land.id() }!${ this.head }` as $hyoo_crowd_unit_id\n\t\t}\n\t\t\n\t\tworld() {\n\t\t\treturn this.land.world()\n\t\t}\n\t\t\n\t\t/** Returns another representation of this node. */\n\t\tas< Node extends typeof $hyoo_crowd_node >( Node: Node ) {\n\t\t\treturn this.world()?.Fund( Node ).Item( `${ this.land.id() }!${ this.head }` ) ?? new Node( this.land, this.head ) as InstanceType< Node >\n\t\t}\n\t\t\n\t\t/** Ordered inner alive Units. */\n\t\tunits() {\n\t\t\treturn this.land.unit_alives( this.head )\n\t\t}\n\t\t\n\t\t/** Ordered inner alive Node. */\n\t\t@ $mol_mem_key\n\t\tnodes< Node extends typeof $hyoo_crowd_node >( Node: Node ) {\n\t\t\tconst fund = this.world()?.Fund( Node )\n\t\t\treturn this.units().map( unit => fund?.Item( `${ this.land.id() }!${ unit.self }` ) ?? new Node( this.land, unit.self ) as InstanceType< Node > )\n\t\t}\n\t\t\n\t\t/** Returns true when node value is never changed. */\n\t\tvirgin() {\n\t\t\treturn this.land.unit_list( this.head ).length === 0\n\t\t}\n\t\t\n\t\t[ Symbol.toPrimitive ]() {\n\t\t\treturn `${ this.constructor.name }(\"${ this.land.id() }\",\"${ this.head }\")`\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t$mol_dev_format_shade( ':' ) ,\n\t\t\t\t$mol_dev_format_auto( this.land.unit_list( this.head ) ) ,\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport class $hyoo_crowd_reg extends $hyoo_crowd_node {\n\t\t\n\t\t/** Atomic value. */\n\t\tvalue( next?: unknown ) {\n\t\t\t\n\t\t\tconst unit = this.units()[0]\n\t\t\tif( next === undefined ) return unit?.data ?? null\n\t\t\t\t\n\t\t\tif( $mol_compare_deep( unit?.data, next ) ) return next\n\t\t\t\n\t\t\tthis.land.put(\n\t\t\t\tthis.head,\n\t\t\t\tunit?.self ?? this.land.id_new(),\n\t\t\t\t'0_0',\n\t\t\t\tnext,\n\t\t\t)\n\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t/** Atomic string. */\n\t\tstr( next?: string ) {\n\t\t\treturn String( this.value( next ) ?? '' )\n\t\t}\n\t\t\n\t\t/** Atomic number. */\n\t\tnumb( next?: number ) {\n\t\t\treturn Number( this.value( next ) )\n\t\t}\n\t\t\n\t\t/** Atomic boolean. */\n\t\tbool( next?: boolean ) {\n\t\t\treturn Boolean( this.value( next ) )\n\t\t}\n\t\t\n\t\tyoke(\n\t\t\tlaw = [''] as readonly ( $mol_int62_string | '' )[],\n\t\t\tmod = [] as readonly ( $mol_int62_string | '' )[],\n\t\t\tadd = [] as readonly ( $mol_int62_string | '' )[],\n\t\t) {\n\t\t\t\n\t\t\tconst world = this.world()!\n\t\t\t\n\t\t\tlet land_id = $mol_int62_string_ensure( this.value() )\n\t\t\tif( land_id ) return world.land_sync( land_id )\n\t\t\t\n\t\t\tif( this.land.level( this.land.peer().id ) < $hyoo_crowd_peer_level.add ) return null\n\t\t\t\n\t\t\tconst land = $mol_wire_sync( world ).grab( law, mod, add )\n\t\t\t\n\t\t\tthis.value( land.id() )\n\t\t\tworld.land_init( land )\n\t\t\t\n\t\t\treturn land\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\texport class $hyoo_crowd_struct extends $hyoo_crowd_node {\n\t\t\n\t\t/** Returns inner node for key. */\n\t\tsub< Node extends typeof $hyoo_crowd_node >( key: string, Node: Node ) {\n\t\t\tconst head = $mol_int62_hash_string( key + '\\n' + this.head )\n\t\t\treturn this.world()?.Fund( Node ).Item( `${ this.land.id() }!${ head }` ) ?? new Node( this.land, head ) as InstanceType< Node >\n\t\t}\n\t\t\n\t\tyoke< Node extends typeof $hyoo_crowd_node >(\n\t\t\tkey: string,\n\t\t\tNode: Node,\n\t\t\tlaw = [''] as readonly ( $mol_int62_string | '' )[],\n\t\t\tmod = [] as readonly ( $mol_int62_string | '' )[],\n\t\t\tadd = [] as readonly ( $mol_int62_string | '' )[],\n\t\t) {\n\t\t\tconst land = this.sub( key, $hyoo_crowd_reg ).yoke( law, mod, add )\n\t\t\treturn land?.chief.sub( key, Node ) ?? null\n\t\t}\n\t\t\n\t}\n}\n","namespace $ { \n\texport function $mol_const< Value >( value : Value ) {\n\t\tvar getter = <{ () : Value , '()' : Value }> ( () => value )\n\t\tgetter['()'] = value\n\t\tgetter[ Symbol.toStringTag ] = value\n\t\treturn getter\n\t}\n}\n","namespace $ {\n\t\n\t/** Conflict-free Reinterpretable Ordered Washed Data Tree */\n\texport class $hyoo_crowd_land extends $mol_object {\n\t\t\n\t\t@ $mol_memo.method\n\t\tid() {\n\t\t\treturn $mol_int62_to_string( $mol_int62_random() )\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.id()\n\t\t}\n\t\t\n\t\tpeer() {\n\t\t\treturn this.world()?.peer!\n\t\t}\n\t\t\n\t\tpeer_id() {\n\t\t\treturn this.peer()?.id ?? '0_0'\n\t\t}\n\t\t\n\t\tworld(): $hyoo_crowd_world | null {\n\t\t\treturn null\n\t\t}\n\t\t\n\t\tget clock_auth() {\n\t\t\tthis.pub.promote()\n\t\t\treturn this._clocks[ $hyoo_crowd_unit_group.auth ]\n\t\t}\n\t\t\n\t\tget clock_data() {\n\t\t\tthis.pub.promote()\n\t\t\treturn this._clocks[ $hyoo_crowd_unit_group.data ]\n\t\t}\n\t\t\n\t\tget clocks() {\n\t\t\tthis.pub.promote()\n\t\t\treturn this._clocks\n\t\t}\n\t\t\n\t\treadonly pub = new $mol_wire_pub\n\t\treadonly _clocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t\n\t\t/** unit by head + self */\n\t\t_unit_all = new Map<\n\t\t\t$hyoo_crowd_unit_id,\n\t\t\t$hyoo_crowd_unit\n\t\t>()\n\t\t\n\t\tunit(\n\t\t\thead: $mol_int62_string,\n\t\t\tself: $mol_int62_string,\n\t\t) {\n\t\t\treturn this._unit_all.get(`${ head }!${ self }`)\n\t\t}\n\t\t\n\t\t/** units by head */\n\t\t_unit_lists = new Map<\n\t\t\t$mol_int62_string,\n\t\t\tundefined | $hyoo_crowd_unit[] & { dirty: boolean }\n\t\t>()\n\t\t\n\t\t/** Units by Head without tombstones */\n\t\t_unit_alives = new Map<\n\t\t\t$mol_int62_string,\n\t\t\tundefined | $hyoo_crowd_unit[]\n\t\t>()\n\t\t\n\t\tsize() {\n\t\t\treturn this._unit_all.size\n\t\t}\n\t\t\n\t\t/** Returns list of all Units for Node. */ \n\t\tunit_list(\n\t\t\thead: $mol_int62_string,\n\t\t) {\n\t\t\t\n\t\t\tlet kids = this._unit_lists.get( head )\n\t\t\tif( !kids ) this._unit_lists.set( head, kids = Object.assign( [], { dirty: false } ) )\n\t\t\t\n\t\t\treturn kids\n\t\t}\n\t\t\n\t\t/** Returns list of alive Units for Node. */ \n\t\tunit_alives(\n\t\t\thead: $mol_int62_string,\n\t\t): readonly $hyoo_crowd_unit[] {\n\t\t\t\n\t\t\tthis.pub.promote()\n\t\t\t\n\t\t\tlet kids = this._unit_alives.get( head )\n\t\t\tif( !kids ) {\n\t\t\t\t\n\t\t\t\tconst all = this.unit_list( head )\n\t\t\t\tif( all.dirty ) this.resort( head )\n\t\t\t\t\n\t\t\t\tkids = all.filter( kid => kid.data !== null )\n\t\t\t\tthis._unit_alives.set( head, kids )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn kids\n\t\t}\n\t\t\n\t\t/** Node by id and type. */\n\t\tnode< Node extends typeof $hyoo_crowd_node >( head: $mol_int62_string, Node: Node ) {\n\t\t\treturn new Node( this, head ) as InstanceType< Node >\n\t\t}\n\t\t\n\t\t/** Root Node. */\n\t\tchief = this.node( '0_0', $hyoo_crowd_struct )\n\t\t\n\t\t/** Generates new identifier. */\n\t\tid_new(): $mol_int62_string {\n\t\t\t\n\t\t\tfor( let i = 0; i < 1000; ++i ) {\n\t\t\t\t\n\t\t\t\tconst id = $mol_int62_to_string( $mol_int62_random() )\n\t\t\t\t\n\t\t\t\tif( id === '0_0' ) continue // zero reserved for empty\n\t\t\t\tif( id === this.id() ) continue // reserved for rights\n\t\t\t\tif( this._unit_lists.has( id ) ) continue // skip already exists\n\t\t\t\t\n\t\t\t\treturn id\n\t\t\t}\n\t\t\t\n\t\t\tthrow new Error( `Can't generate ID after 1000 times` )\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Makes independent clone with defined peer. */\n\t\tfork( auth: $hyoo_crowd_peer ) {\n\t\t\t\n\t\t\tconst fork = $hyoo_crowd_land.make({\n\t\t\t\tid: $mol_const( this.id() ),\n\t\t\t\tpeer: $mol_const( auth ),\n\t\t\t})\n\t\t\t\n\t\t\treturn fork.apply( this.delta() )\n\t\t}\n\t\t\n\t\t/** Makes Delta bettween Clock and now. */\n\t\tdelta(\n\t\t\tclocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t) {\n\t\t\t\n\t\t\tthis.pub.promote()\n\t\t\t\n\t\t\tconst delta = [] as $hyoo_crowd_unit[]\n\t\t\t\n\t\t\tfor( const unit of this._unit_all.values() ) {\n\t\t\t\t\n\t\t\t\tconst time = clocks[ unit.group() ].time( unit.auth )\n\t\t\t\tif( unit.time <= time ) continue\n\t\t\t\t\n\t\t\t\tdelta.push( unit! )\n\t\t\t}\n\t\t\t\n\t\t\tdelta.sort( $hyoo_crowd_unit_compare )\n\t\t\t\n\t\t\treturn delta as readonly $hyoo_crowd_unit[]\n\t\t}\n\t\t\n\t\tresort(\n\t\t\thead: $mol_int62_string,\n\t\t) {\n\t\t\t\n\t\t\tconst kids = this._unit_lists.get( head )!\n\t\t\tif( !kids.dirty ) return kids\n\t\t\t\n\t\t\tif( kids.length < 2 ) {\n\t\t\t\tkids.dirty = true\n\t\t\t\treturn kids\n\t\t\t}\n\t\t\t\n\t\t\tconst queue = kids.splice(0).sort(\n\t\t\t\t( left, right )=> - $hyoo_crowd_unit_compare( left, right )\n\t\t\t)\n\t\t\t\n\t\t\tconst locate = ( self: $mol_int62_string )=> {\n\t\t\t\t\n\t\t\t\tfor( let i = kids.length - 1; i >= 0; --i ) {\n\t\t\t\t\tif( kids[i].self === self ) return i\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\t\n\t\t\twhile( queue.length ) {\n\t\t\t\t\n\t\t\t\tkids.push( queue.pop()! )\n\t\t\t\t\n\t\t\t\tfor( let cursor = queue.length - 1; cursor >= 0; --cursor ) {\n\t\t\t\t\t\n\t\t\t\t\tconst kid = queue[cursor]\n\t\t\t\t\tlet index = 0\n\n\t\t\t\t\tif( kid.prev !== '0_0' ) {\n\t\t\t\t\t\tindex = locate( kid.prev ) + 1\n\t\t\t\t\t\tif( !index ) continue\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\twhile( kids[ index ] && ( $hyoo_crowd_unit_compare( kids[ index ], kid ) > 0 ) ) ++ index\n\t\t\t\t\t\n\t\t\t\t\tconst exists = locate( kid.self )\n\t\t\t\t\tif( index === exists ) {\n\t\t\t\t\t\tif( cursor === queue.length - 1 ) queue.pop()\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tif( exists >= 0 ) {\n\t\t\t\t\t\tkids.splice( exists, 1 )\n\t\t\t\t\t\tif( exists < index ) -- index\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tkids.splice( index, 0, kid )\n\t\t\t\t\t\n\t\t\t\t\tif( cursor === queue.length - 1 ) queue.pop()\n\t\t\t\t\tcursor = queue.length\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tkids.dirty = false\n\t\t\t\n\t\t\treturn kids\n\t\t}\n\t\t\n\t\t/** Applies Delta to current state. */\n\t\tapply( delta: readonly $hyoo_crowd_unit[] ) {\n\t\t\t\n\t\t\tfor( const next of delta ) {\n\t\t\t\t\n\t\t\t\tthis._clocks[ next.group() ].see_peer( next.auth, next.time )\n\t\t\t\tconst kids = this.unit_list( next.head )\n\t\t\t\tconst next_id = `${ next.head }!${ next.self }` as const\n\t\t\t\t\n\t\t\t\tlet prev = this._unit_all.get( next_id )\n\t\t\t\tif( prev ) {\n\t\t\t\t\tif( $hyoo_crowd_unit_compare( prev, next ) > 0 ) continue\n\t\t\t\t\tkids[ kids.indexOf( prev ) ] = next\n\t\t\t\t} else {\n\t\t\t\t\tkids.push( next )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis._unit_all.set( next_id, next )\n\t\t\t\tif( kids.length > 1 ) kids.dirty = true\n\t\t\t\tthis._unit_alives.set( next.head, undefined )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.pub.emit()\n\t\t\t\n\t\t\treturn this\n\t\t}\n\t\t\n\t\t_joined = false\n\t\t\n\t\t/** Register public key of current peer **/\n\t\tjoin() {\n\t\t\t\n\t\t\tif( this._joined ) return\n\t\t\t\n\t\t\tconst auth = this.peer()\n\t\t\tif( !auth ) return\n\t\t\tif( !auth.key_public_serial ) return\n\t\t\t\n\t\t\tconst auth_id = `${ auth.id }!${ auth.id }` as const\n\t\t\t\n\t\t\tconst auth_unit = this._unit_all.get( auth_id )\n\t\t\tif( auth_unit?.data ) return this._joined = true\n\t\t\t\n\t\t\tconst time = this._clocks[ $hyoo_crowd_unit_group.auth ].tick( auth.id )\n\t\t\t\n\t\t\tconst join_unit = new $hyoo_crowd_unit(\n\t\t\t\tthis.id(), auth.id,\n\t\t\t\tauth.id, auth.id,\n\t\t\t\t'0_0', '0_0',\n\t\t\t\ttime, auth.key_public_serial,\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t\tthis._unit_all.set( auth_id, join_unit )\n\t\t\t\n\t\t\tthis._joined = true\n\t\t\tthis.pub.emit()\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Unregister public key of current peer **/\n\t\tleave() {\n\t\t\t\n\t\t\tconst auth = this.peer()\n\t\t\tif( !auth ) return\n\t\t\tif( !auth.key_public_serial ) return\n\t\t\t\n\t\t\tconst auth_id = `${ auth.id }!${ auth.id }` as const\n\t\t\t\n\t\t\tconst auth_unit = this._unit_all.get( auth_id )\n\t\t\tif( !auth_unit || !auth_unit.data ) return this._joined = false\n\t\t\t\n\t\t\tconst time = this._clocks[ $hyoo_crowd_unit_group.auth ].tick( auth.id )\n\t\t\t\n\t\t\tconst join_unit = new $hyoo_crowd_unit(\n\t\t\t\tthis.id(), auth.id,\n\t\t\t\tauth.id, auth.id,\n\t\t\t\t'0_0', '0_0',\n\t\t\t\ttime, null,\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t\tthis._unit_all.set( auth_id, join_unit )\n\t\t\t\n\t\t\tthis._joined = false\n\t\t\tthis.pub.emit()\n\t\t\t\n\t\t}\n\t\t\n\t\tallowed_add( peer = this.peer().id ) {\n\t\t\treturn this.level( peer ) >= $hyoo_crowd_peer_level.add\n\t\t}\n\t\tallowed_mod( peer = this.peer().id ) {\n\t\t\treturn this.level( peer ) >= $hyoo_crowd_peer_level.mod\n\t\t}\n\t\tallowed_law( peer = this.peer().id ) {\n\t\t\treturn this.level( peer ) >= $hyoo_crowd_peer_level.law\n\t\t}\n\t\t\n\t\tlevel_base( next?: $hyoo_crowd_peer_level ) {\n\t\t\tthis.level( '0_0', next )\n\t\t}\n\t\t\n\t\t/** Access level for peer. Use empty string for current peer. **/\n\t\tlevel( peer: $mol_int62_string | '', next?: $hyoo_crowd_peer_level ) {\n\t\t\t\n\t\t\tif( next ) this.join()\n\t\t\telse this.pub.promote()\n\t\t\t\n\t\t\tif( !peer ) peer = this.peer_id()\n\t\t\t\n\t\t\tconst level_id = `${ this.id() }!${ peer }` as const\n\t\t\t\n\t\t\tconst prev = this._unit_all.get( level_id )?.level()\n\t\t\t\t?? this._unit_all.get( `${ this.id() }!0_0` )?.level()\n\t\t\t\t?? ( this.id() === peer ? $hyoo_crowd_peer_level.law : $hyoo_crowd_peer_level.get )\n\t\t\t\n\t\t\tif( next === undefined ) return prev\n\t\t\tif( next <= prev ) return prev\n\t\t\t\n\t\t\tconst time = this._clocks[ $hyoo_crowd_unit_group.auth ].tick( peer )\n\t\t\tconst auth = this.peer_id()\n\t\t\t\n\t\t\tconst level_unit = new $hyoo_crowd_unit(\n\t\t\t\tthis.id(), auth,\n\t\t\t\tthis.id(), peer,\n\t\t\t\t'0_0', '0_0',\n\t\t\t\ttime, next,\n\t\t\t\tnull,\n\t\t\t\t\n\t\t\t)\n\t\t\t\n\t\t\tthis._unit_all.set( level_id, level_unit )\n\t\t\tthis.pub.emit()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tgrabbed() {\n\t\t\tif( this.id() === this.peer_id() ) return true\n\t\t\tthis.pub.promote()\n\t\t\treturn this._unit_all.size > 0\n\t\t}\n\t\t\n\t\t/** All peers who have special rights to write o land. */\n\t\tpeers() {\n\t\t\t\n\t\t\tthis.pub.promote()\n\t\t\t\n\t\t\tconst lords = [] as $mol_int62_string[]\n\t\t\t\n\t\t\tfor( const unit of this._unit_all.values() ) {\n\t\t\t\t\n\t\t\t\tswitch( unit.kind() ) {\n\t\t\t\t\tcase $hyoo_crowd_unit_kind.data: continue\n\t\t\t\t\tcase $hyoo_crowd_unit_kind.join: continue\n\t\t\t\t\tdefault: lords.push( unit.self )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn lords as Readonly< typeof lords >\n\t\t}\n\t\t\n\t\t/** All peers who joined to land except king. */\n\t\tresidents() {\n\t\t\t\n\t\t\tthis.pub.promote()\n\t\t\t\n\t\t\tconst lords = [] as $mol_int62_string[]\n\t\t\t\n\t\t\tfor( const unit of this._unit_all.values() ) {\n\t\t\t\t\n\t\t\t\tif( unit.data === null ) continue\n\t\t\t\tif( unit.kind() !== $hyoo_crowd_unit_kind.join ) continue\n\t\t\t\t\n\t\t\t\tlords.push( unit.self )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn lords as Readonly< typeof lords >\n\t\t}\n\t\t\n\t\t/** All peers who have alive data inside land. */\n\t\tauthors() {\n\t\t\t\n\t\t\tthis.pub.promote()\n\t\t\t\n\t\t\tconst authors = new Set<$mol_int62_string>()\n\t\t\t\n\t\t\tfor( const unit of this._unit_all.values() ) {\n\t\t\t\tif( unit.kind() !== $hyoo_crowd_unit_kind.data ) continue\n\t\t\t\tif( unit.data === null ) continue\n\t\t\t\tauthors.add( unit.auth )\n\t\t\t}\n\t\t\t\n\t\t\treturn authors\n\t\t}\n\t\t\n\t\tsteal_rights( donor: $hyoo_crowd_land ) {\n\t\t\tfor( const peer of donor.peers() ) {\n\t\t\t\tthis.level( peer, donor.level( peer ) )\n\t\t\t}\n\t\t}\n\t\t\n\t\tfirst_stamp() {\n\t\t\tthis.pub.promote()\n\t\t\tconst grab_unit = this._unit_all.get( `${ this.id() }!${ this.id() }` )\n\t\t\treturn ( grab_unit && $hyoo_crowd_time_stamp( grab_unit.time ) ) ?? null\n\t\t}\n\t\t\n\t\tlast_stamp() {\n\t\t\tthis.pub.promote()\n\t\t\treturn this.clock_data.last_stamp()\n\t\t}\n\t\t\n\t\tselection( peer: $mol_int62_string ) {\n\t\t\treturn this.world()!.land_sync( peer ).chief.sub( '$hyoo_crowd_land..selection', $hyoo_crowd_reg )\n\t\t}\n\t\t\n\t\t/** Places data to tree. */\n\t\tput(\n\t\t\thead: $mol_int62_string,\n\t\t\tself: $mol_int62_string,\n\t\t\tprev: $mol_int62_string,\n\t\t\tdata: unknown,\n\t\t) {\n\t\t\t\n\t\t\tthis.join()\n\t\t\t\n\t\t\tconst old_id = `${ head }!${ self }` as const\n\t\t\tlet unit_old = this._unit_all.get( old_id )\n\t\t\tlet unit_prev = prev !== '0_0'\n\t\t\t\t? this._unit_all.get( `${ head }!${ prev }` )!\n\t\t\t\t: null\n\t\t\t\n\t\t\tconst unit_list = this.unit_list( head )\n\t\t\tif( unit_old ) unit_list.splice( unit_list.indexOf( unit_old ), 1 )\n\t\t\t\n\t\t\tconst seat = unit_prev ? unit_list.indexOf( unit_prev ) + 1 : 0\n\t\t\tconst next = unit_list[ seat ]?.self ?? '0_0'\n\t\t\t\n\t\t\tconst auth = this.peer_id()\n\t\t\tconst time = this._clocks[ $hyoo_crowd_unit_group.data ].tick( auth )\n\t\t\t\n\t\t\tconst unit_new = new $hyoo_crowd_unit(\n\t\t\t\tthis.id(), auth,\n\t\t\t\thead, self,\n\t\t\t\tnext, prev,\n\t\t\t\ttime, data,\n\t\t\t\tnull,\n\t\t\t\t\n\t\t\t)\n\t\t\t\n\t\t\tthis._unit_all.set( old_id, unit_new )\n\t\t\t\n\t\t\tunit_list.splice( seat, 0, unit_new )\n\t\t\tunit_list.dirty = true\n\t\t\tthis._unit_alives.set( head, undefined )\n\t\t\t\n\t\t\t// this.apply([ unit_new ])\n\t\t\t\n\t\t\tthis.pub.emit()\n\t\t\t\n\t\t\treturn unit_new\n\t\t}\n\t\t\n\t\t/** Marks unit as deleted and wipes its data. */\n\t\twipe( unit: $hyoo_crowd_unit ) {\n\t\t\t\n\t\t\tif( unit.data === null ) return unit\n\t\t\t\n\t\t\t// for( const kid of this.unit_list( unit.self ) ) {\n\t\t\t// \tthis.wipe( kid )\n\t\t\t// }\n\t\t\t\n\t\t\tconst unit_list = this.unit_list( unit.head )\n\t\t\tconst seat = unit_list.indexOf( unit )\n\t\t\t\n\t\t\tconst prev = seat > 0 ? unit_list[ seat - 1 ].self : seat < 0 ? unit.prev : '0_0'\n\t\t\t\n\t\t\treturn this.put(\n\t\t\t\tunit.head,\n\t\t\t\tunit.self,\n\t\t\t\tprev,\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Moves Unit after another Prev inside some Head. */\n\t\tmove(\n\t\t\tunit: $hyoo_crowd_unit,\n\t\t\thead: $mol_int62_string,\n\t\t\tprev: $mol_int62_string,\n\t\t) {\n\t\t\t\n\t\t\tconst unit_list = this.unit_list( unit.head )\n\t\t\t\n\t\t\tconst seat = unit_list.indexOf( unit )\n\t\t\tconst next = unit_list[ seat + 1 ]\n\t\t\t\n\t\t\tthis.wipe( unit )\n\t\t\t\n\t\t\tif( next ) this.put(\n\t\t\t\tnext.head,\n\t\t\t\tnext.self,\n\t\t\t\tunit_list[ unit_list.indexOf( next ) - 2 ]?.self ?? '0_0',\n\t\t\t\tnext.data,\n\t\t\t)\n\t\t\t\n\t\t\tthis.put(\n\t\t\t\thead,\n\t\t\t\tunit.self,\n\t\t\t\tprev,\n\t\t\t\tunit.data\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Moves Unit at given Seat inside given Head. */\n\t\tinsert(\n\t\t\tunit: $hyoo_crowd_unit,\n\t\t\thead: $mol_int62_string,\n\t\t\tseat: number,\n\t\t) {\n\t\t\tconst list = this.unit_list( head )\n\t\t\tconst prev = seat ? list[ seat - 1 ].self : '0_0'\n\t\t\treturn this.move( unit, head, prev )\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_native( this )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport let $mol_action = $mol_wire_method\n}\n","namespace $ {\n\t\n\t/** Registry of nodes as domain entities. */\n\texport class $hyoo_crowd_fund< Node extends typeof $hyoo_crowd_node > extends $mol_object {\n\t\t\n\t\tconstructor(\n\t\t\tpublic world: $hyoo_crowd_world,\n\t\t\tpublic Node: Node,\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tItem( id: $mol_int62_string | `${$mol_int62_string}!${$mol_int62_string}` ): InstanceType<Node> {\n\t\t\tconst [ land, head ] = id.split( '!' ) as [ $mol_int62_string, $mol_int62_string | undefined ]\n\t\t\tif( !head ) return this.Item( `${land}!0_0` )\n\t\t\treturn this.world.land_sync( land ).node( head, this.Node )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tmake(\n\t\t\tlaw = [''] as readonly ( $mol_int62_string | '' )[],\n\t\t\tmod = [] as readonly ( $mol_int62_string | '' )[],\n\t\t\tadd = [] as readonly ( $mol_int62_string | '' )[],\n\t\t) {\n\t\t\tconst land = $mol_wire_sync( this.world ).grab( law, mod, add )\n\t\t\treturn this.Item( land.id() )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** @deprecated */\n\texport let $mol_dict_key = $mol_key\n\n\texport class $mol_dict< Key , Value > extends Map< Key , Value > {\n\n\t\tget( key : Key ) {\n\t\t\treturn super.get( $mol_key( key ) as any )\n\t\t}\n\n\t\thas( key : Key ) {\n\t\t\treturn super.has( $mol_key( key ) as any )\n\t\t}\n\n\t\tset( key : Key , value : Value ) {\n\t\t\treturn super.set( $mol_key( key ) as any , value )\n\t\t}\n\n\t\tdelete( key : Key ) {\n\t\t\treturn super.delete( $mol_key( key ) as any )\n\t\t}\n\n\t\tforEach( back : ( value : Value , key : Key , dict : Map< Key , Value > ) => void , context? : any ) {\n\t\t\treturn super.forEach( ( val , key , dict )=> {\n\t\t\t\tif( typeof key === 'string' ) key = JSON.parse( key )\n\t\t\t\treturn back.call( this , val , key , dict )\n\t\t\t} , context )\n\t\t}\n\n\t\tkeys() {\n\t\t\tconst iterator = super.keys()\n\t\t\t\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]() {\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tnext() {\n\t\t\t\t\t\n\t\t\t\t\tconst iteration = iterator.next()\n\t\t\t\t\tif( iteration.done ) return iteration\n\t\t\t\t\t\n\t\t\t\t\titeration.value = JSON.parse( iteration.value as any as string )\n\t\t\t\t\treturn iteration\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tentries() {\n\t\t\tconst iterator = super.entries()\n\t\t\t\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]() {\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tnext() {\n\t\t\t\t\t\n\t\t\t\t\tconst iteration = iterator.next()\n\t\t\t\t\tif( iteration.done ) return iteration\n\t\t\t\t\t\n\t\t\t\t\titeration.value = [ JSON.parse( iteration.value[0] as any as string ), iteration.value[1] ]\n\t\t\t\t\t// iteration.value[0] = JSON.parse( iteration.value[0] as any as string )\n\t\t\t\t\treturn iteration\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t[Symbol.iterator]() {\n\t\t\treturn this.entries()\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\texport class $hyoo_crowd_world extends $mol_object {\n\t\t\n\t\tconstructor(\n\t\t\treadonly peer?: $hyoo_crowd_peer\n\t\t) {\n\t\t\tsuper()\n\t\t\tif( peer ) this._knights.set( peer.id , peer )\n\t\t}\n\t\t\n\t\treadonly lands_pub = new $mol_wire_pub\n\t\t\n\t\t_lands = new Map<\n\t\t\t$mol_int62_string,\n\t\t\t$hyoo_crowd_land\n\t\t>()\n\t\t\n\t\tget lands() {\n\t\t\tthis.lands_pub.promote()\n\t\t\treturn this._lands\n\t\t}\n\t\t\n\t\tland_init( id: $hyoo_crowd_land ) { }\n\t\t\n\t\tland(\n\t\t\tid: $mol_int62_string,\n\t\t) {\n\t\t\t\n\t\t\tconst exists = this._lands.get( id )\n\t\t\tif( exists ) return exists\n\t\t\t\n\t\t\tconst land = $hyoo_crowd_land.make({\n\t\t\t\tid: $mol_const( id ),\n\t\t\t\tworld: $mol_const( this ),\n\t\t\t})\n\t\t\t\n\t\t\tthis._lands.set( id, land )\n\t\t\tthis.lands_pub.emit()\n\t\t\t\n\t\t\treturn land\n\t\t}\n\t\t\n\t\tland_sync(\n\t\t\tid: $mol_int62_string,\n\t\t) {\n\t\t\tconst land = this.land( id )\n\t\t\tthis.land_init( land )\n\t\t\treturn land\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tFund< Item extends typeof $hyoo_crowd_node >( Item: Item ) {\n\t\t\treturn new $hyoo_crowd_fund( this, Item )\n\t\t}\n\t\t\n\t\thome() {\n\t\t\treturn this.land_sync( this.peer!.id )\n\t\t}\n\t\t\n\t\t_knights = new $mol_dict<\n\t\t\t$mol_int62_string,\n\t\t\t$hyoo_crowd_peer\n\t\t>()\n\t\t\n\t\t_signs = new WeakMap< $hyoo_crowd_unit, Uint8Array >()\n\t\t\n\t\tasync grab(\n\t\t\tlaw = [''] as readonly ( $mol_int62_string | '' )[],\n\t\t\tmod = [] as readonly ( $mol_int62_string | '' )[],\n\t\t\tadd = [] as readonly ( $mol_int62_string | '' )[],\n\t\t) {\n\t\t\t\n\t\t\t// if( !law.length && !mod.length && !add.length ) $mol_fail( new Error( 'Grabbing dead land' ) )\n\t\t\t\n\t\t\tconst knight = await $hyoo_crowd_peer.generate()\n\t\t\tthis._knights.set( knight.id, knight )\n\t\t\t\n\t\t\tconst land_inner = this.land( knight.id )\n\t\t\tconst land_outer = $hyoo_crowd_land.make({\n\t\t\t\tid: $mol_const( knight.id ),\n\t\t\t\tpeer: $mol_const( knight ),\n\t\t\t})\n\t\t\t\n\t\t\tfor( const peer of law ) land_outer.level( peer || this.peer!.id, $hyoo_crowd_peer_level.law )\n\t\t\tfor( const peer of mod ) land_outer.level( peer || this.peer!.id, $hyoo_crowd_peer_level.mod )\n\t\t\tfor( const peer of add ) land_outer.level( peer || this.peer!.id, $hyoo_crowd_peer_level.add )\n\t\t\t\n\t\t\tland_inner.apply( land_outer.delta() )\n\t\t\t\n\t\t\treturn land_inner\n\t\t}\n\t\t\n\t\tsign_units( units: readonly $hyoo_crowd_unit[] ) {\n\t\t\t\n\t\t\treturn Promise.all( units.map( async( unit )=> {\n\t\t\t\t\n\t\t\t\tif( unit.bin ) return unit\n\t\t\t\tconst bin = $hyoo_crowd_unit_bin.from_unit( unit )\n\t\t\t\t\n\t\t\t\tlet sign = this._signs.get( unit )\n\t\t\t\tif( !sign ) {\n\t\t\t\t\tconst knight = this._knights.get( unit.auth )!\n\t\t\t\t\tsign = new Uint8Array( await knight.key_private.sign( bin.sens() ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbin.sign( sign )\n\t\t\t\tunit.bin = bin\n\t\t\t\tthis._signs.set( unit, sign )\n\t\t\t\t\n\t\t\t\treturn unit\n\t\t\t\t\n\t\t\t} ) )\n\t\t\t\n\t\t}\n\t\t\n\t\tdelta_land(\n\t\t\tland: $hyoo_crowd_land,\n\t\t\tclocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t) {\n\t\t\treturn this.sign_units( land.delta( clocks ) )\n\t\t}\n\t\t\n\t\tasync delta_batch(\n\t\t\tland: $hyoo_crowd_land,\n\t\t\tclocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t) {\n\t\t\t\n\t\t\tconst units = await this.delta_land( land, clocks )\n\t\t\t\n\t\t\tlet size = 0\n\t\t\tconst bins = [] as $hyoo_crowd_unit_bin[]\n\t\t\t\n\t\t\tfor( const unit of units ) {\n\t\t\t\tconst bin = unit.bin!\n\t\t\t\tbins.push( bin )\n\t\t\t\tsize += bin.byteLength\n\t\t\t}\n\t\t\t\n\t\t\tconst batch = new Uint8Array( size )\n\t\t\t\t\n\t\t\tlet offset = 0\n\t\t\tfor( const bin of bins ) {\n\t\t\t\tbatch.set( new Uint8Array( bin.buffer, bin.byteOffset, bin.byteLength ), offset )\n\t\t\t\toffset += bin.byteLength\n\t\t\t}\n\t\t\t\n\t\t\treturn batch\n\t\t}\n\t\t\t\t\n\t\tasync *delta( clocks = new Map< $mol_int62_string, readonly[ $hyoo_crowd_clock, $hyoo_crowd_clock ] >() ) {\n\t\t\tfor( const land of this.lands.values() ) {\n\t\t\t\tyield await this.delta_batch( land, clocks.get( land.id() ) )\n\t\t\t}\n\t\t}\n\t\t\n\t\tasync apply(\n\t\t\tdelta: Uint8Array,\n\t\t) {\n\t\t\t\n\t\t\tconst units = [] as $hyoo_crowd_unit[]\n\t\t\t\n\t\t\tlet bin_offset = 0\n\t\t\twhile( bin_offset < delta.byteLength ) {\n\t\t\t\t\n\t\t\t\tconst buf = new Int16Array( delta.buffer, delta.byteOffset + bin_offset )\n\t\t\t\tconst bin = $hyoo_crowd_unit_bin.from_buffer( buf )\n\t\t\t\t\n\t\t\t\tunits.push( bin.unit() )\n\t\t\t\tbin_offset += bin.size()\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst land = this.land( units[0].land )\n\t\t\tconst report = await this.audit_delta( land, units )\n\t\t\tland.apply( report.allow )\n\t\t\t\n\t\t\treturn report\n\t\t}\n\t\t\n\t\tasync audit_delta(\n\t\t\tland: $hyoo_crowd_land,\n\t\t\tdelta: $hyoo_crowd_unit[],\n\t\t) {\n\t\t\t\n\t\t\tconst all = new Map<\n\t\t\t\t$hyoo_crowd_unit_id,\n\t\t\t\t$hyoo_crowd_unit\n\t\t\t>()\n\t\t\t\n\t\t\tconst desync = 60 * 60 * 10 // 1 hour\n\t\t\tconst deadline = land.clock_data.now() + desync\n\t\t\t\n\t\t\tconst get_unit = ( id: $hyoo_crowd_unit_id )=> {\n\t\t\t\treturn all.get( id ) ?? land._unit_all.get( id )\n\t\t\t}\n\t\t\t\n\t\t\tconst get_level = ( head: $mol_int62_string, self: $mol_int62_string )=> {\n\t\t\t\treturn get_unit( `${ head }!${ self }` )?.level()\n\t\t\t\t\t?? get_unit( `${ head }!0_0` )?.level()\n\t\t\t\t\t?? $hyoo_crowd_peer_level.get\n\t\t\t}\n\t\t\t\n\t\t\tconst check_unit = async( unit: $hyoo_crowd_unit )=> {\n\t\t\t\n\t\t\t\tconst bin = unit.bin!\n\t\t\t\t\t\n\t\t\t\tif( unit.time > deadline ) return 'Far future'\n\t\t\t\t\n\t\t\t\tconst auth_unit = get_unit( `${ unit.auth }!${ unit.auth }` )\n\t\t\t\tconst kind = unit.kind()\n\t\t\t\t\n\t\t\t\tswitch( kind ) {\n\t\t\t\t\t\n\t\t\t\t\tcase $hyoo_crowd_unit_kind.grab:\n\t\t\t\t\tcase $hyoo_crowd_unit_kind.join: {\n\t\t\t\t\t\n\t\t\t\t\t\tconst key_str = auth_unit?.data ?? unit.data\n\t\t\t\t\t\tif( typeof key_str !== 'string' ) return 'No join key'\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst self = $mol_int62_hash_string( key_str )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( unit.self !== self ) return 'Alien join key'\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst key = await $mol_crypto_auditor_public.from( key_str )\n\t\t\t\t\t\tconst sign = bin.sign()\n\t\t\t\t\t\tconst valid = await key.verify( bin.sens(), sign )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( !valid ) return 'Wrong join sign'\n\t\t\t\t\t\t\n\t\t\t\t\t\tall.set( `${ unit.head }!${ unit.auth }`, unit )\n\t\t\t\t\t\tthis._signs.set( unit, sign )\n\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase $hyoo_crowd_unit_kind.give: {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lord_level = get_level( land.id(), unit.auth )\n\t\t\t\t\t\tif( lord_level < $hyoo_crowd_peer_level.law ) return `Level too low`\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst peer_level = get_level( land.id(), unit.self )\n\t\t\t\t\t\tif( peer_level > unit.level() ) return `Cancel unsupported`\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase $hyoo_crowd_unit_kind.data: {\n\t\t\t\t\t\n\t\t\t\t\t\tconst level = get_level( land.id(), unit.auth )\n\t\t\t\t\t\tif( level >= $hyoo_crowd_peer_level.mod ) break\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( level === $hyoo_crowd_peer_level.add ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst exists = get_unit( `${ unit.head }!${ unit.self }` )\n\t\t\t\t\t\t\tif( !exists ) break\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( exists.auth === unit.auth ) break\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn `Level too low`\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst key_str = auth_unit?.data\n\t\t\t\tif( typeof key_str !== 'string' ) return 'No auth key'\n\t\t\t\t\n\t\t\t\tconst key = await $mol_crypto_auditor_public.from( key_str )\n\t\t\t\tconst sign = bin.sign()\n\t\t\t\tconst valid = await key.verify( bin.sens(), sign )\n\t\t\t\t\n\t\t\t\tif( !valid ) return 'Wrong auth sign'\n\t\t\t\t\n\t\t\t\tall.set( `${ unit.head }!${ unit.self }`, unit )\n\t\t\t\tthis._signs.set( unit, sign )\n\t\t\t\t\n\t\t\t\treturn ''\n\t\t\t}\n\t\t\t\n\t\t\tconst allow = [] as $hyoo_crowd_unit[]\n\t\t\tconst forbid = new Map< $hyoo_crowd_unit, string >()\n\t\t\t\n\t\t\tconst proceed_unit = async( unit: $hyoo_crowd_unit )=> {\n\t\t\t\t\n\t\t\t\tconst error = await check_unit( unit )\n\t\t\t\t\t\n\t\t\t\tif( error ) forbid.set( unit, error )\n\t\t\t\telse allow.push( unit )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst tasks = [] as Promise<void>[]\n\t\t\tfor( const unit of delta ) {\n\t\t\t\t\n\t\t\t\tconst task = proceed_unit( unit )\n\t\t\t\ttasks.push( task )\n\t\t\t\t\n\t\t\t\tif( unit.group() === $hyoo_crowd_unit_group.auth ) await task\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tawait Promise.all( tasks )\n\t\t\t\n\t\t\treturn { allow, forbid }\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\texport function $mol_wire_race<\n\t\tTasks extends ( ( ... args: any )=> any )[]\n\t>( ... tasks: Tasks ): {\n\t\t[ index in keyof Tasks ]: index extends number\n\t\t\t? ReturnType< Tasks[ index ] >\n\t\t\t: Tasks[ index ]\n\t} {\n\t\t\n\t\tconst results = tasks.map( task => {\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn task()\n\t\t\t} catch( error ) {\n\t\t\t\treturn error\n\t\t\t}\n\t\t\t\n\t\t} )\n\t\t\n\t\tconst promises = results.filter( res => res instanceof Promise )\n\t\tif( promises.length ) $mol_fail( Promise.race( promises ) )\n\t\t\n\t\tconst error = results.find( res => res instanceof Error )\n\t\tif( error ) $mol_fail( error )\n\t\t\n\t\treturn results as any\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/**\n\t * Disable reaping of current subscriber\n\t */\n\texport function $mol_wire_solid() {\n\t\tconst current = $mol_wire_auto()\n\t\tif( current!.reap !== nothing ) {\n\t\t\tcurrent?.sub_on( sub, sub.data.length )\n\t\t}\n\t\tcurrent!.reap = nothing\n\t}\n\t\n\tconst nothing = ()=> {}\n\tconst sub = new $mol_wire_pub_sub\n\t\n}\n","namespace $ {\n\texport let $hyoo_sync_masters = [\n\t\t`wss://sync.hyoo.ru/`,\n\t\t`wss://crowd.up.railway.app/`,\n\t\t'wss://sync-hyoo-ru.herokuapp.com/',\n\t]\n}\n","namespace $ {\n\t\n\texport function $mol_wire_async< Host extends object >( obj: Host ) {\n\t\t\n\t\tlet fiber: $mol_wire_fiber< any, any, any >\n\t\tconst temp = $mol_wire_task.getter( obj as ( ... args: any[] )=> any )\n\t\t\n\t\treturn new Proxy( obj, {\n\t\t\t\n\t\t\tget( obj, field ) {\n\t\t\t\t\n\t\t\t\tconst val = obj[ field ]\n\t\t\t\tif( typeof val !== 'function' ) return val\n\t\t\t\t\n\t\t\t\tlet fiber: $mol_wire_fiber< any, any, any >\n\t\t\t\tconst temp = $mol_wire_task.getter( val ) \n\t\t\t\t\n\t\t\t\treturn function $mol_wire_async( this: Host, ... args: any[] ) {\n\t\t\t\t\tfiber?.destructor()\n\t\t\t\t\tfiber = temp( obj, args )\n\t\t\t\t\treturn fiber.async()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tapply( obj, self, args ) {\n\t\t\t\tfiber?.destructor()\n\t\t\t\tfiber = temp( self, args )\n\t\t\t\treturn fiber.async()\n\t\t\t},\n\t\t\t\n\t\t} ) as any as (\n\t\t\tHost extends ( ... args: infer Args )=> infer Res\n\t\t\t\t? Res extends Promise<any>\n\t\t\t\t\t? Host\n\t\t\t\t\t: ( ... args: Args )=> Promise< Res >\n\t\t\t\t: {}\n\t\t) & {\n\t\t\t[ key in keyof Host ]: Host[ key ] extends ( ... args: infer Args )=> infer Res\n\t\t\t\t? Res extends Promise<any>\n\t\t\t\t\t? Host[ key ]\n\t\t\t\t\t: ( ... args: Args )=> Promise< Res >\n\t\t\t\t: Host[ key ]\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport class $hyoo_sync_yard< Line > extends $mol_object2 {\n\t\t\n\t\tlog_pack( data: any ) {\n\t\t\treturn data\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tpeer() {\n\t\t\treturn $mol_wire_sync( $hyoo_sync_peer )( this + '.peer()' )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tworld() {\n\t\t\tconst world = new this.$.$hyoo_crowd_world( this.peer() )\n\t\t\tworld.land_init = land => this.land_init( land )\n\t\t\treturn world\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tland_init( land: $hyoo_crowd_land ) {\n\t\t\tthis.db_land_init( land )\n\t\t\t// if( !land.grabbed() ) this.$.$mol_wait_timeout( 1000 )\n\t\t}\n\t\t\n\t\tland( id: $mol_int62_string ) {\n\t\t\treturn this.world().land_sync( id )\n\t\t}\n\t\t\n\t\tland_grab(\n\t\t\tlaw = [''] as readonly ( $mol_int62_string | '' )[],\n\t\t\tmod = [] as readonly ( $mol_int62_string | '' )[],\n\t\t\tadd = [] as readonly ( $mol_int62_string | '' )[],\n\t\t) {\n\t\t\treturn $mol_wire_sync( this.world() ).grab( law, mod, add )\n\t\t}\n\t\t\n\t\thome() {\n\t\t\treturn this.land( this.peer().id )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tland_search( query: string ) {\n\t\t\t\n\t\t\tconst stat = new Map< $mol_int62_string, number >()\n\t\t\t\n\t\t\tfor( const prefix of query.match( /\\p{Letter}{2,}/gu ) ?? [] ) {\n\t\t\t\t\n\t\t\t\tconst caps = prefix.slice( 0, 1 ).toUpperCase() + prefix.slice( 1 )\n\t\t\t\tconst prefs = new Set< string >([\n\t\t\t\t\tcaps, ' ' + caps,\n\t\t\t\t\tprefix, ' ' + prefix,\n\t\t\t\t])\n\t\t\t\t\n\t\t\t\tconst lands = new Set< $mol_int62_string >()\n\t\t\t\t\n\t\t\t\tconst founds = $mol_wire_race(\n\t\t\t\t\t... [ ... prefs ].map(\n\t\t\t\t\t\tpref => ()=> $mol_wire_sync( this as $hyoo_sync_yard< Line > ).db_land_search( pref )\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tfor( const found of founds ) {\n\t\t\t\t\tfor( const land of [ ... found ].reverse() ) lands.add( land )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor( const land of lands ) {\n\t\t\t\t\tstat.set( land, ( stat.get( land ) ?? 0 ) + 1 )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\treturn [ ... stat ].sort( ( left, right )=> right[1] - left[1] ).map( pair => pair[0] )\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t@ $mol_mem\n\t\tsync() {\n\t\t\t\n\t\t\tthis.server()\n\t\t\t\n\t\t\tfor( const land of this.world().lands.values() ) {\n\t\t\t\tthis.db_land_sync( land )\n\t\t\t}\n\t\t\t\n\t\t\tconst master = this.master()\n\t\t\tif( master ) $mol_wire_race(\n\t\t\t\t... [ ... this.world().lands.values() ].map( land =>\n\t\t\t\t\t()=> this.line_land_sync({ line: master, land })\n\t\t\t\t)\n\t\t\t)\n\t\t\t\n\t\t\t$mol_wire_race(\n\t\t\t\t... this.slaves().map( line =>\n\t\t\t\t\t()=> this.line_sync( line )\n\t\t\t\t)\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tland_sync( land: $hyoo_crowd_land ) {\n\t\t\t\n\t\t\tthis.db_land_init( land )\n\t\t\t\n\t\t\ttry {\n\t\t\t\tthis.db_land_sync( land )\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconst master = this.master()\n\t\t\t\tif( master ) this.line_land_sync({ line: master, land })\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\t$mol_wire_race(\n\t\t\t\t\t... this.slaves()\n\t\t\t\t\t\t.filter( line => this.line_lands( line ).includes( land ) )\n\t\t\t\t\t\t.map( line => ()=> this.line_land_sync({ line, land }) )\n\t\t\t\t)\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t@ $mol_mem_key\n\t\tdb_land_clocks(\n\t\t\tland: $mol_int62_string,\n\t\t\tnext?: readonly[ $hyoo_crowd_clock, $hyoo_crowd_clock ],\n\t\t) {\n\t\t\t$mol_wire_solid()\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tdb_land_sync( land: $hyoo_crowd_land ) {\n\t\t\t\n\t\t\tthis.db_land_init( land )\n\t\t\t\n\t\t\tconst db_clocks = this.db_land_clocks( land.id() )!\n\t\t\tland.clocks\n\t\t\t// const ahead = land.clocks.some( ( land_clock, i )=> land_clock.ahead( db_clocks[i] ) )\n\t\t\t// if( !ahead ) return\n\t\t\t\n\t\t\tconst units = land.delta( db_clocks )\n\t\t\tif( !units.length ) return\n\t\t\t\n\t\t\t$mol_wire_sync( this.world() ).sign_units( units )\n\t\t\t$mol_wire_sync( this ).db_land_save( land, units )\n\t\t\t\n\t\t\tfor( const unit of units ) {\n\t\t\t\tdb_clocks[ unit.group() ].see_peer( unit.auth, unit.time )\n\t\t\t}\n\t\t\t\n\t\t\t// this.$.$mol_log3_rise({\n\t\t\t// \tplace: this,\n\t\t\t// \tland: land.id(),\n\t\t\t// \tmessage: 'Base Save',\n\t\t\t// \tunits: this.log_pack( units ),\n\t\t\t// })\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tdb_land_init( land: $hyoo_crowd_land ) {\n\n\t\t\ttry {\n\t\t\t\tvar units = $mol_wire_sync< $hyoo_sync_yard< Line > >( this ).db_land_load( land )\n\t\t\t} catch( error ) {\n\t\t\t\t\n\t\t\t\tif(!( error instanceof Error )) $mol_fail_hidden( error )\n\t\t\t\t\n\t\t\t\tthis.$.$mol_log3_fail({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tland: land.id(),\n\t\t\t\t\tmessage: error.message,\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tunits = []\n\t\t\t}\n\t\t\t\n\t\t\tunits.sort( $hyoo_crowd_unit_compare )\n\n\t\t\tconst clocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ] as const\n\t\t\tthis.db_land_clocks( land.id(), clocks )\n\t\t\t\n\t\t\tland.apply( units )\n\t\t\t\n\t\t\tfor( const unit of units ) {\n\t\t\t\tclocks[ unit.group() ].see_peer( unit.auth, unit.time )\n\t\t\t}\n\t\t\t\n\t\t\t// this.$.$mol_log3_rise({\n\t\t\t// \tplace: this,\n\t\t\t// \tland: land.id(),\n\t\t\t// \tmessage: 'Base Load',\n\t\t\t// \tunits: this.log_pack( units ),\n\t\t\t// })\n\t\t\t\n\t\t}\n\t\t\n\t\tasync db_land_load( land: $hyoo_crowd_land ) {\n\t\t\treturn [] as $hyoo_crowd_unit[]\n\t\t}\n\t\tasync db_land_search( from: string | number, to = from ) {\n\t\t\treturn new Set< $mol_int62_string >()\n\t\t}\n\t\tasync db_land_save( land: $hyoo_crowd_land, units: readonly $hyoo_crowd_unit[] ) { }\n\t\t\n\t\t\n\t\t@ $mol_mem\n\t\tmaster_cursor( next = 0 ) {\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tmaster_link() {\n\t\t\treturn this.$.$hyoo_sync_masters[ this.master_cursor() ]\n\t\t}\n\t\t\n\t\tmaster() {\n\t\t\treturn null as Line | null\n\t\t}\n\t\t\n\t\tserver() {\n\t\t\treturn null as any\n\t\t}\n\t\t\n\t\t\n\t\t@ $mol_mem\n\t\tslaves( next = [] as readonly Line[] ) {\n\t\t\treturn next\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tline_lands( line: Line, next = [] as $hyoo_crowd_land[] ) {\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tline_land_clocks(\n\t\t\t{ line, land }: {\n\t\t\t\tline: Line,\n\t\t\t\tland: $hyoo_crowd_land,\n\t\t\t},\n\t\t\tnext?: readonly[ $hyoo_crowd_clock, $hyoo_crowd_clock ]\n\t\t) {\n\t\t\t$mol_wire_solid()\n\t\t\tthis.master()\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tline_sync( line: Line ) {\n\t\t\t\n\t\t\t$mol_wire_race(\n\t\t\t\t... this.line_lands( line ).map( land =>\n\t\t\t\t\t()=> this.line_land_sync({ line, land })\n\t\t\t\t)\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tline_land_sync( { line, land }: {\n\t\t\tline: Line,\n\t\t\tland: $hyoo_crowd_land,\n\t\t} ) {\n\t\t\t\n\t\t\tthis.line_land_init({ line, land })\n\t\t\t\n\t\t\tlet clocks = this.line_land_clocks({ line, land })\n\t\t\tif( !clocks ) return\n\t\t\t\n\t\t\tconst units = land.delta( clocks )\n\t\t\tif( !units.length ) return\n\t\t\t\n\t\t\t$mol_wire_sync( this as $hyoo_sync_yard<any> ).line_send_units( line, units )\n\t\t\t\n\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\tplace: this,\n\t\t\t\tland: land.id(),\n\t\t\t\tmessage: 'Sync Sent',\n\t\t\t\tline: $mol_key( line ),\n\t\t\t\tunits: this.log_pack( units ),\n\t\t\t})\n\t\t\t\n\t\t\tfor( const unit of units ) {\n\t\t\t\tclocks[ unit.group() ].see_peer( unit.auth, unit.time )\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tline_land_init( { line, land }: {\n\t\t\tline: Line,\n\t\t\tland: $hyoo_crowd_land,\n\t\t} ) {\n\t\t\t\n\t\t\tthis.db_land_init( land )\n\t\t\t\n\t\t\t// const lands = this.line_land_clocks({ line, land })\n\t\t\t// if( lands ) return\n\t\t\t\n\t\t\tthis.line_send_clocks( line, land )\n\t\t\t\n\t\t\t// this.$.$mol_log3_come({\n\t\t\t// \tplace: this,\n\t\t\t// \tland: land.id(),\n\t\t\t// \tmessage: 'Sync Open',\n\t\t\t// \tline: $mol_key( line ),\n\t\t\t// \tclocks: land._clocks,\n\t\t\t// })\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tline_land_neck(\n\t\t\t{ line, land }: {\n\t\t\t\tline: Line,\n\t\t\t\tland: $mol_int62_string,\n\t\t\t},\n\t\t\tnext = [] as Promise<any>[],\n\t\t) {\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tasync line_receive( line: Line, message: Uint8Array ) {\n\t\t\t\n\t\t\tif( !message.byteLength ) return\n\t\t\tconst view = new DataView( message.buffer, message.byteOffset, message.byteLength )\n\t\t\tconst int0 = view.getInt32( 0, true )\n\t\t\tconst int1 = view.getInt32( 4, true )\n\t\t\t\n\t\t\tconst land_id = $mol_int62_to_string({\n\t\t\t\tlo: int0 << 1 >> 1,\n\t\t\t\thi: int1 << 1 >> 1,\n\t\t\t})\n\t\t\t\n\t\t\tconst handle = async( prev?: Promise<any> )=> {\n\t\t\t\t\n\t\t\t\tif( prev ) await prev\n\t\t\t\t\n\t\t\t\tconst world = this.world()\n\t\t\t\tconst land = await $mol_wire_async( world ).land( land_id )\n\t\t\t\t\n\t\t\t\tlet clocks = this.line_land_clocks({ line, land })!\n\t\t\t\tif( !clocks ) this.line_land_clocks(\n\t\t\t\t\t{ line, land },\n\t\t\t\t\tclocks = [ new $hyoo_crowd_clock, new $hyoo_crowd_clock ],\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tif( int0 << 1 >> 1 ^ int0 ) {\n\t\t\t\t\t\n\t\t\t\t\tconst bin = new $hyoo_crowd_clock_bin( message.buffer, message.byteOffset, message.byteLength )\n\t\t\t\t\t\n\t\t\t\t\tfor( let group = 0; group < clocks.length; ++group ) {\n\t\t\t\t\t\tclocks[ group ].see_bin( bin, group )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst lands = this.line_lands( line )\n\t\t\t\t\tif( lands.includes( land ) ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.$.$mol_log3_warn({\n\t\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\t\tland: land.id(),\n\t\t\t\t\t\t\tmessage: 'Already syncing',\n\t\t\t\t\t\t\thint: 'Bug at $hyoo_sync_yard',\n\t\t\t\t\t\t\tline: $mol_key( line ),\n\t\t\t\t\t\t\tclocks,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.line_lands( line, [ ... lands, land ] )\n\t\t\t\t\t\t\n\t\t\t\t\t\t// this.$.$mol_log3_done({\n\t\t\t\t\t\t// \tplace: this,\n\t\t\t\t\t\t// \tland: land.id(),\n\t\t\t\t\t\t// \tmessage: 'Sync Pair',\n\t\t\t\t\t\t// \tline: $mol_key( line ),\n\t\t\t\t\t\t// \tclocks,\n\t\t\t\t\t\t// })\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\n\t\t\t\tconst { allow, forbid } = await world.apply( message )\n\t\t\t\t\n\t\t\t\tfor( const [ unit, error ] of forbid ) {\n\t\t\t\t\t\n\t\t\t\t\tthis.$.$mol_log3_fail({\n\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\tland: land.id(),\n\t\t\t\t\t\tmessage: error,\n\t\t\t\t\t\tline: $mol_key( line ),\n\t\t\t\t\t\tunit,\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( !allow.length ) return\n\t\t\t\t\n\t\t\t\tfor( const unit of allow ) {\n\t\t\t\t\tclocks[ unit.group() ].see_peer( unit.auth, unit.time )\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tland: land.id(),\n\t\t\t\t\tmessage: 'Sync Gain',\n\t\t\t\t\tline: $mol_key( line ),\n\t\t\t\t\tunits: this.log_pack( allow ),\n\t\t\t\t})\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.line_land_neck(\n\t\t\t\t{ line, land: land_id },\n\t\t\t\t[\n\t\t\t\t\thandle( this.line_land_neck({ line, land: land_id })[0] )\n\t\t\t\t],\n\t\t\t)\n\n\t\t} \n\t\t\n\t\tline_send_clocks(\n\t\t\tline: Line,\n\t\t\tland: $hyoo_crowd_land,\n\t\t) {}\n\t\t\n\t\tasync line_send_units(\n\t\t\tline: Line,\n\t\t\tunits: readonly $hyoo_crowd_unit[],\n\t\t) {}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_native( this )\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\n\texport class $mol_syntax2< Lexems extends { [ name : string ] : RegExp } > {\n\t\t\n\t\tconstructor(\n\t\t\tpublic lexems : Lexems\n\t\t) {\n\n\t\t\tfor( let name in lexems ) {\n\t\t\t\tthis.rules.push({\n\t\t\t\t\tname : name ,\n\t\t\t\t\tregExp : lexems[ name ] ,\n\t\t\t\t\tsize : RegExp( '^$|' + lexems[ name ].source ).exec( '' )!.length - 1 , \n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst parts = '(' + this.rules.map( rule => rule.regExp.source ).join( ')|(' ) + ')'\n\t\t\tthis.regexp = RegExp( `([\\\\s\\\\S]*?)(?:(${ parts })|$(?![^]))` , 'gmu' ) \n\t\t\t\n\t\t}\n\t\t\n\t\trules = [] as Array<{\n\t\t\tregExp : RegExp ,\n\t\t\tname : string ,\n\t\t\tsize : number\n\t\t}>\n\t\t\n\t\tregexp : RegExp\n\n\t\ttokenize(\n\t\t\ttext : string ,\n\t\t\thandle : ( name : string , found : string , chunks : string[] , offset : number )=> void ,\n\t\t) {\n\t\t\t\n\t\t\tlet end = 0\n\t\t\t\t\n\t\t\tlexing : while( end < text.length ) {\n\n\t\t\t\tconst start = end\n\n\t\t\t\tthis.regexp.lastIndex = start\n\t\t\t\tvar found = this.regexp.exec( text )!\n\t\t\t\t\n\t\t\t\tend = this.regexp.lastIndex\n\t\t\t\tif( start === end ) throw new Error( 'Empty token' )\n\t\t\t\t\n\t\t\t\tvar prefix = found[ 1 ]\n\t\t\t\tif( prefix ) handle( '' , prefix , [] , start )\n\t\t\t\t\n\t\t\t\tvar suffix = found[ 2 ]\n\t\t\t\tif( !suffix ) continue\n\n\t\t\t\tlet offset = 4\n\t\t\t\tfor( let rule of this.rules ) {\n\n\t\t\t\t\tif( found[ offset - 1 ] ) {\n\t\t\t\t\t\thandle( rule.name , suffix , found.slice( offset, offset + rule.size ) , start + prefix.length )\n\t\t\t\t\t\tcontinue lexing\n\t\t\t\t\t}\n\n\t\t\t\t\toffset += rule.size + 1\n\t\t\t\t}\n\n\t\t\t\t$mol_fail( new Error( '$mol_syntax2 is broken' ) )\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tparse(\n\t\t\ttext : string ,\n\t\t\thandlers : { [ key in keyof Lexems | '' ] : ( found : string , chunks : string[] , offset : number )=> void } ,\n\t\t) : void {\n\t\t\tthis.tokenize( text , ( name , ...args )=> handlers[ name ]( ... args ) )\n\t\t}\n\n\t}\n\t\n}\n",null,"namespace $ {\n\t\n\tconst syntax = new $mol_syntax2({\n\t\t'filter' : /!?=/ ,\n\t\t'list_separator' : /,/ ,\n\t\t'range_separator' : /@/ ,\n\t\t'fetch_open' : /\\[/ ,\n\t\t'fetch_separator' : /[;&\\/?#]/ ,\n\t\t'fetch_close' : /\\]/ ,\n\t})\n\n\texport function $hyoo_harp_from_string( uri: string ): $hyoo_harp_query {\n\t\t\n\t\tlet parent = {} as $hyoo_harp_query\n\t\tlet prev = null as null | $hyoo_harp_query\n\t\tlet stack = [ parent ]\n\t\tlet range = null as null | string[]\n\t\tlet values = null as null | string[][]\n\n\t\tfunction fail_at( offset : number ) {\n\t\t\tconst uri_marked = uri.substring( 0 , offset ) + '\\u035C' + uri.substring( offset )\n\t\t\t$mol_fail( new Error( `Unexpected token at ${ offset } of \"${ uri_marked }\"` ) )\n\t\t}\n\t\t\n\t\tsyntax.parse( uri , {\n\n\t\t\t'' : ( text , chunks , offset ) => {\n\n\t\t\t\tif( values ) {\n\n\t\t\t\t\ttext = decodeURIComponent( text )\n\t\t\t\t\trange = ( range && range.length > 1 )\n\t\t\t\t\t\t? [ range[0] , range[1] + text ]\n\t\t\t\t\t\t: [ ( range?.[0] ?? '' ) + text ]\n\t\t\t\t\t\n\t\t\t\t} else {\n\n\t\t\t\t\tlet [, order, name ] = /^([+-]?)(.*)$/.exec( text )!\n\t\t\t\t\tprev = parent[ decodeURIComponent( name ) ] = {}\n\t\t\t\t\tif( order ) prev[ '+' ] = order === '+'\n\t\t\t\t\tstack.push( parent )\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} ,\n\t\t\t\n\t\t\t'filter' : ( filter , chinks , offset )=> {\n\t\t\t\t\n\t\t\t\tif( values ) {\n\t\t\t\t\tif( range ) {\n\t\t\t\t\t\trange.push( range.pop() + filter )\n\t\t\t\t\t} else {\n\t\t\t\t\t\trange = [ filter ]\n\t\t\t\t\t}\n\t\t\t\t} else \n\t\t\t\t\n\t\t\t\tif( prev ) {\n\t\t\t\t\t\n\t\t\t\t\tvalues = prev[ filter as '=' | '!=' ] = [] as string[][]\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tvalues = [] as string[][]\n\t\t\t\t\tparent[ '' ] = values\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} ,\n\n\t\t\t'list_separator' : ( found , chunks , offset )=> {\n\n\t\t\t\tif( !range ) fail_at( offset )\n\t\t\t\t\n\t\t\t\tvalues!.push( range! )\n\t\t\t\trange = null\n\n\t\t\t} ,\n\t\t\t\n\t\t\t'range_separator' : ( found , chunks , offset )=> {\n\t\t\t\t\n\t\t\t\tif( !values ) fail_at( offset )\n\t\t\t\t\n\t\t\t\trange = [ range?.[0] ?? '', '' ]\n\t\t\t\t\n\t\t\t} ,\n\t\t\t\n\t\t\t'fetch_open' : ( found , chunks , offset )=> {\n\n\t\t\t\tif( range ) {\n\t\t\t\t\tvalues!.push( range )\n\t\t\t\t\trange = null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( !prev ) fail_at( offset )\n\t\t\t\t\n\t\t\t\tparent = prev!\n\t\t\t\tvalues = null\n\t\t\t\tprev = null\n\n\t\t\t} ,\n\t\t\t\n\t\t\t'fetch_separator': ( found , chunks , offset )=> {\n\t\t\t\t\n\t\t\t\tif( range ) {\n\t\t\t\t\tvalues!.push( range )\n\t\t\t\t\trange = null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tparent = stack.pop()!\n\t\t\t\tvalues = null\n\t\t\t\tprev = null\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\t'fetch_close' : ()=> {\n\n\t\t\t\tif( range ) {\n\t\t\t\t\tvalues!.push( range )\n\t\t\t\t\trange = null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tparent = stack.pop()!\n\t\t\t\tvalues = null\n\t\t\t\tprev = null\n\n\t\t\t} ,\n\n\t\t} )\n\n\t\tif( range ) values!.push( range )\n\t\t\n\t\treturn stack[0]\n\t}\n\n}\n",null,"namespace $ {\n\n\texport class $mol_state_arg extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic href( next? : string ) : string {\n\t\t\treturn next || process.argv.slice( 2 ).join( ' ' )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic href_normal(): string {\n\t\t\treturn this.link({})\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic dict( next? : { [ key : string ] : string | null } ) {\n\t\t\tif( next !== void 0 ) this.href( this.make_link( next ) )\n\t\t\t\n\t\t\tvar href = this.href()\n\t\t\tvar chunks = href.split( ' ' )\n\t\t\t\n\t\t\tvar params : { [ key : string ] : string } = {}\n\t\t\tchunks.forEach(\n\t\t\t\tchunk => {\n\t\t\t\t\tif( !chunk ) return\n\t\t\t\t\tvar vals = chunk.split( '=' ).map( decodeURIComponent )\n\t\t\t\t\tparams[ vals.shift()! ] = vals.join('=')\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn params as Readonly< typeof params >\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic value( key : string , next? : string | null ) {\n\t\t\tif( next === void 0 ) return this.dict()[ key ] ?? null\n\t\t\tthis.href( this.link( { [ key ] : next } ) )\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tstatic link( next : any ) {\n\t\t\tvar params : { [ key : string ] : any } = {}\n\t\t\t\n\t\t\tvar prev = this.dict()\n\t\t\tfor( var key in prev ) {\n\t\t\t\tparams[ key ] = prev[ key ]\n\t\t\t}\n\t\t\t\n\t\t\tfor( var key in next ) {\n\t\t\t\tparams[ key ] = next[ key ]\n\t\t\t}\n\t\t\t\n\t\t\treturn this.make_link( params )\n\t\t}\n\t\t\n\t\tstatic make_link( next : { [ key : string ] : any } ) {\n\t\t\tvar chunks : string[] = []\n\t\t\tfor( var key in next ) {\n\t\t\t\tif( null == next[ key ] ) continue\n\t\t\t\tchunks.push( [ key ].concat( next[ key ] ).map( encodeURIComponent ).join( '=' ) )\n\t\t\t}\n\t\t\t\n\t\t\treturn chunks.join( ' ' )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tstatic go( next : { [ key : string ] : string | null } ) {\n\t\t\tthis.href( this.make_link( next ) )\n\t\t}\n\t\t\n\t\tconstructor( public prefix = '' ) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tvalue( key : string , next? : string ) {\n\t\t\treturn ( this.constructor as typeof $mol_state_arg ).value( this.prefix + key , next )\n\t\t}\n\t\t\n\t\tsub( postfix : string ) {\n\t\t\treturn new ( this.constructor as typeof $mol_state_arg )( this.prefix + postfix + '.' )\n\t\t}\n\t\t\n\t\tlink( next : { [ key : string ] : string } ) {\n\t\t\tvar prefix = this.prefix\n\t\t\tvar dict : { [ key : string ] : any } = {}\n\t\t\tfor( var key in next ) {\n\t\t\t\tdict[ prefix + key ] = next[ key ]\n\t\t\t}\n\t\t\treturn ( this.constructor as typeof $mol_state_arg ).link( dict )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_reconcile< Prev, Next >( {\n\t\tprev,\n\t\tfrom,\n\t\tto,\n\t\tnext,\n\t\tequal,\n\t\tdrop,\n\t\tinsert,\n\t\tupdate,\n\t}: {\n\t\tprev: readonly Prev[],\n\t\tfrom: number,\n\t\tto: number,\n\t\tnext: ArrayLike<Next>,\n\t\tequal: ( next: Next, prev: Prev )=> boolean,\n\t\tdrop: ( prev: Prev, lead: Prev | null )=> Prev | null,\n\t\tinsert: ( next: Next, lead: Prev | null )=> Prev,\n\t\tupdate?: ( next: Next, prev: Prev, lead: Prev | null )=> Prev,\n\t} ) {\n\t\t\n\t\tif( !update ) update = ( next, prev, lead )=> insert( next, drop( prev, lead ) )\n\t\t\n\t\tlet p = from\n\t\tlet n = 0\n\t\tlet lead = p ? prev[ p - 1 ] : null\n\t\t\n\t\tif( to > prev.length ) $mol_fail( new RangeError( `To(${ to }) greater then length(${ prev.length })` ) )\n\t\tif( from > to ) $mol_fail( new RangeError( `From(${ to }) greater then to(${ to })` ) )\n\t\n\t\twhile( p < to || n < next.length ) {\n\t\t\t\n\t\t\tif( p < to && n < next.length && equal( next[n], prev[p] ) ) {\n\t\t\t\t\n\t\t\t\tlead = prev[p]\n\t\t\t\t++ p\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t} else if( next.length - n > to - p ) {\n\t\t\t\t\n\t\t\t\tlead = insert( next[n], lead )\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t} else if( next.length - n < to - p ) {\n\t\t\t\t\n\t\t\t\tlead = drop( prev[p], lead )\n\t\t\t\t++ p\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tlead = update( next[n], prev[p], lead )\n\t\t\t\t++ p\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport class $hyoo_crowd_list extends $hyoo_crowd_node {\n\t\t\n\t\t/** Data list representation. */\n\t\tlist( next?: readonly unknown[] ) {\n\t\t\t\n\t\t\tconst units = this.units()\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\treturn units.map( unit => unit.data )\n\t\t\t} else {\n\t\t\t\tthis.insert( next, 0, units.length )\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tset( next?: ReadonlySet< string | number | boolean | null > ) {\n\t\t\treturn new Set( this.list( next && [ ... next ] ) )\n\t\t}\n\t\t\n\t\tinsert(\n\t\t\tnext: readonly unknown[],\n\t\t\tfrom = this.units().length,\n\t\t\tto = from,\n\t\t) {\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: this.units(),\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\tnext,\n\t\t\t\tequal: ( next, prev )=> $mol_compare_deep( prev.data, next ),\n\t\t\t\tdrop: ( prev, lead )=> this.land.wipe( prev ),\n\t\t\t\tinsert: ( next, lead )=> this.land.put(\n\t\t\t\t\tthis.head,\n\t\t\t\t\tthis.land.id_new(),\n\t\t\t\t\tlead?.self ?? '0_0',\n\t\t\t\t\tnext,\n\t\t\t\t),\n\t\t\t\tupdate: ( next, prev, lead )=> this.land.put(\n\t\t\t\t\tprev.head,\n\t\t\t\t\tprev.self,\n\t\t\t\t\tlead?.self ?? '0_0',\n\t\t\t\t\tnext,\n\t\t\t\t),\n\t\t\t})\n\t\t\t\n\t\t}\n\t\t\n\t\tmove(\n\t\t\tfrom: number,\n\t\t\tto: number,\n\t\t) {\n\t\t\t\n\t\t\tconst units = this.units()\n\t\t\tconst lead = to ? units[ to - 1 ] : null\n\t\t\t\n\t\t\tthis.land.move( units[ from ], this.head, lead?.self ?? '0_0' )\n\t\t\t\n\t\t}\n\t\t\n\t\tcut( seat: number ) {\n\t\t\treturn this.land.wipe( this.units()[ seat ] )\n\t\t}\n\t\t\n\t\thas( val: string | number | boolean | null ) {\n\t\t\t\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\tif( unit.data === val ) return true \n\t\t\t}\n\t\t\t\n\t\t\treturn false\n\t\t}\n\t\t\n\t\tadd( val: string | number | boolean | null ) {\n\t\t\tif( this.has( val ) ) return\n\t\t\tthis.insert([ val ])\n\t\t}\n\t\t\n\t\tdrop( val: string | number | boolean | null ) {\n\t\t\t\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\tif( unit.data !== val ) continue\n\t\t\t\tthis.land.wipe( unit )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tnode_make< Node extends typeof $hyoo_crowd_node >( val: unknown, Node: Node ) {\n\t\t\tthis.insert([ val ])\n\t\t\tconst unit = this.units().at(-1)!\n\t\t\treturn this.land.node( unit.self, Node )\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\n\texport type $mol_blob = Blob\n\n\texport let $mol_blob = ( $node.buffer?.Blob ?? $mol_dom_context.Blob ) as any as typeof Blob\n\n}\n","namespace $ {\n\texport class $hyoo_crowd_blob extends $hyoo_crowd_list {\n\t\t\n\t\t/**\n\t\t * URI to Blob.\n\t\t * @todo persistent uri instead of temporary\n\t\t */\n\t\turi() {\n\t\t\treturn URL.createObjectURL( this.blob() )\n\t\t}\n\t\t\n\t\t/** Mime type */\n\t\ttype( next?: string ) {\n\t\t\treturn this.as( $hyoo_crowd_struct ).sub( 'type', $hyoo_crowd_reg ).str( next )\n\t\t}\n\t\t\n\t\t/** Blob, File etc. */\n\t\tblob( next?: $mol_blob ) {\n\t\t\t\n\t\t\tif( next ) {\n\t\t\t\tthis.buffer( new Uint8Array( $mol_wire_sync( next ).arrayBuffer() ), next.type )\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t\treturn new $mol_blob( this.list() as Uint8Array[], {\n\t\t\t\ttype: this.type(),\n\t\t\t} )\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Solid byte buffer. */\n\t\tbuffer( next?: Uint8Array, type = 'application/octet-stream' ) {\n\t\t\t\n\t\t\tif( next ) {\n\t\t\t\t\n\t\t\t\tconst chunks = [] as Uint8Array[]\n\t\t\t\t\n\t\t\t\tlet offset = 0\n\t\t\t\twhile( offset < next.byteLength ) {\n\t\t\t\t\tconst cut = offset + 2**15\n\t\t\t\t\tchunks.push( next.slice( offset, cut ) )\n\t\t\t\t\toffset = cut\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.list( chunks )\n\t\t\t\tthis.type( type )\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tconst chunks = this.list() as Uint8Array[]\n\t\t\t\tconst size = chunks.reduce( ( sum, chunk )=> sum + chunk.byteLength, 0 )\n\t\t\t\tconst res = new Uint8Array( size )\n\t\t\t\t\n\t\t\t\tlet offset = 0\n\t\t\t\tfor( const chunk of chunks ) {\n\t\t\t\t\tres.set( chunk, offset )\n\t\t\t\t\toffset += chunk.byteLength\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn res\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tstr( next?: string, type = 'text/plain' ) {\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\treturn $mol_charset_decode( this.buffer() )\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.buffer( $mol_charset_encode( next ) )\n\t\t\t\tthis.type( type )\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tjson( next?: any, type = 'application/json' ) {\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\treturn JSON.parse( this.str() )\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.str( JSON.stringify( next ), type )\n\t\t\t\treturn next\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\texport class $hyoo_crowd_dict extends $hyoo_crowd_node {\n\t\t\n\t\tkeys( next?: string[] ) {\n\t\t\t\n\t\t\tconst prev = this.units()\n\t\t\tif( !next ) return prev.map( unit => String( unit.data ) )\n\n\t\t\t$mol_reconcile({\n\t\t\t\tprev,\n\t\t\t\tfrom: 0,\n\t\t\t\tto: prev.length,\n\t\t\t\tnext,\n\t\t\t\tequal: ( next, prev )=> prev.data === next,\n\t\t\t\tdrop: ( prev, lead )=> this.land.wipe( prev ),\n\t\t\t\tinsert: ( next, lead )=> this.land.put(\n\t\t\t\t\tthis.head,\n\t\t\t\t\t$mol_int62_hash_string( next + '\\n' + this.head ),\n\t\t\t\t\tlead?.self ?? '0_0',\n\t\t\t\t\tnext,\n\t\t\t\t),\n\t\t\t})\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tsub< Node extends typeof $hyoo_crowd_node >( key: string, Node: Node ) {\n\t\t\tthis.add( key )\n\t\t\treturn new Node( this.land, $mol_int62_hash_string( key + '\\n' +  this.head ) ) as InstanceType< Node >\n\t\t}\n\t\t\n\t\thas( key: string ) {\n\t\t\t\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\tif( unit.data === key ) return true \n\t\t\t}\n\t\t\t\n\t\t\treturn false\n\t\t}\n\t\t\n\t\tadd( key: string ) {\n\t\t\tif( this.has( key ) ) return\n\t\t\tthis.keys([ ... this.keys(), key ])\n\t\t}\n\t\t\n\t\tdrop( key: string ) {\n\t\t\t\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\tif( unit.data !== key ) continue\n\t\t\t\tthis.land.wipe( unit )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\texport type $hyoo_crowd_json_data = {\n\t\t[ key in string ]: null | boolean | number | string | $hyoo_crowd_json_data | ( null | boolean | number | string | $hyoo_crowd_json_data )[]\n\t}\n\t\n\texport class $hyoo_crowd_json extends $hyoo_crowd_dict {\n\t\t\n\t\tjson( next?: $hyoo_crowd_json_data ): $hyoo_crowd_json_data {\n\t\t\t\n\t\t\tconst reg = this.as( $hyoo_crowd_reg )\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\tconst res = {}\n\t\t\t\tfor( const unit of this.units() ) {\n\t\t\t\t\t\n\t\t\t\t\tconst key = unit.data as string\n\t\t\t\t\tconst kid = this.sub( key, $hyoo_crowd_reg )\n\t\t\t\t\tconst val = kid.value()\n\t\t\t\t\t\n\t\t\t\t\tif( Array.isArray( val ) ) {\n\t\t\t\t\t\tres[ key ] = kid.nodes( $hyoo_crowd_list )[0].list()\n\t\t\t\t\t} else if( val && typeof val === 'object' ) {\n\t\t\t\t\t\tres[ key ] = kid.nodes( $hyoo_crowd_json )[0].json()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres[ key ] = val\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\treturn res\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tconst keys = Object.keys( next )\n\t\t\t\tthis.keys( keys )\n\t\t\t\t\n\t\t\t\tfor( const key of keys ) {\n\t\t\t\t\t\n\t\t\t\t\tconst val = next[ key ]\n\t\t\t\t\tconst kid = this.sub( key, $hyoo_crowd_reg )\n\t\t\t\t\t\n\t\t\t\t\tif( Array.isArray( val ) ) {\n\t\t\t\t\t\tkid.value( [] )\n\t\t\t\t\t\tkid.nodes( $hyoo_crowd_list )[0].list( val as $hyoo_crowd_json_data[] )\n\t\t\t\t\t} else if( val && typeof val === 'object' ) {\n\t\t\t\t\t\tkid.value( {} )\n\t\t\t\t\t\tkid.nodes( $hyoo_crowd_json )[0].json( val as $hyoo_crowd_json_data )\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkid.value( val )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n",null,null,null,null,null,"interface String {\n\t\n\tmatch< RE extends RegExp >( regexp: RE ): ReturnType<\n\t\tRE[ typeof Symbol.match ]\n\t>\n\t\n    matchAll< RE extends RegExp >( regexp: RE ): ReturnType<\n\t\tRE[ typeof Symbol.matchAll ]\n\t>\n\t\n}\n\nnamespace $ {\n\t\n\ttype Groups_to_params<T> = {\n\t\t[P in keyof T]?: T[P] | boolean | undefined;\n\t};\t\n\n\texport type $mol_regexp_source =\n\t| number\n\t| string\n\t| RegExp\n\t| { [ key in string ] : $mol_regexp_source }\n\t| readonly[ $mol_regexp_source , ... $mol_regexp_source[] ]\n\n\texport type $mol_regexp_groups< Source extends $mol_regexp_source >\n\t\n\t\t= Source extends number\n\t\t? {}\n\t\t\n\t\t: Source extends string\n\t\t? {}\n\t\t\n\t\t: Source extends $mol_regexp_source[]\n\t\t? $mol_type_merge< $mol_type_intersect< {\n\t\t\t[ key in Extract< keyof Source , number > ] : $mol_regexp_groups< Source[ key ] >\n\t\t}[ Extract< keyof Source , number > ] > >\n\t\t\n\t\t: Source extends RegExp\n\t\t? Record< string, string > extends NonNullable< NonNullable< ReturnType< Source['exec'] > >[ 'groups' ] >\n\t\t\t? {}\n\t\t\t: NonNullable< NonNullable< ReturnType< Source['exec'] > >[ 'groups' ] >\n\t\t\n\t\t: Source extends { readonly [ key in string ] : $mol_regexp_source }\n\t\t? $mol_type_merge< $mol_type_intersect< {\n\t\t\t[ key in keyof Source ] :\n\t\t\t\t$mol_type_merge<\n\t\t\t\t\t& $mol_type_override<\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadonly [ k in Extract< keyof Source , string > ]: string\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadonly [ k in key ]:\n\t\t\t\t\t\t\t\tSource[ key ] extends string\n\t\t\t\t\t\t\t\t\t? Source[ key ]\n\t\t\t\t\t\t\t\t\t: string\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t& $mol_regexp_groups< Source[ key ] >\n\t\t\t\t>\n\t\t}[ keyof Source ] > >\n\n\t\t: never\n\t\t\n\t/** Type safe reguar expression builder */\n\texport class $mol_regexp< Groups extends Record< string , string > > extends RegExp {\n\t\t\n\t\t/** Prefer to use $mol_regexp.from */\n\t\tconstructor( source : string , flags : string = 'gsu' , readonly groups : ( Extract< keyof Groups , string > )[] = [] ) {\n\t\t\tsuper( source , flags )\n\t\t}\n\t\t\n\t\t*[Symbol.matchAll] (str:string): IterableIterator< RegExpMatchArray & $mol_type_override< RegExpMatchArray, { groups?: { [ key in keyof Groups ] : string } } > > {\n\t\t\tconst index = this.lastIndex\n\t\t\tthis.lastIndex = 0\n\t\t\ttry {\n\t\t\t\twhile ( this.lastIndex < str.length ) {\n\t\t\t\t\tconst found = this.exec(str)\n\t\t\t\t\tif( !found ) break\n\t\t\t\t\tyield found\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tthis.lastIndex = index\n\t\t\t}\n\t\t}\n\t\t\n\t\t/** Parses input and returns found capture groups or null */\n\t\t[ Symbol.match ]( str : string ): null | RegExpMatchArray {\n\t\t\tconst res = [ ... this[Symbol.matchAll]( str ) ].filter( r => r.groups ).map( r => r[0] )\n\t\t\tif( !res.length ) return null\n\t\t\treturn res as RegExpMatchArray\n\t\t}\n\t\t\n\t\t/** Splits string by regexp edges */\n\t\t[ Symbol.split ]( str : string ): string[] {\n\t\t\t\n\t\t\tconst res = [] as string[]\n\t\t\tlet token_last = null\n\t\t\t\n\t\t\tfor( let token of this[Symbol.matchAll]( str ) ) {\n\t\t\t\tif( token.groups && ( token_last ? token_last.groups : true ) ) res.push( '' )\n\t\t\t\tres.push( token[0] )\n\t\t\t\ttoken_last = token\n\t\t\t}\n\t\t\t\n\t\t\tif( !res.length ) res.push( '' )\n\t\t\t\n\t\t\treturn res\n\t\t}\n\t\t\n\t\ttest( str : string ): boolean {\n\t\t\treturn Boolean( str.match( this) )\n\t\t}\n\t\t\n\t\texec( str : string ): RegExpExecArray & $mol_type_override< RegExpExecArray , { groups?: { [ key in keyof Groups ] : string } } > | null {\n\t\t\t\n\t\t\tconst from = this.lastIndex\n\t\t\tif( from >= str.length ) return null\n\t\t\t\n\t\t\tconst res = super.exec( str )\n\t\t\tif( res === null ) {\n\t\t\t\tthis.lastIndex = str.length\n\t\t\t\tif( !str ) return null\n\t\t\t\treturn Object.assign( [ str.slice( from ) ], {\n\t\t\t\t\tindex: from,\n\t\t\t\t\tinput: str,\n\t\t\t\t} ) as any\n\t\t\t}\n\n\t\t\tif( from === this.lastIndex ) {\n\t\t\t\t$mol_fail( new Error( 'Captured empty substring' ) )\n\t\t\t}\n\n\t\t\ttype Token = { [ key in keyof Groups ] : string } & { [ key : number ] : string }\n\t\t\tconst groups = {} as Token\n\t\t\t\n\t\t\tconst skipped = str.slice( from , this.lastIndex - res[0].length )\n\t\t\tif( skipped ) {\n\t\t\t\tthis.lastIndex = this.lastIndex - res[0].length\n\t\t\t\treturn Object.assign( [ skipped ], {\n\t\t\t\t\tindex: from,\n\t\t\t\t\tinput: res.input,\n\t\t\t\t} ) as any\n\t\t\t}\n\t\t\t\n\t\t\tfor( let i = 0 ; i < this.groups.length ; ++i ) {\n\t\t\t\tconst group = this.groups[ i ]\n\t\t\t\tgroups[ group ] = groups[ group ] || res[ i + 1 ] || '' as any\n\t\t\t}\n\n\t\t\treturn Object.assign( res, { groups } )\n\t\t}\n\t\t\n\t\tgenerate(\n\t\t\tparams: Groups_to_params< Groups >\n\t\t): string | null {\n\t\t\treturn null\n\t\t}\n\t\t\n\t\tget native() {\n\t\t\treturn new RegExp( this.source, this.flags )\n\t\t}\n\n\t\t/** Makes regexp that non-greedy repeats this pattern from min to max count */\n\t\tstatic repeat<\n\t\t\tSource extends $mol_regexp_source\n\t\t>(\n\t\t\tsource : Source ,\n\t\t\tmin = 0 ,\n\t\t\tmax = Number.POSITIVE_INFINITY ,\n\t\t) : $mol_regexp< $mol_regexp_groups< Source > > {\n\t\n\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\tconst upper = Number.isFinite( max ) ? max : ''\n\t\t\t\n\t\t\tconst str = `(?:${ regexp.source }){${ min },${ upper }}?`\n\t\t\tconst regexp2 =  new $mol_regexp( str , regexp.flags , regexp.groups )\n\t\t\t\n\t\t\tregexp2.generate = params => {\n\t\t\t\tconst res = regexp.generate( params )\n\t\t\t\tif( res ) return res\n\t\t\t\tif( min > 0 ) return res\n\t\t\t\treturn ''\n\t\t\t}\n\t\n\t\t\treturn regexp2\n\t\n\t\t}\n\n\t\t/** Makes regexp that greedy repeats this pattern from min to max count */\n\t\tstatic repeat_greedy<\n\t\t\tSource extends $mol_regexp_source\n\t\t>(\n\t\t\tsource : Source ,\n\t\t\tmin = 0 ,\n\t\t\tmax = Number.POSITIVE_INFINITY ,\n\t\t) : $mol_regexp< $mol_regexp_groups< Source > > {\n\t\n\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\tconst upper = Number.isFinite( max ) ? max : ''\n\t\t\t\n\t\t\tconst str = `(?:${ regexp.source }){${ min },${ upper }}`\n\t\t\tconst regexp2 =  new $mol_regexp( str , regexp.flags , regexp.groups )\n\t\t\t\n\t\t\tregexp2.generate = params => {\n\t\t\t\tconst res = regexp.generate( params )\n\t\t\t\tif( res ) return res\n\t\t\t\tif( min > 0 ) return res\n\t\t\t\treturn ''\n\t\t\t}\n\t\n\t\t\treturn regexp2\n\t\t}\n\n\t\t/** Makes regexp that match any of options */\n\t\tstatic vary<\n\t\t\tSources extends readonly $mol_regexp_source[]\n\t\t>(\n\t\t\tsources : Sources ,\n\t\t) {\n\t\t\t\n\t\t\tconst groups = [] as string[]\n\t\t\t\n\t\t\tconst chunks = sources.map( source => {\n\n\t\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\t\tgroups.push( ... regexp.groups )\n\t\t\t\t\n\t\t\t\treturn regexp.source\n\n\t\t\t} ) as any as readonly[ $mol_regexp_source , ... $mol_regexp_source[] ]\n\t\t\t\n\t\t\treturn new $mol_regexp< $mol_regexp_groups< Sources[number] > >(\n\t\t\t\t`(?:${ chunks.join('|') })` ,\n\t\t\t\t'' ,\n\t\t\t\tgroups as any[] ,\n\t\t\t)\n\t\t\t\n\t\t}\n\n\t\t/** Makes regexp that allow absent of this pattern */\n\t\tstatic optional<\n\t\t\tSource extends $mol_regexp_source\n\t\t>( source : Source ) {\n\t\t\treturn $mol_regexp.repeat_greedy( source , 0 , 1 )\n\t\t}\n\n\t\t/** Makes regexp that look ahead for pattern */\n\t\tstatic force_after( source : $mol_regexp_source ) {\n\n\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\t\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`(?=${ regexp.source })` ,\n\t\t\t\tregexp.flags ,\n\t\t\t\tregexp.groups ,\n\t\t\t)\n\n\t\t}\n\n\t\t/** Makes regexp that look ahead for pattern */\n\t\tstatic forbid_after( source : $mol_regexp_source ) {\n\n\t\t\tconst regexp = $mol_regexp.from( source )\n\t\t\t\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`(?!${ regexp.source })` ,\n\t\t\t\tregexp.flags ,\n\t\t\t\tregexp.groups ,\n\t\t\t)\n\n\t\t}\n\n\t\t/** Converts some js values to regexp */\n\t\tstatic from<\n\t\t\tSource extends $mol_regexp_source\n\t\t>(\n\t\t\tsource : Source ,\n\t\t\t{ ignoreCase , multiline } : Partial< Pick< RegExp , 'ignoreCase' | 'multiline' > > = {\n\t\t\t\tignoreCase : false ,\n\t\t\t\tmultiline : false ,\n\t\t\t} ,\n\t\t) : $mol_regexp< $mol_regexp_groups< Source > > {\n\n\t\t\tlet flags = 'gsu'\n\t\t\tif( multiline ) flags += 'm'\n\t\t\tif( ignoreCase ) flags += 'i'\n\n\t\t\tif( typeof source === 'number' ) {\n\n\t\t\t\tconst src = `\\\\u{${ source.toString(16) }}`\n\t\t\t\tconst regexp = new $mol_regexp< $mol_regexp_groups< Source > >( src , flags )\n\t\t\t\tregexp.generate = ()=> src\n\t\t\t\treturn regexp\n\n\t\t\t} if( typeof source === 'string' ) {\n\n\t\t\t\tconst src = source.replace( /[.*+?^${}()|[\\]\\\\]/g , '\\\\$&' ) \n\t\t\t\tconst regexp = new $mol_regexp< $mol_regexp_groups< Source > >( src , flags )\n\t\t\t\tregexp.generate = ()=> source\n\t\t\t\treturn regexp\n\n\t\t\t} else if( source instanceof $mol_regexp ) {\n\t\t\t\t\n\t\t\t\tconst regexp =  new $mol_regexp<any>( source.source, flags, source.groups )\n\t\t\t\tregexp.generate = params => source.generate( params )\n\t\t\t\treturn regexp\n\t\t\t\t\n\t\t\t} if( source instanceof RegExp ) {\n\n\n\t\t\t\tconst test = new RegExp( '|' + source.source )\n\t\t\t\tconst groups = Array.from(\n\t\t\t\t\t{ length : test.exec('')!.length - 1 } ,\n\t\t\t\t\t( _ , i )=> String( i + 1 ) ,\n\t\t\t\t)\n\n\t\t\t\tconst regexp = new $mol_regexp< $mol_regexp_groups< Source > >(\n\t\t\t\t\tsource.source ,\n\t\t\t\t\tsource.flags ,\n\t\t\t\t\tgroups as any ,\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tregexp.generate = ()=> ''\n\n\t\t\t\treturn regexp\n\n\t\t\t} if( Array.isArray( source ) ) {\n\n\t\t\t\tconst patterns = source.map( src => Array.isArray( src )\n\t\t\t\t\t? $mol_regexp.optional( src as any )\n\t\t\t\t\t: $mol_regexp.from( src )\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tconst chunks = patterns.map( pattern => pattern.source )\n\t\t\t\t\n\t\t\t\tconst groups = [] as ( Extract< keyof $mol_regexp_groups< Source > , string > )[]\n\n\t\t\t\tlet index = 0\n\t\t\n\t\t\t\tfor( const pattern of patterns ) {\n\t\t\t\t\t\n\t\t\t\t\tfor( let group of pattern.groups ) {\n\t\t\t\t\t\tif( Number( group ) >= 0 ) {\n\t\t\t\t\t\t\tgroups.push( String( index ++ ) as any )\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgroups.push( group )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst regexp = new $mol_regexp( chunks.join( '' ) , flags , groups )\n\t\t\t\t\n\t\t\t\tregexp.generate = params => {\n\t\t\t\t\tlet res = ''\n\t\t\t\t\tfor( const pattern of patterns ) {\n\t\t\t\t\t\tlet sub = pattern.generate( params )\n\t\t\t\t\t\tif( sub === null ) return ''\n\t\t\t\t\t\tres += sub\n\t\t\t\t\t}\n\t\t\t\t\treturn res\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn regexp\n\t\t\n\t\t\t} else {\n\n\t\t\t\tconst groups = [] as string[]\n\n\t\t\t\tconst chunks = Object.keys( source ).map( name => {\n\n\t\t\t\t\tgroups.push( name )\n\n\t\t\t\t\tconst regexp = $mol_regexp.from( source[ name ] )\n\t\t\t\t\tgroups.push( ... regexp.groups )\n\t\t\t\t\t\n\t\t\t\t\treturn `(${regexp.source})`\n\n\t\t\t\t} ) as any as readonly[ $mol_regexp_source , ... $mol_regexp_source[] ]\n\n\t\t\t\tconst regexp = new $mol_regexp< $mol_regexp_groups< Source > >(\n\t\t\t\t\t`(?:${ chunks.join('|') })` ,\n\t\t\t\t\tflags ,\n\t\t\t\t\tgroups as any[] ,\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tconst validator = new RegExp( '^' + regexp.source + '$', flags )\n\t\t\t\tregexp.generate = params => {\n\t\t\t\t\t\n\t\t\t\t\tfor( let option in source ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( option in params ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( typeof params[ option as any ] === 'boolean' ) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( !params[ option as any ] ) continue\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst str = String( params[ option as any ] )\n\t\t\t\t\t\t\t\tif( str.match( validator ) ) return str\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$mol_fail( new Error( `Wrong param: ${option}=${str}` ) )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif( typeof source[ option as any ] !== 'object' ) continue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst res = $mol_regexp.from( source[ option as any ] ).generate( params )\n\t\t\t\t\t\tif( res ) return res\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn regexp\n\n\t\t\t}\n\t\n\t\t}\n\n\t\t/** Makes regexp which includes only unicode category */\n\t\tstatic unicode_only( ... category: $mol_unicode_category ) {\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`\\\\p{${ category.join( '=' ) }}`\n\t\t\t)\n\t\t}\n\n\t\t/** Makes regexp which excludes unicode category */\n\t\tstatic unicode_except( ... category: $mol_unicode_category ) {\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`\\\\P{${ category.join( '=' ) }}`\n\t\t\t)\n\t\t}\n\n\t\tstatic char_range(\n\t\t\tfrom: number,\n\t\t\tto: number,\n\t\t): $mol_regexp<{}> {\n\t\t\treturn new $mol_regexp(\n\t\t\t\t`${ $mol_regexp.from( from ).source }-${ $mol_regexp.from( to ).source }`\n\t\t\t)\n\t\t}\n\n\t\tstatic char_only(\n\t\t\t... allowed: readonly [ $mol_regexp_source, ... $mol_regexp_source[] ]\n\t\t): $mol_regexp<{}> {\n\t\t\tconst regexp = allowed.map( f => $mol_regexp.from( f ).source ).join('')\n\t\t\treturn new $mol_regexp( `[${ regexp }]` )\n\t\t}\n\n\t\tstatic char_except(\n\t\t\t... forbidden: readonly [ $mol_regexp_source, ... $mol_regexp_source[] ]\n\t\t): $mol_regexp<{}> {\n\t\t\tconst regexp = forbidden.map( f => $mol_regexp.from( f ).source ).join('')\n\t\t\treturn new $mol_regexp( `[^${ regexp }]` )\n\t\t}\n\t\t\n\t\tstatic decimal_only = $mol_regexp.from( /\\d/gsu )\n\t\tstatic decimal_except = $mol_regexp.from( /\\D/gsu )\n\t\t\n\t\tstatic latin_only = $mol_regexp.from( /\\w/gsu )\n\t\tstatic latin_except = $mol_regexp.from( /\\W/gsu )\n\t\t\n\t\tstatic space_only = $mol_regexp.from( /\\s/gsu )\n\t\tstatic space_except = $mol_regexp.from( /\\S/gsu )\n\t\t\n\t\tstatic word_break_only = $mol_regexp.from( /\\b/gsu )\n\t\tstatic word_break_except = $mol_regexp.from( /\\B/gsu )\n\t\t\n\t\tstatic tab = $mol_regexp.from( /\\t/gsu )\n\t\tstatic slash_back = $mol_regexp.from( /\\\\/gsu )\n\t\tstatic nul = $mol_regexp.from( /\\0/gsu )\n\t\t\n\t\tstatic char_any = $mol_regexp.from( /./gsu )\n\t\tstatic begin = $mol_regexp.from( /^/gsu )\n\t\tstatic end = $mol_regexp.from( /$/gsu )\n\t\tstatic or = $mol_regexp.from( /|/gsu )\n\t\t\n\t\tstatic line_end = $mol_regexp.from({\n\t\t\twin_end: [ [ '\\r' ], '\\n' ],\n\t\t\tmac_end: '\\r',\n\t\t})\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\tconst { unicode_only, line_end, tab, repeat_greedy, optional, forbid_after, force_after, char_only, char_except } = $mol_regexp \n\t\n\texport let $hyoo_crowd_tokenizer = $mol_regexp.from({\n\t\ttoken: {\n\t\t\t\n\t\t\t'line-break': line_end ,\n\t\t\t\n\t\t\t'indents': repeat_greedy( tab, 1 ),\n\t\t\t\n\t\t\t'emoji': [\n\t\t\t\t\n\t\t\t\tunicode_only( 'Extended_Pictographic' ),\n\t\t\t\toptional( unicode_only( 'Emoji_Modifier' ) ),\n\t\t\t\t\n\t\t\t\trepeat_greedy([\n\t\t\t\t\t\n\t\t\t\t\tunicode_only( 'Emoji_Component' ),\n\t\t\t\t\t\n\t\t\t\t\tunicode_only( 'Extended_Pictographic' ),\n\t\t\t\t\toptional( unicode_only( 'Emoji_Modifier' ) ),\n\t\t\t\t\t\n\t\t\t\t]),\n\t\t\t\t\n\t\t\t],\n\t\t\t\n\t\t\t'link': /\\b(https?:\\/\\/[^\\s,.;:!?\")]+(?:[,.;:!?\")][^\\s,.;:!?\")]+)+)/,\n\t\t\t\n\t\t\t'Word': [\n\t\t\t\t\n\t\t\t\t[\n\t\t\t\t\tforbid_after( line_end ),\n\t\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\t],\n\t\t\t\t\n\t\t\t\trepeat_greedy( char_only([\n\t\t\t\t\tunicode_only( 'General_Category', 'Uppercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t]), 1 ),\n\t\t\t\t\n\t\t\t\trepeat_greedy( char_only([\n\t\t\t\t\tunicode_only( 'General_Category', 'Lowercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t]) ),\n\t\t\t\t\n\t\t\t],\n\t\t\t\n\t\t\t'word': [\n\t\t\t\t[\n\t\t\t\t\tforbid_after( line_end ),\n\t\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\t],\n\t\t\t\trepeat_greedy( char_only([\n\t\t\t\t\tunicode_only( 'General_Category', 'Lowercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t]), 1 ),\n\t\t\t],\n\t\t\t\n\t\t\t'spaces': [\n\t\t\t\tforbid_after( line_end ),\n\t\t\t\trepeat_greedy( unicode_only( 'White_Space' ), 1 ),\n\t\t\t\tforce_after( unicode_only( 'White_Space' ) ),\n\t\t\t],\n\t\t\t\n\t\t\t'space': [\n\t\t\t\tforbid_after( line_end ),\n\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\tforbid_after([\n\t\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Uppercase_Letter' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Lowercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t]),\n\t\t\t],\n\t\t\t\n\t\t\t'others': [\n\t\t\t\t\n\t\t\t\trepeat_greedy( char_except([\n\t\t\t\t\tunicode_only( 'General_Category', 'Uppercase_Letter' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Lowercase_Letter' ),\n\t\t\t\t\tunicode_only( 'Diacritic' ),\n\t\t\t\t\tunicode_only( 'General_Category', 'Number' ),\n\t\t\t\t\tunicode_only( 'White_Space' ),\n\t\t\t\t]), 1 ),\n\t\t\t\t\n\t\t\t],\n\t\t\t\n\t\t},\n\t} ).native\n\n}\n","namespace $ {\n\texport class $hyoo_crowd_text extends $hyoo_crowd_node {\n\t\t\n\t\t/** Text representation. Based on list of strings. */\n\t\ttext( next?: string ): string {\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\treturn this.str()\n\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tconst prev = this.units()\n\t\t\t\tconst lines = next.match(/.*\\n|.+$/g) ?? []\n\t\t\t\t\n\t\t\t\t$mol_reconcile({\n\t\t\t\t\tprev,\n\t\t\t\t\tfrom: 0,\n\t\t\t\t\tto: prev.length,\n\t\t\t\t\tnext: lines,\n\t\t\t\t\tequal: ( next, prev )=> {\n\t\t\t\t\t\tif( typeof prev.data === 'string' ) return false\n\t\t\t\t\t\treturn this.land.node( prev.self, $hyoo_crowd_text ).str() === next\n\t\t\t\t\t},\n\t\t\t\t\tdrop: ( prev, lead )=> this.land.wipe( prev ),\n\t\t\t\t\tinsert: ( next, lead )=> {\n\t\t\t\t\t\tconst unit = this.land.put(\n\t\t\t\t\t\t\tthis.head,\n\t\t\t\t\t\t\tthis.land.id_new(),\n\t\t\t\t\t\t\tlead?.self ?? '0_0',\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t)\n\t\t\t\t\t\tthis.land.node( unit.self, $hyoo_crowd_text ).str( next )\n\t\t\t\t\t\treturn unit\n\t\t\t\t\t},\n\t\t\t\t\tupdate: ( next, prev, lead )=> {\n\t\t\t\t\t\tthis.land.node( prev.self, $hyoo_crowd_text ).str( next )\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Text representation. Based on list of strings. */\n\t\tstr( next?: string ) {\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\tlet str = ''\n\t\t\t\t\n\t\t\t\tfor( const unit of this.units() ) {\n\t\t\t\t\tif( typeof unit.data === 'string' ) str += unit.data\n\t\t\t\t\telse str += this.land.node( unit.self, $hyoo_crowd_text ).str()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn str\n\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.write( next, 0, -1 )\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twrite(\n\t\t\tnext: string,\n\t\t\tstr_from = -1,\n\t\t\tstr_to = str_from,\n\t\t) {\n\t\t\t\n\t\t\tconst list = this.units()\n\t\t\t\n\t\t\tlet from = str_from < 0 ? list.length : 0\n\t\t\tlet word = ''\n\t\t\t\n\t\t\twhile( from < list.length ) {\n\t\t\t\t\n\t\t\t\tword = String( list[ from ].data )\n\t\t\t\t\n\t\t\t\tif( str_from <= word.length ) {\n\t\t\t\t\tnext = word.slice( 0, str_from ) + next\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstr_from -= word.length\n\t\t\t\tif( str_to > 0 ) str_to -= word.length\n\t\t\t\t\n\t\t\t\tfrom ++\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlet to = str_to < 0 ? list.length : from\n\t\t\t\n\t\t\twhile( to < list.length ) {\n\t\t\t\t\n\t\t\t\tword = String( list[ to ].data )\n\t\t\t\tto ++\n\t\t\t\t\n\t\t\t\tif( str_to < word.length ) {\n\t\t\t\t\tnext = next + word.slice( str_to )\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstr_to -= word.length\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif( from && from === list.length ) {\n\t\t\t\t-- from\n\t\t\t\tnext = String( list[ from ].data ) + next\n\t\t\t}\n\t\t\t\n\t\t\tconst words = next.match( $hyoo_crowd_tokenizer ) ?? []\n\t\t\tthis.as( $hyoo_crowd_list ).insert( words, from, to )\n\t\t\t\n\t\t\treturn this\n\t\t}\n\n\t\tpoint_by_offset( offset: number ): readonly[ $mol_int62_string, number ] {\n\t\t\t\n\t\t\tlet off = offset\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\t\n\t\t\t\tif( typeof unit.data === 'string' ) {\n\t\t\t\t\t\n\t\t\t\t\tconst len = String( unit.data ).length\n\t\t\t\t\t\n\t\t\t\t\tif( off <= len ) return [ unit.self, off ]\n\t\t\t\t\telse off -= len\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tconst found = this.land.node( unit.self, $hyoo_crowd_text ).point_by_offset( off )\n\t\t\t\t\tif( found[0] !== '0_0' ) return found\n\t\t\t\t\t\n\t\t\t\t\toff = found[1]\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn [ '0_0', off ]\n\t\t}\n\t\t\n\t\toffset_by_point( [ self, offset ]: [ $mol_int62_string, number ] ): readonly[ $mol_int62_string, number ]  {\n\t\t\t\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\t\n\t\t\t\tif( unit.self === self ) return [ self, offset ]\n\t\t\t\t\n\t\t\t\tif( typeof unit.data === 'string' ) {\n\t\t\t\t\t\n\t\t\t\t\toffset += unit.data.length\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tconst found = this.land.node( unit.self, $hyoo_crowd_text ).offset_by_point([ self, offset ])\n\t\t\t\t\tif( found[0] !== '0_0' ) return [ self, found[1] ]\n\t\t\t\t\t\n\t\t\t\t\toffset = found[1]\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn [ '0_0', offset ]\n\t\t}\n\t\t\n\t\tselection( peer: $mol_int62_string, next?: number[] ) {\n\t\t\t\n\t\t\tconst reg = this.land.selection( peer )\n\t\t\t\n\t\t\tif( next ) {\n\t\t\t\treg.value( next.map( offset => this.point_by_offset( offset ) ) )\n\t\t\t\treturn next\n\t\t\t} else {\n\t\t\t\tthis.units() // track text to recalc selection on its change\n\t\t\t\treturn ( reg.value() as readonly[ $mol_int62_string, number ][] )\n\t\t\t\t\t?.map( point => this.offset_by_point( point )[1] ) ?? [ 0, 0 ]\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_dom_render_children (\n\t\tel : Element | DocumentFragment ,\n\t\tchildNodes : NodeList | Array< Node | string | null >\n\t) {\n\t\tconst node_set = new Set< Node | string | null >( childNodes )\n\t\t\n\t\tlet nextNode : Node | null = el.firstChild\n\t\tfor( let view of childNodes ) {\n\n\t\t\tif( view == null ) continue\n\n\t\t\tif( view instanceof $mol_dom_context.Node ) {\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\tif( !nextNode ) {\n\t\t\t\t\t\tel.appendChild( view )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif( nextNode == view ) {\n\t\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( node_set.has( nextNode ) ) {\n\t\t\t\t\t\t\tel.insertBefore( view , nextNode )\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst nn = nextNode.nextSibling\n\t\t\t\t\t\t\tel.removeChild( nextNode )\n\t\t\t\t\t\t\tnextNode = nn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif( nextNode && nextNode.nodeName === '#text' ) {\n\t\t\t\t\tconst str = String( view )\n\t\t\t\t\tif( nextNode.nodeValue !== str ) nextNode.nodeValue = str\n\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t} else {\n\t\t\t\t\tconst textNode = $mol_dom_context.document.createTextNode( String( view ) )\n\t\t\t\t\tel.insertBefore( textNode , nextNode )\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twhile( nextNode ) {\n\t\t\tconst currNode = nextNode\n\t\t\tnextNode = currNode.nextSibling\n\t\t\tel.removeChild( currNode )\n\t\t}\n\t}\n\n}\n",null,"namespace $ {\n\n\texport let $mol_jsx_prefix = ''\n\texport let $mol_jsx_crumbs = ''\n\n\texport let $mol_jsx_booked = null as null | Set< string >\n\t\n\texport let $mol_jsx_document : $mol_jsx.JSX.ElementClass['ownerDocument'] = {\n\t\tgetElementById : ()=> null ,\n\t\tcreateElementNS : ( space: string, name : string )=> $mol_dom_context.document.createElementNS( space, name ) as any,\n\t\tcreateDocumentFragment : ()=> $mol_dom_context.document.createDocumentFragment(),\n\t}\n\t\n\texport const $mol_jsx_frag = ''\n\n\texport function $mol_jsx<\n\t\tProps extends $mol_jsx.JSX.IntrinsicAttributes,\n\t\tChildren extends Array< Node | string >\n\t>(\n\t\tElem : string\n\t\t\t| ( ( props : Props , ... children : Children ) => Element ) ,\n\t\tprops : Props ,\n\t\t... childNodes : Children\n\t) : Element | DocumentFragment {\n\n\t\tconst id = props && props.id || ''\n\t\tconst guid = id ? $mol_jsx_prefix ? $mol_jsx_prefix + '/'+ id : id : $mol_jsx_prefix\n\t\tconst crumbs_self = id ? $mol_jsx_crumbs.replace( /(\\S+)/g, `$1_${ id.replace( /\\/.*/i, '' ) }` ) : $mol_jsx_crumbs\n\t\t\n\t\tif( Elem && $mol_jsx_booked ) {\n\t\t\tif( $mol_jsx_booked.has( id ) ) {\n\t\t\t\t$mol_fail( new Error( `JSX already has tag with id ${ JSON.stringify( guid ) }` ) )\n\t\t\t} else {\n\t\t\t\t$mol_jsx_booked.add( id )\n\t\t\t}\n\t\t}\n\n\t\tlet node: Element | DocumentFragment | null = guid ? $mol_jsx_document.getElementById( guid ) : null\n\n\t\tif( $mol_jsx_prefix ) {\n\t\t\t\n\t\t\tconst prefix_ext = $mol_jsx_prefix\n\t\t\tconst booked_ext = $mol_jsx_booked\n\t\t\tconst crumbs_ext = $mol_jsx_crumbs\n\t\t\t\n\t\t\tfor( const field in props ) {\n\t\t\t\t\n\t\t\t\tconst func = props[ field ]\n\t\t\t\tif( typeof func !== 'function' ) continue\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tconst wrapper = function( this: any, ... args: any[] ) {\n\t\t\t\t\t\n\t\t\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\t\t\tconst booked = $mol_jsx_booked\n\t\t\t\t\tconst crumbs = $mol_jsx_crumbs\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\n\t\t\t\t\t\t$mol_jsx_prefix = prefix_ext\n\t\t\t\t\t\t$mol_jsx_booked = booked_ext\n\t\t\t\t\t\t$mol_jsx_crumbs = crumbs_ext\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn func.call( this, ... args )\n\t\t\t\t\t\t\n\t\t\t\t\t} finally {\n\t\t\t\t\t\t\n\t\t\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t\t\t$mol_jsx_booked = booked\n\t\t\t\t\t\t$mol_jsx_crumbs = crumbs\n\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_func_name_from( wrapper, func )\n\t\t\t\tprops[ field ] = wrapper as any\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tif( typeof Elem !== 'string' ) {\n\n\t\t\tif( 'prototype' in Elem ) {\n\n\t\t\t\tconst view = node && node[ Elem as any ] || new ( Elem as any )\n\t\t\t\t\n\t\t\t\tObject.assign( view , props )\n\t\t\t\tview[ Symbol.toStringTag ] = guid\n\t\t\t\t\n\t\t\t\tview.childNodes = childNodes\n\t\t\t\t\n\t\t\t\tif( !view.ownerDocument ) view.ownerDocument = $mol_jsx_document\n\t\t\t\tview.className = ( crumbs_self ? crumbs_self + ' ' : '' ) + ( Elem['name'] || Elem )\n\t\t\t\t\n\t\t\t\tnode = view.valueOf()\n\t\t\t\t\n\t\t\t\tnode![ Elem as any ] = view\n\t\t\t\t\n\t\t\t\treturn node!\n\n\t\t\t} else {\n\n\t\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\t\tconst booked = $mol_jsx_booked\n\t\t\t\tconst crumbs = $mol_jsx_crumbs\n\t\t\t\t\n\t\t\t\ttry {\n\t\n\t\t\t\t\t$mol_jsx_prefix = guid\n\t\t\t\t\t$mol_jsx_booked = new Set\n\t\t\t\t\t$mol_jsx_crumbs = ( crumbs_self ? crumbs_self + ' ' : '' ) + ( Elem['name'] || Elem )\n\t\n\t\t\t\t\treturn ( Elem as any )( props , ... childNodes )\n\t\t\t\t\t\n\t\t\t\t} finally {\n\n\t\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t\t$mol_jsx_booked = booked\n\t\t\t\t\t$mol_jsx_crumbs = crumbs\n\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tif( !node ) {\n\t\t\tnode = Elem\n\t\t\t\t? $mol_jsx_document.createElementNS( props?.xmlns ?? 'http://www.w3.org/1999/xhtml', Elem )\n\t\t\t\t: $mol_jsx_document.createDocumentFragment()\n\t\t}\n\n\t\t$mol_dom_render_children( node , ( [] as ( Node | string )[] ).concat( ... childNodes ) )\n\t\tif( !Elem ) return node\n\n\t\tif( guid ) ( node as Element ).id = guid\n\t\tfor( const key in props ) {\n\t\t\tif( key === 'id' ) continue\n\t\t\t\n\t\t\tif( typeof props[ key ] === 'string' ) {\n\t\t\t\t\n\t\t\t\tif( typeof node[ key as any ] === 'string' ) node[ key as any ] = props[ key ]\n\t\t\t\t;( node as Element ).setAttribute( key , props[ key as any ] )\n\t\t\t\t\n\t\t\t} else if(\n\t\t\t\tprops[ key ] &&\n\t\t\t\ttypeof props[ key ] === 'object' &&\n\t\t\t\tReflect.getPrototypeOf( props[ key ] as any ) === Reflect.getPrototypeOf({})\n\t\t\t) {\n\n\t\t\t\tif( typeof node[ key as any ] === 'object' ) {\n\t\t\t\t\tObject.assign( ( node as any )[ key ] , props[ key ] )\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tnode[ key as any ] = props[ key ]\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tif( $mol_jsx_crumbs ) ( node as Element ).className = ( props?.['class'] ? props['class'] + ' ' : '' ) + crumbs_self\n\n\t\treturn node\n\n\t}\n\n\texport declare namespace $mol_jsx.JSX {\n\n\t\texport interface Element extends HTMLElement {\n\t\t\tclass?: string\n\t\t}\n\t\t\n\t\texport interface ElementClass {\n\t\t\tattributes : {}\n\t\t\townerDocument : Pick< Document , 'getElementById' | 'createElementNS' | 'createDocumentFragment' >\n\t\t\tchildNodes : Array< Node | string >\n\t\t\tvalueOf() : Element\n\t\t}\n\t\t\n\t\ttype OrString< Dict > = {\n\t\t\t[ key in keyof Dict ]: Dict[ key ] | string\n\t\t}\n\t\t\n\t\t/** Props for html elements */\n\t\texport type IntrinsicElements = {\n\t\t\t[ key in keyof ElementTagNameMap ]? : $.$mol_type_partial_deep< OrString<\n\t\t\t\t& Element\n\t\t\t\t& IntrinsicAttributes\n\t\t\t\t& ElementTagNameMap[ key ]\n\t\t\t> >\n\t\t}\n\t\t\n\t\t/** Additional undeclared props */\n\t\texport interface IntrinsicAttributes {\n\t\t\tid? : string\n\t\t\txmlns? : string\n\t\t}\n\t\t\n\t\texport interface ElementAttributesProperty {\n\t\t\tattributes : {\n\t\t\t}\n\t\t}\n\t\t\n\t\t// export type IntrinsicClassAttributes< Class > = $.$mol_type_partial_deep< Omit< Class , 'valueOf' > >\n\t\t\n\t\tinterface ElementChildrenAttribute {\n\t\t}\n\t\n\t}\n\n}\n","namespace $ {\n\n\texport let $hyoo_marked_cut = $mol_regexp.from([\n\t\t'--',\n\t\t$mol_regexp.line_end,\n\t])\n\t\n}\n","namespace $ {\n\n\tconst { optional, slash_back, char_any, char_except, repeat } = $mol_regexp\n\n\texport let $hyoo_marked_line_content = repeat( char_except( '\\r\\n' ), 1 )\n\n\tconst uri = repeat( char_except( slash_back ) )\n\n\tfunction with_marker<\n\t\tGroups extends { content: string }\n\t>(\n\t\tmarker: string,\n\t\tcontent = $mol_regexp.from({\n\t\t\tcontent: $hyoo_marked_line_content\n\t\t}) as $mol_regexp< Groups >,\n\t) {\n\t\treturn $mol_regexp.from([ { marker }, content, marker ])\n\t}\n\n\tconst strong = with_marker( '**' )\n\tconst emphasis = with_marker( '//' )\n\tconst insertion = with_marker( '++' )\n\tconst deletion = with_marker( '--' )\n\tconst code = with_marker( ';;' )\n\n\tconst with_uri = $mol_regexp.from([\n\t\toptional([\n\t\t\t{ content: $hyoo_marked_line_content },\n\t\t\tslash_back\n\t\t]),\n\t\t{ uri },\n\t])\n\n\tconst link = with_marker( '\\\\\\\\', with_uri ) \n\tconst embed = with_marker( '\"\"', with_uri )\n\n\tconst inline = $mol_regexp.from({ strong, emphasis, insertion, deletion, code, link, embed })\n\n\texport let $hyoo_marked_line = $mol_regexp.from({ inline })\n\t\n}\n","namespace $ {\n\n\texport let $hyoo_marked_header = $mol_regexp.from([\n\t\t{ marker: $mol_regexp.repeat_greedy( '=', 1, 6 ) },\n\t\t' ',\n\t\t{ content: $hyoo_marked_line_content },\n\t\t$mol_regexp.line_end,\n\t])\n\t\n}\n","namespace $ {\n\n\texport let $hyoo_marked_list_line = $mol_regexp.from([\n\t\t{ indent: $mol_regexp.repeat('  ') },\n\t\t{ marker: [ '-', $mol_regexp.or, '+' ] },\n\t\t' ',\n\t\t{ content: $hyoo_marked_line_content },\n\t\t$mol_regexp.line_end,\n\t])\n\n\texport let $hyoo_marked_list_item = $mol_regexp.from([\n\t\t$hyoo_marked_list_line,\n\t\t{ kids: $mol_regexp.repeat_greedy([\n\t\t\t'  ',\n\t\t\t$hyoo_marked_line_content,\n\t\t\t$mol_regexp.line_end,\n\t\t]) },\n\t])\n\n\texport let $hyoo_marked_list = $mol_regexp.repeat_greedy( $hyoo_marked_list_item, 1 )\n\n}\n","namespace $ {\n\n\texport let $hyoo_marked_quote_line = $mol_regexp.from([\n\t\t{ marker: '\"' },\n\t\t' ',\n\t\t{ content: $hyoo_marked_line_content },\n\t\t$mol_regexp.line_end,\n\t])\n\n\texport let $hyoo_marked_quote = $mol_regexp.repeat_greedy( $hyoo_marked_quote_line, 1 )\n\n}\n","namespace $ {\n\n\texport let $hyoo_marked_table_line = $mol_regexp.from([\n\t\t{ indent: $mol_regexp.repeat('  ') },\n\t\t{ marker: '!' },\n\t\t' ',\n\t\t{ content: $hyoo_marked_line_content },\n\t\t$mol_regexp.line_end,\n\t])\n\n\texport let $hyoo_marked_table_row = $mol_regexp.from({ content: [\n\t\t$hyoo_marked_table_line,\n\t\t$mol_regexp.repeat_greedy([\n\t\t\t'  ',\n\t\t\t$hyoo_marked_line_content,\n\t\t\t$mol_regexp.line_end,\n\t\t]),\n\t] })\n\n\texport let $hyoo_marked_table = $mol_regexp.repeat_greedy( $hyoo_marked_table_line, 1 )\n\n}\n","namespace $ {\n\n\tconst { or } = $mol_regexp\n\n\texport let $hyoo_marked_script_line = $mol_regexp.from([\n\t\t'  ',\n\t\t{ marker: [ '  ', or, '++', or, '--', or, '**' ] },\n\t\t{ content: $hyoo_marked_line_content },\n\t\t$mol_regexp.line_end,\n\t])\n\n\texport let $hyoo_marked_script = $mol_regexp.repeat_greedy( $hyoo_marked_script_line, 1 )\n\n}\n","namespace $ {\n\n\texport let $hyoo_marked_paragraph = $mol_regexp.from([\n\t\t{ content: $mol_regexp.repeat( $mol_regexp.char_any ) },\n\t\t$mol_regexp.line_end,\n\t])\n\t\n}\n","namespace $ {\n\n\texport let $hyoo_marked_flow = $mol_regexp.from(\n\t\t[\n\t\t\t$mol_regexp.begin,\n\t\t\t{\n\t\t\t\tcut: $hyoo_marked_cut,\n\t\t\t\theader: $hyoo_marked_header,\n\t\t\t\tlist: $hyoo_marked_list,\n\t\t\t\tquote: $hyoo_marked_quote,\n\t\t\t\ttable: $hyoo_marked_table,\n\t\t\t\tscript: $hyoo_marked_script,\n\t\t\t\tparagraph: $hyoo_marked_paragraph,\n\t\t\t},\n\t\t],\n\t\t{ multiline: true },\n\t)\n\n}\n","/** @jsx $mol_jsx */\nnamespace $ {\n\n\tconst NL = '\\n'\n\n\tfunction flow( marked: string ) {\n\t\treturn [ ... marked.matchAll( $hyoo_marked_flow ) ].map( found => {\n\t\t\t\n\t\t\tconst token = found.groups\n\t\t\tif( !token ) return found[0]\n\t\t\t\n\t\t\tif( token.cut ) {\n\t\t\t\treturn <hr/>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.header ) {\n\t\t\t\tconst level = token.marker.length\n\t\t\t\tconst Tag = `h${level}`\n\t\t\t\treturn <Tag>{NL}{ line( token.content ) }{NL}</Tag>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.list ) {\n\t\t\t\tconst Tag = token.list[0] === '+' ? 'ol' : 'ul'\n\t\t\t\treturn <Tag>{NL}{ list_items( token.list ) }{NL}</Tag>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.table ) {\n\t\t\t\treturn <table>{NL}{ table_rows( token.table ) }{NL}</table>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.script ) {\n\t\t\t\treturn <pre>{NL}{ script_lines( token.script ) }{NL}</pre>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.quote ) {\n\t\t\t\treturn <blockquote>{NL}{ flow( token.quote.replace( /^\" /gm, '' ) ) }{NL}</blockquote>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.paragraph ) {\n\t\t\t\t\n\t\t\t\tif( !token.content ) return ''\n\t\t\t\t\n\t\t\t\tconst content = line( token.content )\n\t\t\t\t\n\t\t\t\tif( content.length !== 1 ) return <p>{NL}{ content }{NL}</p>\n\t\t\t\tif( typeof content[0] === 'string' ) return <p>{NL}{ content }{NL}</p>\n\t\t\t\t\t\n\t\t\t\tswitch( content[0].localName ) {\n\t\t\t\t\tcase 'object': return content[0]\n\t\t\t\t\tdefault: return <p>{NL}{ content }{NL}</p>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn $mol_fail( new SyntaxError( `Unknown token` ) )\n\n\t\t} ).filter( Boolean )\n\t}\n\t\n\tfunction table_cells( marked: string ) {\n\t\t\n\t\tconst tokens = [ ... marked.matchAll( $hyoo_marked_table_line ) ]\n\t\tconst cols = [] as ( typeof tokens )[]\n\t\t\n\t\tfor( const token of tokens ) {\n\t\t\tconst index = Math.ceil( token.groups!.indent.length / 2 )\n\t\t\tconst col = cols[ index ] || ( cols[ index ] = [] )\n\t\t\tcol.push( token )\n\t\t}\n\n\t\treturn cols.map( col => {\n\t\t\tconst lines = col.map( line => line.groups!.content )\n\t\t\treturn <td>{NL}{ flow( lines.join( '\\n' ) + '\\n' ) }{NL}</td>\n\t\t} )\n\n\t}\n\t\n\tfunction table_rows( marked: string ) {\n\t\treturn [ ... marked.matchAll( $hyoo_marked_table_row ) ].map( token => {\n\t\t\t\n\t\t\treturn <tr>{NL}{ table_cells( token.groups!.content ) }{NL}</tr>\n\t\t\t\n\t\t} ).filter( Boolean )\n\t}\n\t\n\tfunction list_items( marked: string ) {\n\t\treturn [ ... marked.matchAll( $hyoo_marked_list_item ) ].map( token => {\n\n\t\t\tconst kids = token.groups!.kids.replace( /^  /gm, '' )\n\n\t\t\treturn <li>{NL}{ flow( token.groups!.content.replace( /^  /gm, '' ) + '\\n' ) }{ flow( kids ) }{NL}</li>\n\t\t\t\n\t\t} ).filter( Boolean )\n\t}\n\t\n\tfunction script_lines( marked: string ) {\n\t\treturn [ ... marked.matchAll( $hyoo_marked_script_line ) ].map( token => {\n\n\t\t\tif( token.groups!.marker === '++' ) return <ins>${ token.groups!.content }{NL}</ins>\n\t\t\tif( token.groups!.marker === '--' ) return <del>${ token.groups!.content }{NL}</del>\n\t\t\tif( token.groups!.marker === '**' ) return <strong>${ token.groups!.content }{NL}</strong>\n\n\t\t\treturn <span>{ token.groups!.content }{NL}</span>\n\t\t\t\n\t\t} ).filter( Boolean )\n\t}\n\t\n\tfunction line( marked: string ) {\n\t\treturn [ ... marked.matchAll( $hyoo_marked_line ) ].map( found => {\n\t\t\t\n\t\t\tconst token = found.groups!\n\t\t\tif( !token ) return <span>{ found[0] }</span>\n\t\t\t\n\t\t\tif( token.strong ) {\n\t\t\t\treturn <strong>{ line( token.content ) }</strong>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.emphasis ) {\n\t\t\t\treturn <em>{ line( token.content ) }</em>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.insertion ) {\n\t\t\t\treturn <ins>{ line( token.content ) }</ins>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.deletion ) {\n\t\t\t\treturn <del>{ line( token.content ) }</del>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.code ) {\n\t\t\t\treturn <code>{ token.content }</code>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.link ) {\n\t\t\t\treturn <a href={ token.uri }>{ line( token.content || token.uri ) }</a>\n\t\t\t}\n\t\t\t\n\t\t\tif( token.embed ) {\n\t\t\t\t\n\t\t\t\tif( /\\.(png|jpg|jpeg|webp|gif)$/.test( token.uri ) ) {\n\t\t\t\t\treturn <img src={ token.uri } alt={ token.content } />\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t<object data={ token.uri }>\n\t\t\t\t\t\t{NL}\n\t\t\t\t\t\t<iframe src={ token.uri }>\n\t\t\t\t\t\t\t{ token.uri }\n\t\t\t\t\t\t</iframe>\n\t\t\t\t\t\t{NL}\n\t\t\t\t\t</object>\n\t\t\t\t)\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn token[0]\n\n\t\t} ).filter( Boolean )\n\t}\n\t\n\texport function $hyoo_marked_to_dom(\n\t\tthis: $,\n\t\tmarked: string,\n\t) {\n\t\treturn <body>{ flow( marked + '\\n' ) }</body>\n\t}\n\n}\n","namespace $ {\n\n\texport function $hyoo_marked_to_html(\n\t\tthis: $,\n\t\tmarked: string,\n\t) {\n\t\treturn this.$hyoo_marked_to_dom( marked ).innerHTML\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_dom_serialize(\n\t\tnode: Node\n\t) {\n\t\tconst serializer = new $mol_dom_context.XMLSerializer\n\t\treturn serializer.serializeToString( node )\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_dom_parse(\n\t\ttext : string ,\n\t\ttype : DOMParserSupportedType = 'application/xhtml+xml' ,\n\t) {\n\n\t\tconst parser = new $mol_dom_context.DOMParser()\n\t\tconst doc = parser.parseFromString( text , type )\n\t\t\n\t\tconst error = doc.getElementsByTagName( 'parsererror' )\n\t\tif( error.length ) throw new Error( error[0].textContent! )\n\n\t\treturn doc\n\t}\n\n}\n","/** @jsx $mol_jsx */\n/** @jsxFrag $mol_jsx_frag */\nnamespace $ {\n\texport class $hyoo_crowd_dom extends $hyoo_crowd_node {\n\t\t\n\t\tdom( next?: Element | DocumentFragment ) {\n\t\t\t\n\t\t\tif( next ) {\n\t\t\t\t\n\t\t\t\tconst sample = [] as ( string | Element )[]\n\t\t\t\tfunction collect( next: Element | DocumentFragment ) {\n\t\t\t\t\tfor( const node of next.childNodes ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( node.nodeType === node.TEXT_NODE ) {\n\t\t\t\t\t\t\tfor( const token of node.nodeValue!.matchAll( $hyoo_crowd_tokenizer ) ) {\n\t\t\t\t\t\t\t\tsample.push( token[0] )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif( node.nodeName === 'span' && !Number( ( node as Element ).id ) ) {\n\t\t\t\t\t\t\t\tcollect( node as Element )\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.push( node as Element )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollect( next )\n\t\t\t\t\n\t\t\t\tfunction attr( el: Element ) {\n\t\t\t\t\tlet res = {} as object\n\t\t\t\t\tfor( const a of el.attributes ) {\n\t\t\t\t\t\tif( a.name === 'id' ) continue\n\t\t\t\t\t\tres[ a.name ] = a.value\n\t\t\t\t\t}\n\t\t\t\t\treturn res\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction val( el: Element | string ) {\n\t\t\t\t\treturn typeof el === 'string'\n\t\t\t\t\t\t? el\n\t\t\t\t\t\t: el.nodeName === 'span'\n\t\t\t\t\t\t\t? el.textContent\n\t\t\t\t\t\t\t: [ el.nodeName, attr( el ) ]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet units = this.units()\n\t\t\t\t\n\t\t\t\t$mol_reconcile({\n\t\t\t\t\tprev: units,\n\t\t\t\t\tfrom: 0,\n\t\t\t\t\tto: units.length,\n\t\t\t\t\tnext: sample,\n\t\t\t\t\tequal: ( next, prev )=> typeof next === 'string'\n\t\t\t\t\t\t? prev.data === next\n\t\t\t\t\t\t: String( prev.self ) === next['id'],\n\t\t\t\t\tdrop: ( prev, lead )=> this.land.wipe( prev ),\n\t\t\t\t\tinsert: ( next, lead )=> {\n\t\t\t\t\t\treturn this.land.put(\n\t\t\t\t\t\t\tthis.head,\n\t\t\t\t\t\t\ttypeof next === 'string'\n\t\t\t\t\t\t\t\t? this.land.id_new()\n\t\t\t\t\t\t\t\t: $mol_int62_string_ensure( ( next as Element ).id )\n\t\t\t\t\t\t\t\t\t?? this.land.id_new(),\n\t\t\t\t\t\t\tlead?.self ?? '0_0',\n\t\t\t\t\t\t\tval( next ),\n\t\t\t\t\t\t)\n\t\t\t\t\t},\n\t\t\t\t\tupdate: ( next, prev, lead )=> this.land.put(\n\t\t\t\t\t\tprev.head,\n\t\t\t\t\t\tprev.self,\n\t\t\t\t\t\tlead?.self ?? '0_0',\n\t\t\t\t\t\tval( next ),\n\t\t\t\t\t),\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tunits = this.units()\n\t\t\t\tfor( let i = 0; i < units.length; ++i ) {\n\t\t\t\t\tconst sam = sample[i]\n\t\t\t\t\tif( typeof sam !== 'string' ) {\n\t\t\t\t\t\t$hyoo_crowd_dom.for( this.land, units[i].self ).dom( sam )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn <>{\n\t\t\t\t\tthis.units().map( unit => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst Tag = typeof unit.data === 'string'\n\t\t\t\t\t\t\t? 'span'\n\t\t\t\t\t\t\t: ( unit.data as string[] )[0] ?? 'p'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tconst attr = typeof unit.data === 'string'\n\t\t\t\t\t\t\t? {}\n\t\t\t\t\t\t\t: ( unit.data as {}[] )[1] ?? {}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tconst content = typeof unit.data === 'string'\n\t\t\t\t\t\t\t? unit.data\n\t\t\t\t\t\t\t: $hyoo_crowd_dom.for( this.land, unit.self ).dom()\n\t\t\t\t\t\t\t\n\t\t\t\t\t\treturn <Tag { ... attr } id={ unit.self } >{ content }</Tag>\n\t\t\t\t\t\t\n\t\t\t\t\t} )\n\t\t\t\t}</>\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\thtml( next?: string ) {\n\t\t\t\n\t\t\tconst dom = this.as( $hyoo_crowd_dom )\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\treturn $mol_dom_serialize( <body>{ dom.dom() }</body> )\n\t\t\t} else {\n\t\t\t\tdom.dom( $mol_dom_parse( next ).documentElement )\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\texport class $hyoo_sync_server extends $hyoo_sync_yard< InstanceType< $node['ws'] > > {\n\t\t\n\t\tlog_pack( data: any ) {\n\t\t\tif( data instanceof Array ) return data.length\n\t\t\treturn $mol_key( data )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\thttp() {\n\t\t\t\n\t\t\tconst server = $node.http.createServer( $mol_wire_async( (\n\t\t\t\treq: InstanceType< $node['http']['IncomingMessage'] >,\n\t\t\t\tres: InstanceType< $node['http']['ServerResponse'] >,\n\t\t\t)=> {\n\t\t\t\t\n\t\t\t\tconst world = this.world()\n\t\t\t\t\n\t\t\t\tconst query_str = req.url!.slice(1)\n\t\t\t\t\n\t\t\t\t// this.$.$mol_log3_rise({\n\t\t\t\t// \tplace: this,\n\t\t\t\t// \tmessage: 'HTTP Query',\n\t\t\t\t// \tquery: req.url,\n\t\t\t\t// })\n\t\t\t\t\n\t\t\t\tif( /^(?:watch|auth)\\/(?:(?:\\w+\\.)+\\w+)?/.test( query_str ) ) {\n\t\t\t\t\t\n\t\t\t\t\tconst ext = query_str.match(/\\.(\\w+)$/)?.[1] ?? ''\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst content = $node.fs.readFileSync( __dirname + '/' + query_str.replace( /\\/$/, '/index.html' ) ).toString()\n\t\t\t\t\t\t\n\t\t\t\t\t\tres.writeHead( 200, {\n\t\t\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t\t\t'Content-Type': {\n\t\t\t\t\t\t\t\tjs: 'application/javascript',\n\t\t\t\t\t\t\t\thtml: 'text/html',\n\t\t\t\t\t\t\t}[ ext ] ?? '',\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t\n\t\t\t\t\t\tres.end( content )\n\t\t\t\t\t\t\n\t\t\t\t\t} catch( error: any ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tres.writeHead( 500 ).end( error.message ?? error )\n\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst query = $hyoo_harp_from_string( query_str ) as $hyoo_harp_query<string> & {\n\t\t\t\t\tblob: {\n\t\t\t\t\t\tland: $hyoo_harp_query<string>,\n\t\t\t\t\t\thead: $hyoo_harp_query<string>,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( query.log ) {\n\t\t\t\t\t\n\t\t\t\t\tres.writeHead( 200, {\n\t\t\t\t\t\t'Content-Type': 'text/plain;charset=utf-8',\n\t\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t} )\n\t\t\t\t\t\n\t\t\t\t\tconst path = this.$.$mol_state_arg.value( 'log' )\n\t\t\t\t\tif( !path ) return res.end( '\\\\Use `log` parameter to provide path to server logs in tree format\\n' )\n\t\t\t\t\t\n\t\t\t\t\tres.end( $node.fs.readFileSync( path ).toString() )\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( query.blob ) {\n\t\t\t\t\t\n\t\t\t\t\tconst land_id = query.blob.land[\"=\"]![0][0]\n\t\t\t\t\tif( !land_id ) $mol_fail( new Error( 'land is required' ) )\n\t\t\t\t\t\n\t\t\t\t\tconst head_id = query.blob.head[\"=\"]![0][0]\n\t\t\t\t\tif( !head_id ) $mol_fail( new Error( 'head is required' ) )\n\t\t\t\t\t\n\t\t\t\t\tconst land = world.land( land_id )\n\t\t\t\t\tconst node = land.node( head_id, $hyoo_crowd_blob )\n\t\t\t\t\tconst type = node.type()\n\t\t\t\t\t\n\t\t\t\t\tres.writeHead( 200, {\n\t\t\t\t\t\t'Content-Type': type,\n\t\t\t\t\t\t'Content-Disposition': /^(image|video)\\//.test( type ) ? '' : 'attachment',\n\t\t\t\t\t\t'Cache-Control': 'public, proxy-revalidate, max-age=1000', // 15min\n\t\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t} )\n\t\t\t\t\t\n\t\t\t\t\tres.end( node.buffer() )\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( !query.land ) {\n\t\t\t\t\tres.writeHead( 301, {\n\t\t\t\t\t\t'Content-Type': 'text/plain;charset=utf-8',\n\t\t\t\t\t\t'Location': '/watch/',\n\t\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t} )\n\t\t\t\t\tres.end( '$hyoo_sync_server ' + $hyoo_sync_revision )\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst entry = query.land[\"=\"]![0][0]\n\t\t\t\tconst land = world.land( entry )\n\t\t\t\t\n\t\t\t\tconst reply = {\n\t\t\t\t\t[ entry ]: {}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst accept = req.headers.accept ?? 'application/json'\n\t\t\t\t\n\t\t\t\tconst proceed = ( data: {}, node: $hyoo_crowd_struct, query: $hyoo_harp_query )=> {\n\t\t\t\t\t\n\t\t\t\t\tfor( let fetch in query ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( /^!?=$/.test( fetch ) ) continue\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst [ _, field, type ] = fetch.match( /^(\\w+)_([a-z]+)$/ ) ?? [ '', fetch, '' ]\n\t\t\t\t\t\tif( !type ) continue\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch( type ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'reg':\n\t\t\t\t\t\t\t\tdata[ fetch ] = node.sub( field, $hyoo_crowd_reg ).value()\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'ref':\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst id = node.sub( field, $hyoo_crowd_reg ).value()\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( typeof id !== 'string' ) {\n\t\t\t\t\t\t\t\t\tdata[ fetch ] = null\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst sub = reply[ id ] = {}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst land = world.land( id as $mol_int62_string )\n\t\t\t\t\t\t\t\tif( !land ) continue\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tproceed( sub, land.chief, query[ fetch ] )\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'list':\n\t\t\t\t\t\t\t\tdata[ fetch ] = node.sub( field, $hyoo_crowd_list ).list()\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\t\tdata[ fetch ] = node.sub( field, $hyoo_crowd_json ).json()\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'text':\n\t\t\t\t\t\t\t\tdata[ fetch ] = node.sub( field, $hyoo_crowd_text ).text()\n\t\t\t\t\t\t\t\tif( accept === 'text/html' ) data[ fetch ] = this.$.$hyoo_marked_to_html( data[ fetch ] )\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'html':\n\t\t\t\t\t\t\t\tdata[ fetch ] = node.sub( field, $hyoo_crowd_dom ).html()\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'blob':\n\t\t\t\t\t\t\t\tconst blob = node.sub( field, $hyoo_crowd_blob )\n\t\t\t\t\t\t\t\tconst type = blob.type()\n\t\t\t\t\t\t\t\tif( /^text\\//.test( type ) ) {\n\t\t\t\t\t\t\t\t\tdata[ fetch ] = blob.str()\n\t\t\t\t\t\t\t\t\tif( type === 'text/plain' && accept === 'text/html' ) {\n\t\t\t\t\t\t\t\t\t\tdata[ fetch ] = this.$.$hyoo_marked_to_html( data[ fetch ] )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdata[ fetch ] = blob.buffer()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tproceed( reply[ entry ], land.chief, query.land )\n\t\t\t\t\n\t\t\t\tconst response = {\n\t\t\t\t\t_query: {\n\t\t\t\t\t\t[ query_str ]: {\n\t\t\t\t\t\t\treply: [ `land=${ entry }` ],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tland: reply,\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tswitch( accept ) {\n\t\t\t\t\t\n\t\t\t\t\tcase 'text/html':\n\t\t\t\t\t\n\t\t\t\t\t\tres.writeHead( 200, {\n\t\t\t\t\t\t\t'Content-Type': 'text/html;charset=utf-8',\n\t\t\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t\t} )\n\t\t\t\t\t\tconst html = Object.entries( reply ).flatMap( ([ id, props ])=> [\n\t\t\t\t\t\t\t`<land id=\"land=${id}\">`,\n\t\t\t\t\t\t\t\t... Object.entries( props ).flatMap( ([ name, value ])=> {\n\t\t\t\t\t\t\t\t\tconst tag = name.replace( /_.*$/, '' )\n\t\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t`<${tag} id=\"land=${id}[${name}]\">`,\n\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t\t`</${tag}>`,\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\t`</land>`,\n\t\t\t\t\t\t] )\n\t\t\t\t\t\tres.end( html.join('') )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t\n\t\t\t\t\tdefault:case 'application/json':\n\t\t\t\t\t\n\t\t\t\t\t\tres.writeHead( 200, {\n\t\t\t\t\t\t\t'Content-Type': 'application/json;charset=utf-8',\n\t\t\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t\t} )\n\t\t\t\t\t\tres.end( JSON.stringify( response, null, '\\t' ) )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t\t\n\t\t\t} ) )\n\t\t\t\n\t\t\tserver.listen( this.port() )\n\t\t\t\n\t\t\tthis.$.$mol_log3_come({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'Server Started',\n\t\t\t\tlink: 'http://0.0.0.0:' + this.port() + '/',\n\t\t\t})\n\t\t\t\n\t\t\treturn server\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tdb_link() {\n\t\t\treturn $mol_state_arg.value( 'db' ) || process.env.DATABASE_URL\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tasync db() {\n\t\t\t\n\t\t\tconst link = this.db_link()\n\t\t\tif( !link ) return null\n\t\t\t\n\t\t\tconst db = new $node.pg.Pool({\n\t\t\t\tconnectionString: link,\n\t\t\t\tssl: { rejectUnauthorized: false },\n\t\t\t})\n\t\t\t\n\t\t\tawait db.connect()\n\t\t\t\n\t\t\tawait db.query(`\n\t\t\t\tCREATE TABLE IF NOT EXISTS Unit2 (\n\t\t\t\t\tland varchar(16) NOT NULL, auth varchar(16) NOT NULL,\n\t\t\t\t\thead varchar(16) NOT NULL, self varchar(16) NOT NULL,\n\t\t\t\t\tnext varchar(16) NOT NULL, prev varchar(16) NOT NULL,\n\t\t\t\t\ttime int4 NOT NULL, data jsonb,\n\t\t\t\t\tbin bytea NOT NULL\n\t\t\t\t);\n\t\t\t`)\n\t\t\t\n\t\t\tawait db.query(`\n\t\t\t\tCREATE UNIQUE INDEX IF NOT EXISTS LandHeadSelf2 ON Unit2 ( land, head, self );\n\t\t\t`)\n\t\t\t\n\t\t\tawait db.query(`\n\t\t\t\tCREATE INDEX IF NOT EXISTS Land2 ON Unit2 ( land );\n\t\t\t`)\n\t\t\t\n\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'Base Ready',\n\t\t\t})\n\t\t\t\n\t\t\treturn db\n\t\t}\n\t\t\n\t\tasync db_land_load( land: $hyoo_crowd_land ): Promise< $hyoo_crowd_unit[] >  {\n\t\t\t\n\t\t\tconst link = this.db_link()\n\t\t\tif( !link ) return []\n\t\t\t\n\t\t\tconst db = await this.db()\n\t\t\tif( !db ) return []\n\n\t\t\tconst res = await db.query<{ bin: Uint8Array }>(\n\t\t\t\t`SELECT bin FROM Unit2 WHERE land = $1::varchar(16)`,\n\t\t\t\t[ land.id() ],\n\t\t\t)\n\t\t\t\n\t\t\tconst units = res.rows.map( row => {\n\t\t\t\t\n\t\t\t\tconst bin = new $hyoo_crowd_unit_bin(\n\t\t\t\t\trow.bin.buffer,\n\t\t\t\t\trow.bin.byteOffset,\n\t\t\t\t\trow.bin.byteLength,\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\treturn bin.unit()\n\t\t\t})\n\t\t\t\n\t\t\treturn units\n\t\t}\n\t\t\n\t\tasync db_land_save( land: $hyoo_crowd_land, units: readonly $hyoo_crowd_unit[] ) {\n\t\t\t\n\t\t\tconst link = this.db_link()\n\t\t\tif( !link ) return\n\t\t\t\n\t\t\tconst db = await this.db()\n\t\t\tif( !db ) return\n\t\t\t\n\t\t\tconst tasks = units.map( unit => {\n\t\t\t\treturn db.query(\n\t\t\t\t\t`\n\t\t\t\t\t\tINSERT INTO Unit2 VALUES(\n\t\t\t\t\t\t\t$1::varchar(16), $2::varchar(16),\n\t\t\t\t\t\t\t$3::varchar(16), $4::varchar(16),\n\t\t\t\t\t\t\t$5::varchar(16), $6::varchar(16),\n\t\t\t\t\t\t\t$7::int4, $8::jsonb,\n\t\t\t\t\t\t\t$9::bytea\n\t\t\t\t\t\t)\n\t\t\t\t\t\tON CONFLICT( land, head, self ) DO UPDATE\n\t\t\t\t\t\tSET\n\t\t\t\t\t\t\tauth = $2::varchar(16),\n\t\t\t\t\t\t\tnext = $5::varchar(16),\n\t\t\t\t\t\t\tprev = $6::varchar(16),\n\t\t\t\t\t\t\ttime = $7::int4,\n\t\t\t\t\t\t\tdata = $8::jsonb,\n\t\t\t\t\t\t\tbin = $9::bytea\n\t\t\t\t\t\t;\n\t\t\t\t\t`,\n\t\t\t\t\t[\n\t\t\t\t\t\tunit.land, unit.auth,\n\t\t\t\t\t\tunit.head, unit.self,\n\t\t\t\t\t\tunit.next, unit.prev,\n\t\t\t\t\t\tunit.time, unit.data instanceof Uint8Array ? null : JSON.stringify( unit.data ),\n\t\t\t\t\t\tBuffer.from( unit.bin!.buffer ),\n\t\t\t\t\t]\n\t\t\t\t)\n\t\t\t} )\n\t\t\t\n\t\t\tawait Promise.all( tasks )\n\t\t  \n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tserver() {\n\t\t\t\n\t\t\tthis.world()\n\n\t\t\tconst socket = new $node.ws.Server({\n\t\t\t\tserver : this.http() ,\n\t\t\t})\n\n\t\t\tsocket.on( 'connection' , line => {\n\n\t\t\t\t// this.$.$mol_log3_come({\n\t\t\t\t// \tplace: this,\n\t\t\t\t// \tmessage: 'Peer Join',\n\t\t\t\t// \tline: $mol_key( line ),\n\t\t\t\t// })\n\t\t\t\t\n\t\t\t\tthis.slaves([ ... this.slaves(), line ])\n\t\t\t\t\n\t\t\t\tline.on( 'close', ()=> {\n\t\t\t\t\t\n\t\t\t\t\tthis.slaves( this.slaves().filter( l => l !== line ) )\n\t\t\t\t\t\n\t\t\t\t\t// this.$.$mol_log3_done({\n\t\t\t\t\t// \tplace: this,\n\t\t\t\t\t// \tmessage: 'Peer Lost',\n\t\t\t\t\t// \tline: $mol_key( line ),\n\t\t\t\t\t// })\n\t\t\t\t\t\t\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tline.on( 'message', async( data, isBinary )=> {\n\t\t\t\t\t\n\t\t\t\t\tif( typeof data === 'string' ) return\n\t\t\t\t\tif( data instanceof Array ) return\n\t\t\t\t\tif( data instanceof ArrayBuffer ) return\n\t\t\t\t\t\n\t\t\t\t\tawait this.line_receive( line, data )\n\t\t\t\t\t\n\t\t\t\t} )\n\n\t\t\t} )\n\n\t\t\treturn socket\n\t\t}\n\t\t\n\t\tline_send_clocks(\n\t\t\tline: InstanceType< $node['ws'] >,\n\t\t\tland: $hyoo_crowd_land,\n\t\t) {\n\t\t\tconst bin = $hyoo_crowd_clock_bin.from( land.id(), land._clocks )\n\t\t\tline.send( new Uint8Array( bin.buffer ), { binary: true } )\n\t\t}\n\t\t\n\t\tasync line_send_units(\n\t\t\tline: InstanceType< $node['ws'] >,\n\t\t\tunits: readonly $hyoo_crowd_unit[],\n\t\t) {\n\t\t\tawait this.world().sign_units( units )\n\t\t\tconst message = new $node.buffer.Blob( units.map( unit => unit.bin! ) ) \n\t\t\tline.send( await message.arrayBuffer(), { binary: true } )\n\t\t}\n\t\t\n\t\tport() { return 0 }\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic port( port: number ) {\n\t\t\tconst server = new this\n\t\t\tserver.port = $mol_const( port )\n\t\t\treturn server\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic run( port: number ) {\n\t\t\ttry {\n\t\t\t\tthis.port( port ).db()\n\t\t\t\tthis.port( port ).sync()\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\tlet port = Number( $mol_state_arg.value( 'port' ) || process.env.PORT )\n\tif( port ) $hyoo_sync_server.run( port )\n\t\n}\n"]}